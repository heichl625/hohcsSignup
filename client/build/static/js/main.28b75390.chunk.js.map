{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/ApplicationForm.jsx","components/Register.jsx","components/protected-route.jsx","components/admin-route.jsx","components/Auth.jsx","components/Login.jsx","components/Adminastrative/Navigator.jsx","components/Adminastrative/WaitingList.jsx","components/Adminastrative/EnrollDetail.jsx","components/Adminastrative/CourseDetail.jsx","components/Adminastrative/Admin.jsx","components/Adminastrative/CreateCourse.jsx","components/Adminastrative/History.jsx","components/Adminastrative/Future.jsx","components/RegisterWaitinglistRecord.jsx","components/RegisterRecordDetail.jsx","components/RegisterRecord.jsx","components/App.jsx","index.js"],"names":["Header","useState","isLoggedOut","setLoggedOut","console","log","Navbar","bg","variant","Brand","href","Nav","className","Link","Button","onClick","localStorage","clear","to","Footer","props","getItem","ApplicationForm","courseList","setCourseList","username","email","staffid","post","dept","course","newValue","setNewValue","isDataObtained","setIsDataObtained","fields","role","checkQuota","courseInfo","split","courseName","courseDate","options","method","headers","body","qs","stringify","fetch","then","res","status","json","alert","quota","enrollment","registeredBy","clearInput","waitinglist","courseID","_id","enroll","prevValue","handleChange","event","target","name","value","useEffect","setItem","length","dateStr","Date","date","toLocaleDateString","src","Form","onSubmit","preventDefault","FormGroup","Label","Control","placeholder","size","onChange","InputGroup","type","Append","Text","as","map","Register","password","userData","setUserData","isRegistered","setRegister","Fragment","user","token","Group","ProtectedRoute","Component","component","rest","render","AdminRoute","this","authenticated","cb","Login","auth","isAuthenticated","isDirected","redirect","setRedirect","reLogin","setRelogin","action","Navigatior","WaitingList","isBack","setIsBack","records","setRecords","EnrollDetail","courseDetail","Card","Body","Table","striped","bordered","hover","record","enrollRecords","setEnrollRecords","setWaitingList","CourseDetail","selectedCourse","getCourseDetail","setGetCourseDetail","setCourseDetail","window","location","reload","Title","description","time","venue","tutor","message","Admin","initialCourse","couseName","courses","setCourses","selectedID","setSelectedID","courseToParse","setCourseToParse","find","defaultActiveKey","onSelect","selectedKey","eventKey","CreateCourse","newCourse","setNewCourse","isCreated","setIsCreated","cousreName","FormControl","aria-label","rows","History","Future","RegisterWaitinglistRecord","loaded","setLoaded","details","setDetails","setCourseID","noResult","setNoResult","RegisterRecordDetail","detail","waitingList","RegisterRecord","period","setPeriod","isLoaded","setIsLoaded","noCourse","setNoCourse","handleClick","handleSidebarClick","App","axios","get","catch","error","removeItem","exact","path","ReactDOM","document","getElementById"],"mappings":"gPAmCeA,MA7Bf,WAAkB,IAAD,EAEuBC,mBAAS,SAFhC,mBAENC,EAFM,KAEOC,EAFP,KAab,OATAC,QAAQC,IAAI,UAWZ,kBAACC,EAAA,EAAD,CAAQC,GAAG,UAAUC,QAAQ,QACzB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,KAAnB,4EACA,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACD,EAAA,EAAIE,KAAL,CAAUH,KAAK,oBAAf,6BAEJ,kBAACI,EAAA,EAAD,CAAQN,QAAQ,gBAAgBO,QAbpC,WACIC,aAAaC,QACbd,EAAa,UAWb,gBAEkB,SAAhBD,GAA0B,kBAAC,IAAD,CAAUgB,GAAG,a,QCnBlCC,MANf,SAAgBC,GACZ,OAAO,gCACFJ,aAAaK,QAAQ,YAAc,kBAAC,IAAD,CAAMH,GAAG,SAASN,UAAU,aAA5B,oC,wCCqW7BU,MAjWf,WAA2B,IAAD,EAGcrB,mBAAS,CAAC,KAHxB,mBAGfsB,EAHe,KAGHC,EAHG,OAKUvB,mBAAS,CACrCwB,SAAU,GACVC,MAAO,GACPC,QAAS,GACTC,KAAM,GACNC,KAAM,GACNC,OAAQ,KAXU,mBAKfC,EALe,KAKLC,EALK,OAcsB/B,oBAAS,GAd/B,mBAcfgC,EAde,KAcCC,EAdD,KAiBhBC,EAAS,CAAC,eAAM,eAAM,2BAAQ,eAAM,eAAM,4BAC5CC,EAAO,GAkKX,SAASC,IAEL,IAAMC,EAAaP,EAASD,OAAOS,MAAM,KAEzCnC,QAAQC,IAAI,SAAYiC,EAAW,IAEnC,IAAME,EAAaT,EAASD,OAAOS,MAAM,KAAK,GACxCE,EAAaV,EAASD,OAAOS,MAAM,KAAK,GAGxCG,EAAU,CACZC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,qCAElBC,KAAMC,IAAGC,UAAU,CACfP,WAAYA,EACZC,WAAYA,KAIpBO,MAbY,cAaDN,GACVO,MAAK,SAAAC,GACF,OAAkB,MAAfA,EAAIC,OACID,EAAIE,QAEXC,MAAM,sEACC,YAGdJ,MAAK,SAAAC,GACF9C,QAAQC,IAAI6C,GACK,IAAdA,EAAII,MA9Ef,SAAqBd,EAAYC,GAE7B,IACMC,EAAU,CACZC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,qCAElBC,KAAMC,IAAGC,UAAU,CACfP,WAAYA,EACZC,WAAYA,EACZc,WAAYxB,EACZyB,aAAcxC,aAAaK,QAAQ,eAI3C2B,MAfY,eAeDN,GACVO,MAAK,SAAAC,GACgB,MAAfA,EAAIC,QACHE,MAAM,wOACNI,KAcAJ,MAAM,yEA4CNK,CAAYlB,EAAYC,GACX,UAARS,IACL9C,QAAQC,IAAI,YA3HxB,SAAgByB,GAEZ1B,QAAQC,IAAIyB,GAEZ,IACMY,EAAU,CACZC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,qCAElBC,KAAMC,IAAGC,UAAU,CACfY,SAAU7B,EAAO8B,IACjBL,WAAYxB,EACZyB,aAAcxC,aAAaK,QAAQ,eAI3C2B,MAdY,UAcDN,GACVO,MAAK,SAAAC,GACgB,MAAfA,EAAIC,QACHE,MAAM,wCACNI,KAcAJ,MAAM,6FAwFNQ,CAAOX,OAanB,SAASO,IAELzB,GAAY,SAAA8B,GAER,OAAO,2BACAA,GADP,IAEIrC,SAAU,GACVC,MAAO,GACPC,QAAS,GACTC,KAAM,GACNC,KAAM,GACNC,OAAQ,QAQpB,SAASiC,EAAaC,GAAO,IAAD,EAEFA,EAAMC,OAArBC,EAFiB,EAEjBA,KAAMC,EAFW,EAEXA,MAEbnC,GAAY,SAAA8B,GACR,kCACOA,GADP,kBAEKI,EAAOC,OAIhB/D,QAAQC,IAAI0B,GAGhB,OAjNAqC,qBAAW,WAIP,GAFAhE,QAAQC,IAAI,WAER4B,EAAe,CACf,IACMS,EAAU,CACZC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,qCAElBC,KAAMC,IAAGC,UAAU,CAACtB,SAAUT,aAAaK,QAAQ,eAGvD2B,MAVY,QAUDN,GACVO,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAC,GAIU,WAFZd,EAAOc,EAAId,OAGPpB,aAAaqD,QAAQ,WAAW,GAGpCrC,EAAY,CACRP,SAAUyB,EAAIgB,KACdxC,MAAOwB,EAAIzB,SACXE,QAASuB,EAAIvB,QACbC,KAAMsB,EAAItB,KACVC,KAAMqB,EAAIrB,KACVC,OAAQ,QAvDpBkB,MARwB,gBACI,CACxBL,OAAQ,MACRC,QAAS,CACP,OAAU,sBAKfK,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAC,GACCA,EAAIoB,OAAS,IACRlE,QAAQC,IAAI,kBAAoB6C,EAAI,GAAGV,YACvChB,EAAc0B,GACdlB,GAAY,SAAA8B,GAER,IACMS,EADO,IAAIC,KAAKtB,EAAI,GAAGuB,MACRC,qBAErB,kCACOZ,GADP,IAEIhC,OAAQoB,EAAI,GAAGV,WAAa,IAAM+B,OAG1CnE,QAAQC,IAAI,iBAAmB4B,GAC/B7B,QAAQC,IAAIkB,IAEpBW,GAAkB,UAuNtB,6BACJ,kBAAC,EAAD,MACA,yBAAKyC,IAAI,uGAAuG/D,UAAU,aAG1H,kBAACgE,EAAA,EAAD,CAAMhE,UAAU,YAAYiE,SA9C5B,SAAsBb,GAElBA,EAAMc,iBACNzC,MA6CA,yBAAKzB,UAAU,YACX,yBAAKA,UAAU,aACX,kBAACmE,EAAA,EAAD,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,iBACA,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAa/C,EAAO,GAAIgD,KAAK,KAAKC,SAAUrB,EAAcI,MAAOpC,EAASN,SAAUyC,KAAK,eAI/G,yBAAKtD,UAAU,cAEf,yBAAKA,UAAU,aACX,kBAACmE,EAAA,EAAD,CAAWnE,UAAU,aACjB,kBAACgE,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,iBACA,kBAACyE,EAAA,EAAD,KACI,kBAACT,EAAA,EAAKK,QAAN,CAAcC,YAAa/C,EAAO,GAAIgD,KAAK,KAAKjB,KAAK,QAAQoB,KAAK,OAAOF,SAAUrB,EAAcI,MAAOpC,EAASL,MAAOd,UAAU,UAClI,kBAACyE,EAAA,EAAWE,OAAZ,KACI,kBAACF,EAAA,EAAWG,KAAZ,2BAOpB,yBAAK5E,UAAU,YAEX,yBAAKA,UAAU,aACX,kBAACmE,EAAA,EAAD,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,6BACA,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAa/C,EAAO,GAAIgD,KAAK,KAAKC,SAAUrB,EAAcI,MAAOpC,EAASJ,QAASuC,KAAK,cAI9G,yBAAKtD,UAAU,cAEf,yBAAKA,UAAU,aACX,kBAACmE,EAAA,EAAD,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,iBACA,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAa/C,EAAO,GAAIgD,KAAK,KAAKC,SAAUrB,EAAcI,MAAOpC,EAASH,KAAMsC,KAAK,YAO/G,yBAAKtD,UAAU,YAEX,yBAAKA,UAAU,aACX,kBAACmE,EAAA,EAAD,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,iBACA,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAa/C,EAAO,GAAIgD,KAAK,KAAKC,SAAUrB,EAAcI,MAAOpC,EAASF,KAAMqC,KAAK,WAI3G,yBAAKtD,UAAU,cAEf,yBAAKA,UAAU,aACX,kBAACmE,EAAA,EAAD,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,6BACA,kBAACgE,EAAA,EAAKK,QAAN,CAAcE,KAAK,KAAKC,SAAUrB,EAAcI,MAAOpC,EAASD,OAAQoC,KAAK,SAASuB,GAAG,UACrF,kEACClE,EAAW+C,OAAS,GAAK/C,EAAWmE,KAAI,SAAA5D,GACrC,IAAI2C,EAAO,IAAID,KAAK1C,EAAO2C,MAC3B,OAAO,gCAAS3C,EAAOU,WAAhB,IAA6BiC,EAAKC,6BAQ7D,yBAAK9D,UAAU,cACX,kBAACE,EAAA,EAAD,CAAQN,QAAQ,UAAU2E,KAAK,KAAKG,KAAK,SAAS1E,UAAU,aAA5D,gBAEA,kBAACE,EAAA,EAAD,CAAQN,QAAQ,SAAS2E,KAAK,KAAKpE,QAAS0C,EAAY7C,UAAU,YAAlE,0CAIR,kBAAC,EAAD,CAAQwB,KAAMA,MC9VH,SAASuD,IAAW,IAAD,EAEE1F,mBAAS,CAErCwB,SAAU,GACVmE,SAAU,GACVjE,QAAS,GACTuC,KAAM,GACNtC,KAAM,GACNC,KAAM,KAToB,mBAEvBgE,EAFuB,KAEbC,EAFa,OAaM7F,oBAAS,GAbf,mBAavB8F,EAbuB,KAaTC,EAbS,KAe9B,SAASjC,EAAaC,GAAO,IAAD,EAEFA,EAAMC,OAArBC,EAFiB,EAEjBA,KAAMC,EAFW,EAEXA,MAEb2B,GAAY,SAAAhC,GACR,kCACOA,GADP,kBAEKI,EAAOC,OAIhB/D,QAAQC,IAAIwF,GAqChB,OACI,kBAAC,IAAMI,SAAP,KAEI,yBAAKtB,IAAI,uGAAuG/D,UAAU,kBAEtH,kBAACgE,EAAA,EAAD,CAAMC,SAvClB,SAAwBb,GAEpBA,EAAMc,iBAEN,IAAMoB,EAAO,CACTzE,SAAUoE,EAASpE,SACnBmE,SAAUC,EAASD,SACnBjE,QAASkE,EAASlE,QAClBuC,KAAM2B,EAAS3B,KACftC,KAAMiE,EAASjE,KACfC,KAAMgE,EAAShE,MAIba,EAAU,CACZC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,qCAElBC,KAAMC,IAAGC,UAAUmD,IAGvBlD,MAVY,YAUDN,GACVO,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAC,GACFlC,aAAaqD,QAAQ,YAAanB,EAAIiD,OACtCnF,aAAaqD,QAAQ,gBAAgB,GACrCrD,aAAaqD,QAAQ,WAAYnB,EAAIgD,KAAKzE,UAC1CuE,GAAY,GACZ5F,QAAQC,IAAI,0BAWI,kBAACuE,EAAA,EAAKwB,MAAN,CAAYxF,UAAU,cAClB,kBAACgE,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,iBACA,kBAACyE,EAAA,EAAD,KACI,kBAACT,EAAA,EAAKK,QAAN,CAAcC,YAAY,iCAAQtE,UAAU,QAAQsD,KAAK,WAAWkB,SAAUrB,EAAcI,MAAO0B,EAASpE,WAC5G,kBAAC4D,EAAA,EAAWE,OAAZ,KACI,kBAACF,EAAA,EAAWG,KAAZ,yBAMZ,kBAACZ,EAAA,EAAKwB,MAAN,CAAYxF,UAAU,cAClB,kBAACgE,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,iBACA,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAY,iCAAQE,SAAUrB,EAAcG,KAAK,WAAWC,MAAO0B,EAASD,SAAUN,KAAK,WAAW1E,UAAU,WAKlI,kBAACgE,EAAA,EAAKwB,MAAN,CAAYxF,UAAU,cAClB,kBAACgE,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,iBACA,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAY,iCAAQE,SAAUrB,EAAcG,KAAK,OAAOC,MAAO0B,EAAS3B,KAAMoB,KAAK,OAAO1E,UAAU,WAItH,kBAACgE,EAAA,EAAKwB,MAAN,CAAYxF,UAAU,cAClB,kBAACgE,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,kBACA,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAY,iCAAQE,SAAUrB,EAAcG,KAAK,OAAOC,MAAO0B,EAAShE,KAAMyD,KAAK,OAAO1E,UAAU,WAGtH,kBAACgE,EAAA,EAAKwB,MAAN,CAAYxF,UAAU,cAClB,kBAACgE,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,kBACA,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAY,iCAAQE,SAAUrB,EAAcG,KAAK,OAAOC,MAAO0B,EAASjE,KAAM0D,KAAK,OAAO1E,UAAU,WAItH,kBAACgE,EAAA,EAAKwB,MAAN,CAAYxF,UAAU,cAClB,kBAACgE,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,8BACA,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAY,6CAAUE,SAAUrB,EAAcG,KAAK,UAAUC,MAAO0B,EAASlE,QAAS2D,KAAK,OAAO1E,UAAU,WAGlI,kBAACE,EAAA,EAAD,CAAQN,QAAQ,UAAU2E,KAAK,KAAKvE,UAAU,cAAc0E,KAAK,UAAjE,gBAENS,GAAgB,kBAAC,IAAD,CAAU7E,GAAG,Q,YCpHlCmF,EAAiB,SAAC,GAAqC,IAAzBC,EAAwB,EAAnCC,UAAyBC,EAAU,6BAE/D,OACI,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OACb,SAACrF,GACG,OAAGJ,aAAaK,QAAQ,gBACb,kBAACiF,EAAclF,GAEf,kBAAC,IAAD,CAAUF,GAAG,gBCR3BwF,EAAa,SAAC,GAAqC,IAAzBJ,EAAwB,EAAnCC,UAAyBC,EAAU,6BAE3D,OACI,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OACb,SAACrF,GACG,OAAGJ,aAAaK,QAAQ,YACpBjB,QAAQC,IAAI,YAAcW,aAAaK,QAAQ,YACxC,kBAACiF,EAAclF,IAEf,kBAAC,IAAD,CAAUF,GAAG,W,gBCQzB,M,WAnBX,aAAc,oBACVyF,KAAKC,eAAgB,E,kDAGnBC,GACFF,KAAKC,eAAgB,EACrBC,M,6BAGGA,GACHF,KAAKC,eAAgB,EACrBC,M,wCAIA,OAAOF,KAAKC,kB,MCwHLE,MAhIf,WAEI1G,QAAQC,IAAI,oCAAsC0G,EAAKC,mBAF1C,MAImB/G,mBAAS,CAErCwB,SAAU,GACVmE,SAAU,KAPD,mBAINC,EAJM,KAIIC,EAJJ,OAWmB7F,mBAAS,CACrCiB,GAAI,GACJ+F,WAAY,OAbH,mBAWNC,EAXM,KAWIC,EAXJ,OAgBiBlH,oBAAS,GAhB1B,mBAgBNmH,EAhBM,KAgBGC,EAhBH,KAkBb,GAAGrG,aAAaK,QAAQ,gBACpB,OAAO,kBAAC,IAAD,CAAUH,GAAG,MAIxB,SAAS6C,EAAaC,GAAO,IAAD,EAEFA,EAAMC,OAArBC,EAFiB,EAEjBA,KAAMC,EAFW,EAEXA,MAEb2B,GAAY,SAAAhC,GACR,OAAO,2BACAA,GADP,kBAEKI,EAAOC,OAIhB/D,QAAQC,IAAIwF,GAsDhB,OACI,kBAAC,IAAMI,SAAP,KACA,yBAAKtB,IAAI,uGAAuG/D,UAAU,SAE5HwG,GAAW,uBAAGxG,UAAU,cAAb,8FAGT,kBAACgE,EAAA,EAAD,CAAM0C,OAAO,SAAS3E,OAAO,OAAOkC,SA1DxC,SAAsBb,GAElB,IAAMkC,EAAO,CACTzE,SAAUoE,EAASpE,SACnBmE,SAAUC,EAASD,UAGvB5B,EAAMc,iBAEN,IACMpC,EAAU,CACZC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,qCAElBC,KAAMC,IAAGC,UAAUmD,IAGvBlD,MAVY,SAUDN,GACVO,MAAK,SAAAC,GACF,OAAkB,MAAfA,EAAIC,OACID,EAAIE,OAEJ,WAIdH,MAAK,SAAAC,GAES,UAARA,GACC9C,QAAQC,IAAI6C,GACZlC,aAAaqD,QAAQ,YAAanB,EAAIiD,OACtCnF,aAAaqD,QAAQ,gBAAgB,GACrCrD,aAAaqD,QAAQ,WAAYnB,EAAIgD,KAAKzE,UAC1CrB,QAAQC,IAAI,qBACZ8G,EAAY,CACRjG,GAAI,IACJ+F,YAAY,MAGhBI,GAAW,GACXvB,EAAY,CACRrE,SAAU,GACVmE,SAAU,UAcsChF,UAAU,aAE1D,kBAACyE,EAAA,EAAD,CAAYzE,UAAU,cAClB,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAY,eAAKtE,UAAU,QAAQsD,KAAK,WAAWkB,SAAUrB,EAAcI,MAAO0B,EAASpE,WACzG,kBAAC4D,EAAA,EAAWE,OAAZ,KACI,kBAACF,EAAA,EAAWG,KAAZ,CAAiB5E,UAAU,aAA3B,mBAKR,kBAACgE,EAAA,EAAKwB,MAAN,CAAYxF,UAAU,cAClB,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAY,eAAKE,SAAUrB,EAAcG,KAAK,WAAWC,MAAO0B,EAASD,SAAUN,KAAK,cAI9G,kBAACxE,EAAA,EAAD,CAAQN,QAAQ,UAAU2E,KAAK,KAAKvE,UAAU,WAAW0E,KAAK,UAA9D,gBACA,uBAAG1E,UAAU,cAAb,sEAGA,kBAAC,IAAD,CAAMM,GAAG,aACL,kBAACJ,EAAA,EAAD,CAAQN,QAAQ,YAAY2E,KAAK,KAAKvE,UAAU,eAAhD,kBAMXsG,EAASD,YAAc,kBAAC,IAAD,CAAU/F,GAAIgG,EAAShG,OC7HxC,SAASqG,IACpB,OACI,kBAACjH,EAAA,EAAD,CAAQC,GAAG,UAAUC,QAAQ,QAC3B,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,UAAnB,wCACA,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUH,KAAK,iBAAf,4BACA,kBAACC,EAAA,EAAIE,KAAL,CAAUH,KAAK,YAAf,4BACA,kBAACC,EAAA,EAAIE,KAAL,CAAUH,KAAK,UAAf,4BACA,kBAACC,EAAA,EAAIE,KAAL,CAAUH,KAAK,WAAf,6BAEF,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIE,KAAL,CAAUH,KAAK,KAAf,0C,mBCRG,SAAS8G,EAAYpG,GAEhChB,QAAQC,IAAIe,EAAMU,QAElB,IAAM6B,EAAWvC,EAAMuC,SAJe,EAKV1D,oBAAS,GALC,mBAK/BwH,EAL+B,KAKvBC,EALuB,OAMRzH,mBAAS,IAND,mBAM/B0H,EAN+B,KAMtBC,EANsB,KAoCtC,OA5BAxD,qBAAU,WAEN,IACM1B,EAAU,CACZC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,qCAElBC,KAAMC,IAAGC,UAAU,CACfY,SAAUA,KAIlBX,MAZY,yBAYDN,GACVO,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAC,GACF9C,QAAQC,IAAI6C,EAAIyE,QAAQ,GAAGhG,SACL,IAAnBgG,EAAQrD,QACPsD,EAAW1E,EAAIyE,eASxBF,EACQ,kBAACI,EAAD,CAAcC,aAAc1G,EAAM0G,aAAchG,OAAQV,EAAMU,SAKrE,kBAAC,IAAMmE,SAAP,KAEA,kBAAC8B,EAAA,EAAD,CAAMnH,UAAU,cACZ,kBAACmH,EAAA,EAAK/H,OAAN,CAAaY,UAAU,uBACnB,kBAACE,EAAA,EAAD,CAAQF,UAAU,UAAUG,QAdxC,WACI2G,GAAU,KAaF,oDACA,wBAAI9G,UAAU,qBAAqBQ,EAAM0G,aAAatF,WAAtD,gCAEJ,kBAACuF,EAAA,EAAKC,KAAN,KACI,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,+BACE,4BACE,wDACA,4CACA,4CACA,4CACA,8CAGJ,+BAEMT,GAAWA,EAAQjC,KAAI,SAAA2C,GACrB,OACI,4BACI,4BAAKA,EAAO1G,SACZ,4BAAK0G,EAAO5G,UACZ,4BAAK4G,EAAO3G,OACZ,4BAAK2G,EAAOxG,MACZ,4BAAKwG,EAAOzG,YAOhC,mEAAY+F,GAAWA,EAAQrD,WC5EhC,SAASuD,EAAazG,GAEjChB,QAAQC,IAAIe,EAAM0G,cAFqB,MAGG7H,mBAAS,IAHZ,mBAGhCqI,EAHgC,KAGjBC,EAHiB,OAIDtI,oBAAS,GAJR,mBAIhCyD,EAJgC,KAInB8E,EAJmB,OAKXvI,oBAAS,GALE,mBAKhCwH,EALgC,KAKxBC,EALwB,KAmBvC,OAZAtD,qBAAU,WACNmE,EAAiBnH,EAAM0G,aAAaH,YAWrCF,EACQ,kBAACgB,EAAD,CAAcC,eAAgBtH,EAAMU,SAG5C4B,GACCtD,QAAQC,IAAIe,EAAMU,OAAO8B,KAClB,kBAAC4D,EAAD,CAAa7D,SAAUvC,EAAMU,OAAO8B,IAAKkE,aAAc1G,EAAM0G,aAAchG,OAAQV,EAAMU,UAKhG,kBAACiG,EAAA,EAAD,CAAMnH,UAAU,cACZ,kBAACmH,EAAA,EAAK/H,OAAN,CAAaY,UAAU,uBACnB,kBAACE,EAAA,EAAD,CAAQF,UAAU,UAAUG,QArBxC,WACI2G,GAAU,KAoBF,oDACA,wBAAI9G,UAAU,qBAAqBQ,EAAM0G,aAAatF,YACtD,kBAAC1B,EAAA,EAAD,CAAQF,UAAU,iBAAiBG,QAnB/C,WACIyH,GAAe,KAkBP,yCAEJ,kBAACT,EAAA,EAAKC,KAAN,KACI,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,+BACE,4BACE,wDACA,4CACA,4CACA,4CACA,8CAGJ,+BAEME,GAAiBA,EAAc5C,KAAI,SAAA2C,GACjC,OACI,4BACI,4BAAKA,EAAO1G,SACZ,4BAAK0G,EAAO5G,UACZ,4BAAK4G,EAAO3G,OACZ,4BAAK2G,EAAOxG,MACZ,4BAAKwG,EAAOzG,YAOhC,mEAAY0G,GAAiBA,EAAchE,UChE5C,SAASmE,EAAarH,GAIjC,IAAIqD,EAFNrE,QAAQC,IAAI,gBAIPe,EAAMsH,iBACPjE,EAAO,IAAID,KAAKpD,EAAMsH,eAAejE,OAPA,MASOxE,oBAAS,GAThB,mBAShC0I,EATgC,KASfC,EATe,OAWC3I,mBAAS,IAXV,mBAWhC6H,EAXgC,KAWlBe,EAXkB,KAmEvC,OAAGF,EACM,kBAACd,EAAD,CAAcC,aAAcA,EAAchG,OAAQV,EAAMsH,iBAK7D,6BACKtI,QAAQC,IAAIsI,GACb,kBAACZ,EAAA,EAAD,CAAMnH,UAAU,cACd,kBAACmH,EAAA,EAAK/H,OAAN,CAAaY,UAAU,qBACjB,wBAAIA,UAAU,eAAeQ,EAAMsH,gBAAkBtH,EAAMsH,eAAelG,YAC1E,kBAAC1B,EAAA,EAAD,CAAQN,QAAQ,SAASI,UAAU,YAAYG,QArC/D,WAEE,IAAM4C,EAAWvC,EAAMsH,eAAe9E,IAG9BlB,EAAU,CACZC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,qCAElBC,KAAMC,IAAGC,UAAU,CAACY,SAAUA,KAGlCX,MAVU,gBAUCN,GACVO,MAAK,SAAAC,GACc,MAAfA,EAAIC,QACLE,MAAM,wCACNyF,OAAOC,SAASC,QAAO,IAEvB3F,MAAM,qEAiBE,6BAEN,kBAAC0E,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAKkB,MAAN,CAAYrI,UAAU,qBAAqBQ,EAAMsH,gBAAkBtH,EAAMsH,eAAeQ,aACxF,kBAACnB,EAAA,EAAKvC,KAAN,CAAW5E,UAAU,cAArB,6BAAyC6D,GAAQA,EAAKC,qBAAtD,IAA6EtD,EAAMsH,gBAAkBtH,EAAMsH,eAAeS,MAC1H,kBAACpB,EAAA,EAAKvC,KAAN,CAAW5E,UAAU,cAArB,6BAAyCQ,EAAMsH,gBAAkBtH,EAAMsH,eAAeU,OACtF,kBAACrB,EAAA,EAAKvC,KAAN,CAAW5E,UAAU,cAArB,6BAAyCQ,EAAMsH,gBAAkBtH,EAAMsH,eAAeW,OACtF,kBAACtB,EAAA,EAAKvC,KAAN,CAAW5E,UAAU,cAArB,6BAAyCQ,EAAMsH,gBAAkBtH,EAAMsH,eAAepF,OACtF,kBAACxC,EAAA,EAAD,CAAQN,QAAQ,UAAUI,UAAU,uBAAuBG,QAzEvE,WAEE,IAAM4C,EAAWvC,EAAMsH,eAAe9E,IAG9BlB,EAAU,CACZC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,qCAElBC,KAAMC,IAAGC,UAAU,CAACY,SAAUA,KAGlCX,MAVU,gBAUCN,GACVO,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAC,GACJ9C,QAAQC,IAAI6C,GACS,yCAAhBA,EAAIoG,QACLjG,MAAMH,EAAIoG,UAEVV,GAAmB,GACnBC,EAAgB3F,SAmDd,2CCrFD,SAASqG,IAEpB,IAAMC,EAAgB,CAAC,CACnB5F,IAAK,GACL6F,UAAW,GACXhF,KAAM,GACN0E,KAAM,GACNC,MAAO,GACP9F,MAAO,EACP+F,MAAO,GACPH,YAAa,KAVU,EAaEjJ,mBAASuJ,GAbX,mBAarBE,EAbqB,KAaZC,EAbY,OAcS1J,mBAAS,IAdlB,mBAcpB2J,EAdoB,KAcRC,EAdQ,OAee5J,mBAASuJ,EAAc,IAftC,mBAepBM,EAfoB,KAeLC,EAfK,KAuC3B,OAtBA3F,qBAAU,WAUNpB,MARY,oBACI,CACZL,OAAQ,MACRC,QAAS,CACP,OAAU,sBAKfK,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAC,GACCwG,IAAYF,GACXG,EAAWzG,MAInB6G,EAAiBL,EAAQM,MAAK,SAAAlI,GAAM,OAAIA,EAAO8B,MAAQgG,SAKvD,6BACI,kBAAC,EAAD,MACA,yBAAKhJ,UAAU,WAEX,wBAAIA,UAAU,gBAAd,4BAEA,kBAACD,EAAA,EAAD,CAAKsJ,iBAAiB,GAAGrJ,UAAU,cAAcsJ,SAAU,SAACC,GAAD,OAAiBN,EAAcM,KAErFT,EAAQhE,KAAI,SAAA5D,GACT,IAAM2C,EAAO,IAAID,KAAK1C,EAAO2C,MAC7B,OAAO,kBAAC9D,EAAA,EAAIE,KAAL,CAAUuJ,SAAUtI,EAAO8B,IAAKhD,UAAU,cAAckB,EAAOU,WAA/D,IAA4EiC,EAAKC,yBAGxE,IAAnBgF,EAAQpF,QAAgB,uBAAG1D,UAAU,YAAb,0CAM/BgJ,GAAc,kBAACnB,EAAD,CAAcC,eAAgBoB,K,YCxD3C,SAASO,IAAe,IAAD,EAEDpK,mBAAS,CACtCuC,WAAY,GACZiC,KAAM,GACN0E,KAAM,GACNC,MAAO,GACP9F,MAAO,EACP+F,MAAO,GACPH,YAAa,KATiB,mBAE5BoB,EAF4B,KAEjBC,EAFiB,OAaDtK,oBAAS,GAbR,mBAa5BuK,EAb4B,KAajBC,EAbiB,KAelC,SAAS1G,EAAaC,GAAO,IAAD,EAEFA,EAAMC,OAArBC,EAFiB,EAEjBA,KAAMC,EAFW,EAEXA,MAEboG,GAAa,SAAAzG,GACT,kCACOA,GADP,kBAEKI,EAAOC,OA6BpB,OACI,kBAAC,IAAM8B,SAAP,KACA,kBAAC,EAAD,MACA,wBAAIrF,UAAU,qBAAd,4BAEA,kBAACgE,EAAA,EAAD,CAAMC,SA5BV,SAAsBb,GAClBA,EAAMc,iBAEN,IACMpC,EAAU,CACZC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,qCAElBC,KAAMC,IAAGC,UAAUuH,IAGvBtH,MAVY,gBAUDN,GACVO,MAAK,SAAAC,GACCA,IACCG,MAAM,wCACNoH,GAAa,SAajB,yBAAK7J,UAAU,aACX,yBAAKA,UAAU,YACX,kBAACgE,EAAA,EAAKwB,MAAN,CAAYxF,UAAU,aAClB,kBAACgE,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,6BACA,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAY,6CAAUtE,UAAU,QAAQsD,KAAK,aAAaoB,KAAK,OAAOF,SAAUrB,EAAcI,MAAOmG,EAAUI,cAEjI,yBAAK9J,UAAU,cACf,kBAACgE,EAAA,EAAKwB,MAAN,CAAYxF,UAAU,aAClB,kBAACgE,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,6BACA,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAY,6CAAUtE,UAAU,QAAQsD,KAAK,OAAOoB,KAAK,OAAOF,SAAUrB,EAAcI,MAAOmG,EAAU7F,SAK3H,yBAAK7D,UAAU,YACX,kBAACgE,EAAA,EAAKwB,MAAN,CAAYxF,UAAU,aAClB,kBAACgE,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,6BACA,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAY,6CAAUtE,UAAU,QAAQsD,KAAK,OAAOoB,KAAK,OAAOF,SAAUrB,EAAcI,MAAOmG,EAAUnB,QAE3H,yBAAKvI,UAAU,cACf,kBAACgE,EAAA,EAAKwB,MAAN,CAAYxF,UAAU,aAClB,kBAACgE,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,6BACA,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAY,6CAAUtE,UAAU,QAAQsD,KAAK,QAAQoB,KAAK,OAAOF,SAAUrB,EAAcI,MAAOmG,EAAUlB,UAIhI,yBAAKxI,UAAU,YACX,kBAACgE,EAAA,EAAKwB,MAAN,CAAYxF,UAAU,aAClB,kBAACgE,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,6BACA,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAY,6CAAUtE,UAAU,QAAQsD,KAAK,QAAQoB,KAAK,SAASF,SAAUrB,EAAcI,MAAOmG,EAAUhH,SAE9H,yBAAK1C,UAAU,cACf,kBAACgE,EAAA,EAAKwB,MAAN,CAAYxF,UAAU,aAClB,kBAACgE,EAAA,EAAKI,MAAN,CAAYpE,UAAU,cAAtB,6BACA,kBAACgE,EAAA,EAAKK,QAAN,CAAcC,YAAY,6CAAUtE,UAAU,QAAQsD,KAAK,QAAQoB,KAAK,OAAOF,SAAUrB,EAAcI,MAAOmG,EAAUjB,UAGhI,yBAAKzI,UAAU,YACX,kBAACgE,EAAA,EAAKwB,MAAN,CAAYxF,UAAU,aAClB,kBAACgE,EAAA,EAAKI,MAAN,CAAYpE,UAAU,oCAAtB,6BACA,kBAAC+J,EAAA,EAAD,CAAalF,GAAG,WAAWmF,aAAW,gBAAgBC,KAAK,IAAI3G,KAAK,cAAckB,SAAUrB,EAAcI,MAAOmG,EAAUpB,gBAGvI,kBAACpI,EAAA,EAAD,CAAQN,QAAQ,UAAU2E,KAAK,KAAKvE,UAAU,YAAY0E,KAAK,UAA/D,4BAEEkF,GAAa,kBAAC,IAAD,CAAUtJ,GAAG,cC5G7B,SAAS4J,IAEpB,IAAMtB,EAAgB,CAAC,CACnB5F,IAAK,GACL6F,UAAW,GACXhF,KAAM,GACN0E,KAAM,GACNC,MAAO,GACP9F,MAAO,EACP+F,MAAO,GACPH,YAAa,KAVY,EAaAjJ,mBAASuJ,GAbT,mBAavBE,EAbuB,KAadC,EAbc,OAcO1J,mBAAS,IAdhB,mBActB2J,EAdsB,KAcVC,EAdU,OAea5J,mBAASuJ,EAAc,IAfpC,mBAetBM,EAfsB,KAePC,EAfO,KAsC7B,OArBA3F,qBAAU,WAUNpB,MARY,mBACI,CACZL,OAAQ,MACRC,QAAS,CACP,OAAU,sBAKfK,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAC,GACCwG,IAAYF,GACXG,EAAWzG,MAInB6G,EAAiBL,EAAQM,MAAK,SAAAlI,GAAM,OAAIA,EAAO8B,MAAQgG,SAIvD,6BAEA,kBAAC,EAAD,MAEA,yBAAKhJ,UAAU,WAEX,wBAAIA,UAAU,gBAAd,4BAEI,kBAACD,EAAA,EAAD,CAAKsJ,iBAAiB,GAAGrJ,UAAU,cAAcsJ,SAAU,SAACC,GAAD,OAAiBN,EAAcM,KAErFT,EAAQhE,KAAI,SAAA5D,GACT,IAAM2C,EAAO,IAAID,KAAK1C,EAAO2C,MAC7B,OAAO,kBAAC9D,EAAA,EAAIE,KAAL,CAAUuJ,SAAUtI,EAAO8B,IAAKhD,UAAU,cAAckB,EAAOU,WAA/D,IAA4EiC,EAAKC,yBAGxE,IAAnBgF,EAAQpF,QAAgB,uBAAG1D,UAAU,YAAb,0CAKnCgJ,GAAc,kBAACnB,EAAD,CAAcC,eAAgBoB,IApB9C,MCvCO,SAASiB,IAEpB,IAAMvB,EAAgB,CAAC,CACnB5F,IAAK,GACL6F,UAAW,GACXhF,KAAM,GACN0E,KAAM,GACNC,MAAO,GACP9F,MAAO,EACP+F,MAAO,GACPH,YAAa,KAVW,EAaCjJ,mBAASuJ,GAbV,mBAatBE,EAbsB,KAabC,EAba,OAcQ1J,mBAAS,IAdjB,mBAcrB2J,EAdqB,KAcTC,EAdS,OAec5J,mBAASuJ,EAAc,IAfrC,mBAerBM,EAfqB,KAeNC,EAfM,KAwC5B,OAvBA3F,qBAAU,WAUNpB,MARY,qBACI,CACZL,OAAQ,MACRC,QAAS,CACP,OAAU,sBAKfK,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAC,GACF9C,QAAQC,IAAI6C,GACTwG,IAAYF,GAEXG,EAAWzG,MAInB6G,EAAiBL,EAAQM,MAAK,SAAAlI,GAAM,OAAIA,EAAO8B,MAAQgG,SAIvD,6BAEA,kBAAC,EAAD,MAEA,yBAAKhJ,UAAU,WAEX,wBAAIA,UAAU,gBAAd,4BAEI,kBAACD,EAAA,EAAD,CAAKsJ,iBAAiB,GAAGrJ,UAAU,cAAcsJ,SAAU,SAACC,GAAD,OAAiBN,EAAcM,KAErFT,EAAQhE,KAAI,SAAA5D,GACT,IAAM2C,EAAO,IAAID,KAAK1C,EAAO2C,MAC7B,OAAO,kBAAC9D,EAAA,EAAIE,KAAL,CAAUuJ,SAAUtI,EAAO8B,IAAKhD,UAAU,cAAckB,EAAOU,WAA/D,IAA4EiC,EAAKC,yBAGxE,IAAnBgF,EAAQpF,QAAgB,uBAAG1D,UAAU,YAAb,0CAMnCgJ,GAAc,kBAACnB,EAAD,CAAcC,eAAgBoB,IArB9C,MCvCO,SAASkB,EAA0B5J,GAAO,IAAD,EAExBnB,oBAAS,GAFe,mBAE7CgL,EAF6C,KAErCC,EAFqC,OAGtBjL,qBAHsB,mBAG7CkL,EAH6C,KAGpCC,EAHoC,OAIpBnL,mBAAS,IAJW,mBAI7C0D,EAJ6C,KAInC0H,EAJmC,OAKpBpL,qBALoB,mBAK7CqL,EAL6C,KAKnCC,EALmC,OAMxBtL,oBAAS,GANe,mBAM7CwH,EAN6C,KAMrCC,EANqC,KAuDpD,OA/CAtD,qBAAU,WAEN,IAAI6G,GAAUtH,IAAavC,EAAMsH,eAAe9E,IAAI,CAEhDyH,EAAYjK,EAAMsH,eAAe9E,KAEjC,IACMlB,EAAU,CACZC,OAAQ,OACRC,QAAS,CACT,OAAU,mBACV,eAAgB,qCAEhBC,KAAMC,IAAGC,UAAU,CACfY,SAAUvC,EAAMsH,eAAe9E,IAC/BnC,SAAUT,aAAaK,QAAQ,eAIvC2B,MAbY,+BAaDN,GACVO,MAAK,SAAAC,GACF,OAAkB,MAAfA,EAAIC,OACID,EAAIE,OAEJ,WAGdH,MAAK,SAAAC,GAES,UAARA,GACCqI,GAAY,GACZH,EAAWlI,KAEXqI,GAAY,GACZH,QAIRF,GAAU,GACV9K,QAAQC,IAAI,mBAAqB4K,OAQtCxD,EACQ,kBAAC+D,EAAD,CAAsB9C,eAAgBtH,EAAMsH,iBAKnD,kBAAC,IAAMzC,SAAP,KAEQ,kBAAC8B,EAAA,EAAD,CAAMnH,UAAU,cACZ,kBAACmH,EAAA,EAAK/H,OAAN,CAAaY,UAAU,qBACnB,kBAACE,EAAA,EAAD,CAAQF,UAAU,UAAUG,QAdhD,WACI2G,GAAU,KAaM,oDACA,wBAAI9G,UAAU,eAAeQ,EAAMsH,gBAAkBtH,EAAMsH,eAAelG,aAE9E,kBAACuF,EAAA,EAAKC,KAAN,KACCsD,GAAY,mHACb,kBAACrD,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,+BACE,4BACE,wDACA,4CACA,4CACA,4CACA,8CAGJ,+BACK+C,GAAWA,EAAQzF,KAAI,SAAA+F,GACpB,OAAO,4BACH,4BAAKA,EAAO9J,SACZ,4BAAK8J,EAAOhK,UACZ,4BAAKgK,EAAO/J,OACZ,4BAAK+J,EAAO5J,MACZ,4BAAK4J,EAAO7J,eCvFjC,SAAS4J,EAAqBpK,GAAO,IAAD,EAEfnB,mBAAS,IAFM,mBAExC0D,EAFwC,KAE9B0H,EAF8B,OAGjBpL,qBAHiB,mBAGxCkL,EAHwC,KAG/BC,EAH+B,OAIfnL,qBAJe,mBAIxCqL,EAJwC,KAI9BC,EAJ8B,OAKnBtL,oBAAS,GALU,mBAKxCgL,EALwC,KAKhCC,EALgC,OAMTjL,oBAAS,GANA,mBAMxCyL,EANwC,KAM3BlD,EAN2B,KAuD/C,OA/CApE,qBAAU,WAEN,IAAI6G,GAAUtH,IAAavC,EAAMsH,eAAe9E,IAAI,CAEhDyH,EAAYjK,EAAMsH,eAAe9E,KAEjC,IACMlB,EAAU,CACZC,OAAQ,OACRC,QAAS,CACT,OAAU,mBACV,eAAgB,qCAEhBC,KAAMC,IAAGC,UAAU,CACfY,SAAUvC,EAAMsH,eAAe9E,IAC/BnC,SAAUT,aAAaK,QAAQ,eAIvC2B,MAbY,mBAaDN,GACVO,MAAK,SAAAC,GACF,OAAkB,MAAfA,EAAIC,OACID,EAAIE,OAEJ,WAGdH,MAAK,SAAAC,GAES,UAARA,GACCqI,GAAY,GACZH,EAAWlI,KAEXqI,GAAY,GACZH,QAIRF,GAAU,GACV9K,QAAQC,IAAI,mBAAqB4K,OAQtCS,EACQ,kBAACV,EAAD,CAA2BtC,eAAgBtH,EAAMsH,iBAKxD,kBAAC,IAAMzC,SAAP,KAEI,kBAAC8B,EAAA,EAAD,CAAMnH,UAAU,cACZ,kBAACmH,EAAA,EAAK/H,OAAN,CAAaY,UAAU,qBACnB,wBAAIA,UAAU,eAAeQ,EAAMsH,gBAAkBtH,EAAMsH,eAAelG,YAC1E,kBAAC1B,EAAA,EAAD,CAAQF,UAAU,iBAAiBG,QAfnD,WACIyH,GAAe,KAcH,yCAEJ,kBAACT,EAAA,EAAKC,KAAN,KACCsD,GAAY,uGACb,kBAACrD,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,+BACE,4BACE,wDACA,4CACA,4CACA,4CACA,8CAGJ,+BACK+C,GAAWA,EAAQzF,KAAI,SAAA+F,GACpB,OAAO,4BACH,4BAAKA,EAAO9J,SACZ,4BAAK8J,EAAOhK,UACZ,4BAAKgK,EAAO/J,OACZ,4BAAK+J,EAAO5J,MACZ,4BAAK4J,EAAO7J,eCxF7B,SAAS+J,IAEpB,IAAMnC,EAAgB,CAAC,CACnB5F,IAAK,GACL6F,UAAW,GACXhF,KAAM,GACN0E,KAAM,GACNC,MAAO,GACP9F,MAAO,EACP+F,MAAO,GACPH,YAAa,KAVmB,EAaPjJ,mBAASuJ,GAbF,mBAa9BE,EAb8B,KAarBC,EAbqB,OAcA1J,qBAdA,mBAc7B2J,EAd6B,KAcjBC,EAdiB,OAeR5J,mBAAS,gBAfD,mBAe7B2L,EAf6B,KAerBC,EAfqB,OAgBJ5L,oBAAS,GAhBL,mBAgB7B6L,EAhB6B,KAgBnBC,EAhBmB,OAiBJ9L,oBAAS,GAjBL,mBAiB7B+L,EAjB6B,KAiBnBC,EAjBmB,KAiFpC,OA9DA7H,qBAAU,WAEN,IAAI0H,EAAS,CACT1L,QAAQC,IAAI,UACZ,IACMqC,EAAU,CACZC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,qCAElBC,KAAMC,IAAGC,UAAU,CACf6I,OAAQA,KAIhB5I,MAZY,kBAYDN,GACVO,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAC,GACF9C,QAAQC,IAAI,WAAa6C,EAAIoB,QACX,IAAfpB,EAAIoB,QACH2H,GAAY,GACZtC,EAAWH,KAERtG,IAAQwG,GACPC,EAAWzG,GAEf+I,GAAY,OAGpBF,GAAY,OAiChB,kBAAC,IAAM9F,SAAP,KACA,kBAAC3F,EAAA,EAAD,CAAQC,GAAG,UAAUC,QAAQ,QACzB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,KAAnB,4EACA,kBAACC,EAAA,EAAD,CAAKC,UAAU,UAAUqJ,iBAAiB,GAAGC,SAAU,SAACC,GAAD,OAhC/D,SAAqBA,GAEjB,OADA/J,QAAQC,IAAI8J,GACLA,GACH,IAAK,IACD0B,EAAU,gBACVE,GAAY,GACZlC,IACA,MACJ,IAAK,IACDgC,EAAU,gBACVE,GAAY,GACZlC,IACA,MACJ,IAAK,IACDgC,EAAU,gBACVE,GAAY,GACZlC,KAgBoEqC,CAAY/B,KAChF,kBAACxJ,EAAA,EAAIE,KAAL,CAAUuJ,SAAS,KAAnB,4BACA,kBAACzJ,EAAA,EAAIE,KAAL,CAAUuJ,SAAS,KAAnB,4BACA,kBAACzJ,EAAA,EAAIE,KAAL,CAAUuJ,SAAS,KAAnB,8BAGR,yBAAKxJ,UAAU,WAEX,wBAAIA,UAAU,gBAAgBgL,EAA9B,gBACCxL,QAAQC,IAAI2L,GACXA,GAAY,uBAAGpL,UAAU,YAAb,kCACd,kBAACD,EAAA,EAAD,CAAKsJ,iBAAiB,GAAGrJ,UAAU,cAAcsJ,SAAU,SAACC,GAAD,OAnBnE,SAA4BA,GACxBN,EAAcM,GAkBkEgC,CAAmBhC,MACzF6B,GAAYtC,EAAQhE,KAAI,SAAA5D,GACtB,IAAM2C,EAAO,IAAID,KAAK1C,EAAO2C,MAC7B,OAAO,kBAAC9D,EAAA,EAAIE,KAAL,CAAUuJ,SAAUtI,EAAO8B,IAAKhD,UAAU,cAAckB,EAAOU,WAA/D,IAA4EiC,EAAKC,2BAMnGkF,GAAc,kBAAC4B,EAAD,CAAsB9C,eAAgBgB,EAAQM,MAAK,SAAAlI,GAAM,OAAIA,EAAO8B,MAAQgG,Q,qBC/FpF,SAASwC,EAAIhL,GAqBxB,OAjBAgD,qBAAU,WACNhE,QAAQC,IAAI,UACZgM,IAAMC,IAAI,mBACV,CAAE1J,QACE,CACI,eAAiB,mBACjB,cAAgB,UAAhB,OAA2B5B,aAAaK,QAAQ,iBAGvD4B,MAAK,SAAAC,GACFlC,aAAaqD,QAAQ,gBAAgB,MACtCkI,OAAM,SAAUC,GACfxL,aAAayL,WAAW,sBAMhC,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOlG,UAAWO,EAAO4F,OAAK,EAACC,KAAK,WACpC,kBAAC,EAAD,CAAgBpG,UAAWjF,EAAiBoL,OAAK,EAACC,KAAK,MACvD,kBAAC,EAAD,CAAYpG,UAAWgD,EAAOmD,OAAK,EAACC,KAAK,WACzC,kBAAC,EAAD,CAAYpG,UAAW8D,EAAcqC,OAAK,EAACC,KAAK,kBAChD,kBAAC,EAAD,CAAYpG,UAAWuE,EAAS4B,OAAK,EAACC,KAAK,aAC3C,kBAAC,EAAD,CAAYpG,UAAWwE,EAAQ2B,OAAK,EAACC,KAAK,YAC1C,kBAAC,IAAD,CAAOpG,UAAWZ,EAAU+G,OAAK,EAACC,KAAK,cACvC,kBAAC,IAAD,CAAOpG,UAAWoF,EAAgBe,OAAK,EAACC,KAAK,uB,MCzCzDC,IAASnG,OACP,kBAAC,IAAD,KACE,kBAAC2F,EAAD,OAEFS,SAASC,eAAe,W","file":"static/js/main.28b75390.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Redirect } from \"react-router-dom\";\n\nfunction Header(){\n\n    const [isLoggedOut, setLoggedOut] = useState(\"false\");\n\n    console.log(\"render\");\n\n\n    function handleLogout(){\n        localStorage.clear();\n        setLoggedOut(\"true\");\n       \n    }\n\n    return (\n\n    <Navbar bg=\"primary\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">靈實員工培訓課程報名系統</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/register-record\">報名記錄</Nav.Link>\n        </Nav>\n        <Button variant=\"outline-light\" onClick={handleLogout}>登出</Button>\n\n        { isLoggedOut === \"true\" && <Redirect to=\"/login\" /> }\n    </Navbar>\n    \n    );\n\n}\n\nexport default Header;\n\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nfunction Footer(props){\n    return <footer>\n        {localStorage.getItem('isAdmin') && <Link to=\"/admin\" className=\"adminLink\">管理員模式</Link> }\n    </footer>;\n}\n\nexport default Footer; ","import React, {useState, useEffect} from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport qs from 'qs';\n\nfunction ApplicationForm(){\n\n\n    const [courseList, setCourseList] = useState([{}]);\n\n    const [newValue, setNewValue] = useState({\n        username: \"\",\n        email: \"\",\n        staffid: \"\",\n        post: \"\",\n        dept: \"\",\n        course: \"\",\n    });\n    \n    const [isDataObtained, setIsDataObtained] = useState(false);\n   \n\n    const fields = [\"姓名\", \"電郵\", \"職員編號\", \"職位\", \"單位\", \"報讀課程\"];\n    var role = \"\";\n\n    function getFutureCourses(){\n\n        const futureCourseURL = '/futureCourse';\n        const futureCourseOptions = {\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json',\n            }\n        };\n\n        fetch(futureCourseURL, futureCourseOptions)\n        .then(res => res.json())\n        .then(res => {\n            if(res.length > 0){\n                    console.log(\"CourseList[0]: \" + res[0].courseName);\n                    setCourseList(res);\n                    setNewValue(prevValue => {\n    \n                        const date = new Date(res[0].date);\n                        const dateStr = date.toLocaleDateString();\n    \n                        return{\n                            ...prevValue,\n                            course: res[0].courseName + \" \" + dateStr\n                        }\n                    })\n                    console.log(\"DataObtained: \" + isDataObtained);\n                    console.log(courseList);\n                }\n            setIsDataObtained(true);\n        })\n\n    }\n\n    useEffect( () => {\n\n        console.log(\"render\");\n\n        if(!isDataObtained){\n            const url = '/user';\n            const options = {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: qs.stringify({username: localStorage.getItem('username')})\n            };\n\n            fetch(url, options)\n            .then(res => res.json())\n            .then(res => {\n\n                role = res.role;\n\n                if(role === \"admin\"){\n                    localStorage.setItem(\"isAdmin\", true);\n                }\n\n                setNewValue({\n                    username: res.name,\n                    email: res.username,\n                    staffid: res.staffid,\n                    post: res.post,\n                    dept: res.dept,\n                    course: \"\",\n                })\n            })\n            getFutureCourses();\n        }\n\n    })\n\n    function enroll(course){\n\n        console.log(course);\n\n        const url = '/enroll';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify({\n                courseID: course._id, \n                enrollment: newValue,\n                registeredBy: localStorage.getItem(\"username\")\n            })\n        };\n\n        fetch(url, options)\n        .then(res => {\n            if(res.status === 200){\n                alert(\"成功報讀課程\");\n                clearInput();\n                // setNewValue(prevValue => {\n                    \n                //     return {\n                //         ...prevValue,\n                //         username: \"\",\n                //         email: \"\",\n                //         staffid: \"\",\n                //         post: \"\",\n                //         dept: \"\"\n                //     }\n\n                // });\n            }else{\n                alert(\"未能成功報讀課程, 請稍後再嘗試\");\n            }\n        })\n\n    }\n\n    function waitinglist(courseName, courseDate){\n\n        const url = '/waitinglist';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify({\n                courseName: courseName,\n                courseDate: courseDate,\n                enrollment: newValue,\n                registeredBy: localStorage.getItem(\"username\")\n            })\n        };\n\n        fetch(url, options)\n        .then(res => {\n            if(res.status === 200){\n                alert(\"課程名額暫滿，你將會加進後備名單。如最後能夠成功報讀，屆時將會以公司電郵通知\");\n                clearInput();\n                // setNewValue(prevValue => {\n                    \n                //     return {\n                //         ...prevValue,\n                //         username: \"\",\n                //         email: \"\",\n                //         staffid: \"\",\n                //         post: \"\",\n                //         dept: \"\"\n                //     }\n\n                // });\n            }else{\n                alert(\"發生錯誤，請稍後再嘗試\");\n            }\n        })\n\n\n\n\n\n    }\n\n    function checkQuota(){\n\n        const courseInfo = newValue.course.split(' ')\n\n        console.log(\"date: \" +  courseInfo[1]);\n\n        const courseName = newValue.course.split(' ')[0];\n        const courseDate = newValue.course.split(' ')[1];\n\n        const url = '/checkQuota';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify({\n                courseName: courseName,\n                courseDate: courseDate\n            })\n        };\n\n        fetch(url, options)\n        .then(res => {\n            if(res.status === 200){\n                return res.json()\n            }else{\n                alert(\"發生錯誤，請稍後再嘗試\");\n                return \"error\";\n            }\n        })\n        .then(res => {\n            console.log(res);\n            if(res.quota === 0){\n                waitinglist(courseName, courseDate);\n            }else if(res !== \"error\"){\n                console.log(\"Enrolled\");\n                enroll(res);\n            }\n        })\n    }\n\n\n    function handleSubmit(event){\n\n        event.preventDefault();\n        checkQuota();\n        //enroll();\n    }\n\n    function clearInput(){\n\n        setNewValue(prevValue => {\n                    \n            return {\n                ...prevValue,\n                username: \"\",\n                email: \"\",\n                staffid: \"\",\n                post: \"\",\n                dept: \"\",\n                course: \"\"\n            }\n\n        });\n\n    }\n\n\n    function handleChange(event){\n\n        const {name, value} = event.target;\n\n        setNewValue(prevValue => {\n            return{\n                ...prevValue,\n                [name]: value\n            }; \n        });\n\n        console.log(newValue);\n    }\n\n    return (\n        <div>\n    <Header />\n    <img src=\"https://www.hohcs.org.hk/App/Modules/Admin/Tpl/Static/upload/image/20170418/20170418125117_21846.png\" className=\"formIcon\"/>\n\n    \n    <Form className=\"inputForm\" onSubmit={handleSubmit}>\n    \n        <div className=\"inputRow\">\n            <div className=\"inputItem\">\n                <FormGroup>\n                    <Form.Label className=\"inputLabel\">名稱:</Form.Label>\n                    <Form.Control placeholder={fields[0]} size=\"lg\" onChange={handleChange} value={newValue.username} name=\"username\"></Form.Control>\n                </FormGroup>\n            </div>\n\n            <div className=\"inputItem\"></div>\n\n            <div className=\"inputItem\">\n                <FormGroup className=\"inputItem\">\n                    <Form.Label className=\"inputLabel\">電郵:</Form.Label>\n                    <InputGroup>\n                        <Form.Control placeholder={fields[1]} size=\"lg\" name=\"email\" type=\"text\" onChange={handleChange} value={newValue.email} className=\"input\"></Form.Control>\n                        <InputGroup.Append>\n                            <InputGroup.Text>@hohsc.org.hk</InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup> \n                </FormGroup>\n            </div>\n        </div>\n            \n        <div className=\"inputRow\">\n\n            <div className=\"inputItem\">\n                <FormGroup>\n                    <Form.Label className=\"inputLabel\">職員編號:</Form.Label>\n                    <Form.Control placeholder={fields[2]} size=\"lg\" onChange={handleChange} value={newValue.staffid} name=\"staffid\"></Form.Control>\n                </FormGroup>\n            </div>\n\n            <div className=\"inputItem\"></div>\n\n            <div className=\"inputItem\">\n                <FormGroup>\n                    <Form.Label className=\"inputLabel\">職位:</Form.Label>\n                    <Form.Control placeholder={fields[3]} size=\"lg\" onChange={handleChange} value={newValue.post} name=\"post\"></Form.Control>\n                </FormGroup>\n            </div>\n\n        </div>\n            \n\n        <div className=\"inputRow\">\n\n            <div className=\"inputItem\">\n                <FormGroup>\n                    <Form.Label className=\"inputLabel\">單位:</Form.Label>\n                    <Form.Control placeholder={fields[4]} size=\"lg\" onChange={handleChange} value={newValue.dept} name=\"dept\"></Form.Control>\n                </FormGroup>\n            </div>\n\n            <div className=\"inputItem\"></div>\n\n            <div className=\"inputItem\">\n                <FormGroup>\n                    <Form.Label className=\"inputLabel\">報讀課程:</Form.Label>\n                    <Form.Control size=\"lg\" onChange={handleChange} value={newValue.course} name=\"course\" as=\"select\">\n                        <option>請選擇課程</option>\n                        {courseList.length > 0 && courseList.map(course => {\n                            var date = new Date(course.date);\n                            return <option>{course.courseName} {date.toLocaleDateString()}</option>\n                        })}\n                    </Form.Control>\n                </FormGroup>\n            </div>\n\n        </div>\n\n        <div className=\"btnWrapper\">\n            <Button variant=\"primary\" size=\"lg\" type=\"submit\" className=\"submitBtn\">提交</Button>\n\n            <Button variant=\"danger\" size=\"lg\" onClick={clearInput} className=\"clearBtn\">清除所有資料</Button>\n        </div>\n\n    </Form>\n    <Footer role={role}/>\n    </div>\n    );\n}\n\nexport default ApplicationForm;","import React, {useState} from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport qs from 'qs';\n\nexport default function Register(){\n\n    const [userData, setUserData] = useState({\n\n        username: \"\",\n        password: \"\",\n        staffid: \"\",\n        name: \"\",\n        post: \"\",\n        dept: \"\"\n\n    });\n\n    const [isRegistered, setRegister] = useState(false)\n\n    function handleChange(event){\n\n        const {name, value} = event.target;\n        \n        setUserData(prevValue => {\n            return{\n                ...prevValue,\n                [name]: value\n            }; \n        });\n\n        console.log(userData);\n    }\n\n    function handleRegister(event){\n\n        event.preventDefault();\n\n        const user = {\n            username: userData.username,\n            password: userData.password,\n            staffid: userData.staffid,\n            name: userData.name,\n            post: userData.post,\n            dept: userData.dept\n        };\n\n        const url = '/register';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify(user)\n        };\n\n        fetch(url, options)\n        .then(res => res.json())\n        .then(res => {\n            localStorage.setItem('userToken', res.token);\n            localStorage.setItem('isAuthorized', true);\n            localStorage.setItem('username', res.user.username);\n            setRegister(true);\n            console.log(\"Ready to redirect\");\n        })\n    }\n\n    return (\n        <React.Fragment>\n\n            <img src=\"https://www.hohcs.org.hk/App/Modules/Admin/Tpl/Static/upload/image/20170418/20170418125117_21846.png\" className=\"icon-register\"/>\n\n                <Form onSubmit={handleRegister}>\n\n                            <Form.Group className=\"inputGroup\">\n                                <Form.Label className=\"inputLabel\">電郵:</Form.Label>\n                                <InputGroup>\n                                    <Form.Control placeholder=\"請輸入電郵\" className=\"input\" name=\"username\" onChange={handleChange} value={userData.username}></Form.Control>\n                                    <InputGroup.Append>\n                                        <InputGroup.Text>@hohsc.org.hk</InputGroup.Text>\n                                    </InputGroup.Append>\n                                </InputGroup> \n                            </Form.Group>\n\n\n                            <Form.Group className=\"inputGroup\">\n                                <Form.Label className=\"inputLabel\">密碼:</Form.Label>\n                                <Form.Control placeholder=\"請輸入密碼\" onChange={handleChange} name=\"password\" value={userData.password} type=\"password\" className=\"input\"></Form.Control>\n                            </Form.Group>\n\n\n\n                            <Form.Group className=\"inputGroup\">\n                                <Form.Label className=\"inputLabel\">姓名:</Form.Label>\n                                <Form.Control placeholder=\"請輸入姓名\" onChange={handleChange} name=\"name\" value={userData.name} type=\"text\" className=\"input\"></Form.Control>\n                            </Form.Group>\n\n\n                            <Form.Group className=\"inputGroup\">\n                                <Form.Label className=\"inputLabel\"> 單位:</Form.Label>\n                                <Form.Control placeholder=\"請輸入單位\" onChange={handleChange} name=\"dept\" value={userData.dept} type=\"text\" className=\"input\"></Form.Control>\n                            </Form.Group>\n\n                            <Form.Group className=\"inputGroup\">\n                                <Form.Label className=\"inputLabel\"> 職位:</Form.Label>\n                                <Form.Control placeholder=\"請輸入職位\" onChange={handleChange} name=\"post\" value={userData.post} type=\"text\" className=\"input\"></Form.Control>\n                            </Form.Group>\n\n\n                            <Form.Group className=\"inputGroup\">\n                                <Form.Label className=\"inputLabel\"> 職員編號:</Form.Label>\n                                <Form.Control placeholder=\"請輸入職員編號\" onChange={handleChange} name=\"staffid\" value={userData.staffid} type=\"text\" className=\"input\"></Form.Control>\n                            </Form.Group>\n\n                        <Button variant=\"primary\" size=\"lg\" className=\"registerBtn\" type=\"submit\">註冊</Button>\n\n                { isRegistered && <Redirect to=\"/\" /> }\n                </Form>\n\n        </React.Fragment>\n    );\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const ProtectedRoute = ({component: Component, ...rest}) => {\n\n    return (\n        <Route {...rest} render={\n            (props) => {\n                if(localStorage.getItem('isAuthorized')){\n                    return <Component {...props}/>;\n                }else{\n                    return <Redirect to=\"/login\" />;\n                }\n            }\n        }>\n\n        </Route>\n    );\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const AdminRoute = ({component: Component, ...rest}) => {\n\n    return (\n        <Route {...rest} render={\n            (props) => {\n                if(localStorage.getItem('isAdmin')){\n                    console.log(\"isAdmin? \" + localStorage.getItem('isAdmin'))\n                    return <Component {...props}/>;\n                }else{\n                    return <Redirect to=\"/\" />;\n                }\n            }\n        }>\n\n        </Route>\n    );\n}","class Auth {\n    constructor(){\n        this.authenticated = false;\n    }\n\n    login(cb){\n        this.authenticated = true;\n        cb();\n    }\n\n    logout(cb){\n        this.authenticated = false;\n        cb();\n    }\n\n    isAuthenticated(){\n        return this.authenticated;\n    }\n}\n\nexport default new Auth();","import React, { useState } from \"react\";\nimport auth from \"./Auth\";\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport { Link, Redirect } from 'react-router-dom';\nimport qs from 'qs';\n\nfunction Login() {\n\n    console.log(\"Login IN page, IS authenticated? \" + auth.isAuthenticated())\n\n    const [userData, setUserData] = useState({\n\n        username: \"\",\n        password: \"\"\n\n    });\n\n    const [redirect, setRedirect] = useState({\n        to: \"\",\n        isDirected: null\n    });\n\n    const [reLogin, setRelogin] = useState(false);\n\n    if(localStorage.getItem('isAuthorized')){\n        return <Redirect to=\"/\" />;\n    }\n\n\n    function handleChange(event){\n\n        const {name, value} = event.target;\n\n        setUserData(prevValue => {\n            return {\n                ...prevValue,\n                [name]: value\n            };\n        });\n\n        console.log(userData);\n    }\n\n    function handleSubmit(event){\n\n        const user = {\n            username: userData.username,\n            password: userData.password\n        }\n\n        event.preventDefault();\n\n        const url = '/login';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify(user)\n        };\n\n        fetch(url, options)\n        .then(res => {\n            if(res.status !== 401){\n                return res.json();\n            }else{\n                return \"error\";\n            }\n            \n        })\n        .then(res => {\n\n            if(res !== \"error\"){\n                console.log(res)\n                localStorage.setItem('userToken', res.token);\n                localStorage.setItem('isAuthorized', true);\n                localStorage.setItem('username', res.user.username);\n                console.log(\"Ready to redirect\");\n                setRedirect({\n                    to: \"/\",\n                    isDirected: true\n                });\n            }else{\n                setRelogin(true);\n                setUserData({\n                    username: \"\",\n                    password: \"\"\n                })\n            }\n            \n        })\n    }\n\n    return(\n        <React.Fragment>\n        <img src=\"https://www.hohcs.org.hk/App/Modules/Admin/Tpl/Static/upload/image/20170418/20170418125117_21846.png\" className=\"icon\"/>\n\n    { reLogin && <p className=\"loginError\">登入電郵或密碼錯誤，請重新輸入</p> }\n    \n    {/* onSubmit={handleSubmit} */}\n        <Form action=\"/login\" method=\"post\" onSubmit={handleSubmit} className=\"formInput\">\n            \n                    <InputGroup className=\"loginInput\">\n                        <Form.Control placeholder=\"電郵\" className=\"input\" name=\"username\" onChange={handleChange} value={userData.username}></Form.Control>\n                        <InputGroup.Append>\n                            <InputGroup.Text className=\"emailText\">@hohsc.org.hk</InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup> \n       \n         \n                    <Form.Group className=\"loginInput\">\n                        <Form.Control placeholder=\"密碼\" onChange={handleChange} name=\"password\" value={userData.password} type=\"password\"></Form.Control>\n                    </Form.Group>\n            \n            {/* onClick={handleLogin} */}\n                <Button variant=\"primary\" size=\"lg\" className=\"loginBtn\" type=\"submit\">登入</Button>\n                <p className=\"remindText\">如未曾註冊，請先註冊。</p>\n\n                \n                <Link to=\"/register\">\n                    <Button variant=\"secondary\" size=\"lg\" className=\"registerBtn\">註冊</Button>\n                </Link>\n                \n                \n                \n        </Form>\n        {redirect.isDirected && <Redirect to={redirect.to} /> }\n\n        </React.Fragment>\n    );\n\n}\n\nexport default Login;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nexport default function Navigatior(){\n    return (\n        <Navbar bg=\"primary\" variant=\"dark\">\n          <Navbar.Brand href=\"/admin\">課程報名系統</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/createcourse\">新增課程</Nav.Link>\n            <Nav.Link href=\"/history\">以往課程</Nav.Link>\n            <Nav.Link href=\"/admin\">今天課程</Nav.Link>\n            <Nav.Link href=\"/future\">未來課程</Nav.Link>\n          </Nav>\n          <Nav>\n            <Nav.Link href=\"/\">返回報名表格</Nav.Link>\n          </Nav>\n        </Navbar>\n    );\n}\n","import React, {useState, useEffect} from 'react';\nimport EnrollDetail from './EnrollDetail';\nimport Card from 'react-bootstrap/Card';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport qs from 'qs';\n\nexport default function WaitingList(props){\n\n    console.log(props.course);\n\n    const courseID = props.courseID;\n    const [isBack, setIsBack] = useState(false);\n    const [records, setRecords] = useState([]);\n\n    useEffect(() => {\n\n        const url = '/waitinglistByCourseID';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify({\n                courseID: courseID\n            })\n        };\n\n        fetch(url, options)\n        .then(res => res.json())\n        .then(res => {\n            console.log(res.records[0].staffid);\n            if(records.length === 0){\n                setRecords(res.records);\n            }\n        })\n    })\n\n    function backBtnClicked(){\n        setIsBack(true);\n    }\n\n    if(isBack){\n        return <EnrollDetail courseDetail={props.courseDetail} course={props.course}/>\n    }\n\n    return (\n\n        <React.Fragment>\n\n        <Card className=\"detailCard\">\n            <Card.Header className=\"enrollHeaderWrapper\">\n                <Button className=\"backBtn\" onClick={backBtnClicked}>返回查看報名名單</Button>\n                <h1 className=\"enrollDetailTitle\">{props.courseDetail.courseName} (後補名單)</h1>\n            </Card.Header>\n            <Card.Body>\n                <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>職員編號</th>\n                        <th>姓名</th>\n                        <th>電郵</th>\n                        <th>單位</th>\n                        <th>職位</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n\n                         {records && records.map(record => {\n                            return (\n                                <tr>\n                                    <td>{record.staffid}</td>\n                                    <td>{record.username}</td>\n                                    <td>{record.email}</td>\n                                    <td>{record.dept}</td>\n                                    <td>{record.post}</td>\n                                </tr>\n                            )\n                        })}\n                      \n                    </tbody>\n                </Table>\n                <p>總後補人數： { records && records.length }</p>\n          </Card.Body>\n        </Card>\n        </React.Fragment>\n\n    ); \n\n}","import React, { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport CourseDetail from './CourseDetail';\nimport WaitingList from './WaitingList';\n\nexport default function EnrollDetail(props){\n\n    console.log(props.courseDetail);\n    const [enrollRecords, setEnrollRecords] = useState([]);\n    const [waitinglist, setWaitingList] = useState(false);\n    const [isBack, setIsBack] = useState(false);\n\n    useEffect(() => {\n        setEnrollRecords(props.courseDetail.records);\n    })\n\n    function backBtnClicked(){\n        setIsBack(true);\n    }\n\n    function waitinglistBtnClicked(){\n        setWaitingList(true);\n    }\n\n    if(isBack){\n        return <CourseDetail selectedCourse={props.course}/>\n    }\n\n    if(waitinglist){\n        console.log(props.course._id)\n        return <WaitingList courseID={props.course._id} courseDetail={props.courseDetail} course={props.course}/>\n    }\n\n    return (\n\n        <Card className=\"detailCard\">\n            <Card.Header className=\"enrollHeaderWrapper\">\n                <Button className=\"backBtn\" onClick={backBtnClicked}>返回查看課程資料</Button>\n                <h1 className=\"enrollDetailTitle\">{props.courseDetail.courseName}</h1>\n                <Button className=\"waitinglistBtn\" onClick={waitinglistBtnClicked}>查看後補名單</Button>\n            </Card.Header>\n            <Card.Body>\n                <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>職員編號</th>\n                        <th>姓名</th>\n                        <th>電郵</th>\n                        <th>單位</th>\n                        <th>職位</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n\n                         {enrollRecords && enrollRecords.map(record => {\n                            return (\n                                <tr>\n                                    <td>{record.staffid}</td>\n                                    <td>{record.username}</td>\n                                    <td>{record.email}</td>\n                                    <td>{record.dept}</td>\n                                    <td>{record.post}</td>\n                                </tr>\n                            );\n                        })}\n                      \n                    </tbody>\n                </Table>\n                <p>總報名人數： { enrollRecords && enrollRecords.length}</p>\n          </Card.Body>\n        </Card>\n\n    );\n}","import React, { useState } from 'react';\nimport qs from 'qs';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport EnrollDetail from './EnrollDetail';\n\nexport default function CourseDetail(props){\n\n  console.log(\"CourseDetail\")\n\n    var date;\n\n    if(props.selectedCourse){\n      date = new Date(props.selectedCourse.date);\n    }\n    const [getCourseDetail, setGetCourseDetail] = useState(false);\n\n    const [courseDetail, setCourseDetail] = useState({});\n\n    function handleClick(){\n\n      const courseID = props.selectedCourse._id;\n\n      const url = '/enrollDetail';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify({courseID: courseID})\n        };\n\n        fetch(url, options)\n        .then(res => res.json())\n        .then(res => {\n          console.log(res);\n            if(res.message === \"未有報名記錄\"){\n              alert(res.message)\n            }else{\n              setGetCourseDetail(true);\n              setCourseDetail(res);\n            }\n        })\n\n    }\n\n    function handleDelete(){\n\n      const courseID = props.selectedCourse._id;\n\n      const url = '/deleteCourse';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify({courseID: courseID})\n        };\n\n        fetch(url, options)\n        .then(res => {\n          if(res.status === 200){\n            alert(\"成功刪除課程\");\n            window.location.reload(true);\n          }else{\n            alert(\"發生錯誤，請稍後再試\");\n          }\n        })\n\n    }\n\n    if(getCourseDetail){\n      return <EnrollDetail courseDetail={courseDetail} course={props.selectedCourse}/>\n    }\n    \n    \n    return(\n        <div>\n            {console.log(getCourseDetail)}\n            <Card className=\"detailCard\">\n              <Card.Header className=\"cardDetailWrapper\">\n                    <h1 className=\"courseTitle\">{props.selectedCourse && props.selectedCourse.courseName}</h1>\n                    <Button variant=\"danger\" className=\"deleteBtn\" onClick={handleDelete}>刪除課程</Button>\n              </Card.Header>\n              <Card.Body>\n                <Card.Title className=\"courseDescription\">{props.selectedCourse && props.selectedCourse.description}</Card.Title>\n                <Card.Text className=\"courseInfo\">上課日期: {date && date.toLocaleDateString()} {props.selectedCourse && props.selectedCourse.time}</Card.Text>\n                <Card.Text className=\"courseInfo\">上課地點: {props.selectedCourse && props.selectedCourse.venue}</Card.Text>\n                <Card.Text className=\"courseInfo\">課程導師: {props.selectedCourse && props.selectedCourse.tutor}</Card.Text>\n                <Card.Text className=\"courseInfo\">尚餘名額: {props.selectedCourse && props.selectedCourse.quota}</Card.Text>\n                <Button variant=\"primary\" className=\"adminEnrollRecordBtn\" onClick={handleClick}>查看報名情況</Button>\n              </Card.Body>\n            </Card>\n        </div>\n    );\n\n}","import React, {useState, useEffect} from 'react';\nimport Navigator from './Navigator';\nimport CourseDetail from './CourseDetail';\nimport Nav from 'react-bootstrap/Nav';\n\n\n\nexport default function Admin(){\n\n    const initialCourse = [{\n        _id: \"\",\n        couseName: \"\",\n        date: \"\",\n        time: \"\",\n        venue: \"\",\n        quota: 0,\n        tutor: \"\",\n        description: \"\"\n    }];\n\n    const[courses, setCourses] = useState(initialCourse);\n    const [selectedID, setSelectedID] = useState(\"\");\n    const [courseToParse, setCourseToParse] = useState(initialCourse[0]);\n\n    useEffect(() => {\n\n        const url = '/adminTodayCourse';\n        const options = {\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json',\n            },\n        };\n\n        fetch(url, options)\n        .then(res => res.json())\n        .then(res => {\n            if(courses === initialCourse){\n                setCourses(res);\n            }\n        })\n\n        setCourseToParse(courses.find(course => course._id === selectedID));\n    })\n\n\n    return (\n        <div>\n            <Navigator />\n            <div className=\"sidebar\">\n\n                <h4 className=\"sidebarTitle\">今天課程</h4>\n\n                <Nav defaultActiveKey=\"\" className=\"flex-column\" onSelect={(selectedKey) => setSelectedID(selectedKey)}>\n\n                    {courses.map(course => {\n                        const date = new Date(course.date);\n                        return <Nav.Link eventKey={course._id} className=\"courseLink\">{course.courseName} {date.toLocaleDateString()}</Nav.Link>\n                    })}\n\n                    {courses.length === 0 && <p className=\"noCourse\">今天沒有課程</p>}\n\n                </Nav>\n            \n            </div>\n            \n            { selectedID && <CourseDetail selectedCourse={courseToParse}/> }\n                \n        \n    </div>\n    );\n}","import React, { useState } from 'react';\nimport Navigator from './Navigator';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport qs from 'qs'\n\n\n\nexport default function CreateCourse(){\n\n    const[newCourse, setNewCourse] = useState({\n        courseName: \"\",\n        date: \"\",\n        time: \"\",\n        venue: \"\",\n        quota: 0,\n        tutor: \"\",\n        description: \"\"\n\n    })\n\n    const[isCreated, setIsCreated] = useState(false);\n\n    function handleChange(event){\n\n        const {name, value} = event.target;\n\n        setNewCourse(prevValue => {\n            return{\n                ...prevValue,\n                [name]: value\n            }\n        });\n\n    }\n\n    function handleCreate(event){\n        event.preventDefault();\n        \n        const url = '/createcourse';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify(newCourse)\n        };\n\n        fetch(url, options)\n        .then(res => {\n            if(res){\n                alert(\"成功新增課程\");\n                setIsCreated(true);\n            }\n        })\n\n    }\n\n    return (\n        <React.Fragment>\n        <Navigator />\n        <h1 className=\"createCourseTitle\">新增課程</h1>\n\n        <Form onSubmit={handleCreate}>\n\n            <div className=\"inputForm\">\n                <div className=\"inputRow\">\n                    <Form.Group className=\"inputItem\">\n                        <Form.Label className=\"inputLabel\">課程名稱:</Form.Label>\n                        <Form.Control placeholder=\"請輸入課程名稱\" className=\"input\" name=\"courseName\" type=\"text\" onChange={handleChange} value={newCourse.cousreName}></Form.Control>\n                    </Form.Group>\n                    <div className=\"inputItem\"></div>\n                    <Form.Group className=\"inputItem\">\n                        <Form.Label className=\"inputLabel\">上課日期:</Form.Label>\n                        <Form.Control placeholder=\"請輸入上課日期\" className=\"input\" name=\"date\" type=\"date\" onChange={handleChange} value={newCourse.date}></Form.Control>\n                    </Form.Group>\n                </div>\n\n                \n                    <div className=\"inputRow\">\n                        <Form.Group className=\"inputItem\">\n                            <Form.Label className=\"inputLabel\">上課時間:</Form.Label>\n                            <Form.Control placeholder=\"請輸入上課時間\" className=\"input\" name=\"time\" type=\"time\" onChange={handleChange} value={newCourse.time}></Form.Control>\n                        </Form.Group>\n                        <div className=\"inputItem\"></div>\n                        <Form.Group className=\"inputItem\">\n                            <Form.Label className=\"inputLabel\">上課地點:</Form.Label>\n                            <Form.Control placeholder=\"請輸入上課地點\" className=\"input\" name=\"venue\" type=\"text\" onChange={handleChange} value={newCourse.venue}></Form.Control>\n                        </Form.Group>\n                    </div>\n\n                    <div className=\"inputRow\">\n                        <Form.Group className=\"inputItem\">\n                            <Form.Label className=\"inputLabel\">課程名額:</Form.Label>\n                            <Form.Control placeholder=\"請輸入課程名額\" className=\"input\" name=\"quota\" type=\"number\" onChange={handleChange} value={newCourse.quota}></Form.Control>\n                        </Form.Group>\n                        <div className=\"inputItem\"></div>\n                        <Form.Group className=\"inputItem\">\n                            <Form.Label className=\"inputLabel\">課程導師:</Form.Label>\n                            <Form.Control placeholder=\"請輸入課程導師\" className=\"input\" name=\"tutor\" type=\"text\" onChange={handleChange} value={newCourse.tutor}></Form.Control>\n                        </Form.Group>\n                    </div>\n                    <div className=\"inputRow\">\n                        <Form.Group className=\"inputItem\">\n                            <Form.Label className=\"inputLabel courseDescriptionText\">課程簡介:</Form.Label>\n                            <FormControl as=\"textarea\" aria-label=\"With textarea\" rows=\"4\" name=\"description\" onChange={handleChange} value={newCourse.description}/>\n                        </Form.Group>\n                    </div>\n                <Button variant=\"primary\" size=\"lg\" className=\"createBtn\" type=\"submit\">新增課程</Button>\n\n                { isCreated && <Redirect to=\"/admin\"/> }\n            \n            </div>\n\n        </Form>\n    </React.Fragment>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport Navigator from './Navigator';\nimport CourseDetail from './CourseDetail';\nimport Nav from \"react-bootstrap/Nav\";\n\nexport default function History(){\n\n    const initialCourse = [{\n        _id: \"\",\n        couseName: \"\",\n        date: \"\",\n        time: \"\",\n        venue: \"\",\n        quota: 0,\n        tutor: \"\",\n        description: \"\"\n    }];\n\n    const[courses, setCourses] = useState(initialCourse);\n    const [selectedID, setSelectedID] = useState(\"\");\n    const [courseToParse, setCourseToParse] = useState(initialCourse[0]);\n\n    useEffect(() => {\n\n        const url = '/adminPastCourse';\n        const options = {\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json',\n            },\n        };\n\n        fetch(url, options)\n        .then(res => res.json())\n        .then(res => {\n            if(courses === initialCourse){\n                setCourses(res);\n            }\n        })\n\n        setCourseToParse(courses.find(course => course._id === selectedID));\n    })\n\n    return (\n        <div>\n\n        <Navigator />\n\n        <div className=\"sidebar\">\n\n            <h4 className=\"sidebarTitle\">以往課程</h4>\n\n                <Nav defaultActiveKey=\"\" className=\"flex-column\" onSelect={(selectedKey) => setSelectedID(selectedKey)}>\n\n                    {courses.map(course => {\n                        const date = new Date(course.date);\n                        return <Nav.Link eventKey={course._id} className=\"courseLink\">{course.courseName} {date.toLocaleDateString()}</Nav.Link>\n                    })}\n                \n                    {courses.length === 0 && <p className=\"noCourse\">沒有過往課程</p>}\n                </Nav>\n\n        </div>\n\n        { selectedID && <CourseDetail selectedCourse={courseToParse}/> }\n\n    );\n\n    </div>\n    );\n\n}","import React, { useState, useEffect } from 'react';\nimport Navigator from './Navigator';\nimport CourseDetail from './CourseDetail';\nimport Nav from \"react-bootstrap/Nav\";\n\nexport default function Future(){\n\n    const initialCourse = [{\n        _id: \"\",\n        couseName: \"\",\n        date: \"\",\n        time: \"\",\n        venue: \"\",\n        quota: 0,\n        tutor: \"\",\n        description: \"\"\n    }];\n\n    const[courses, setCourses] = useState(initialCourse);\n    const [selectedID, setSelectedID] = useState(\"\");\n    const [courseToParse, setCourseToParse] = useState(initialCourse[0]);\n\n    useEffect(() => {\n\n        const url = '/adminFutureCourse';\n        const options = {\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json',\n            },\n        };\n\n        fetch(url, options)\n        .then(res => res.json())\n        .then(res => {\n            console.log(res);\n            if(courses === initialCourse){\n                \n                setCourses(res);\n            }\n        })\n\n        setCourseToParse(courses.find(course => course._id === selectedID));\n    })\n\n    return (\n        <div>\n\n        <Navigator />\n\n        <div className=\"sidebar\">\n\n            <h4 className=\"sidebarTitle\">未來課程</h4>\n\n                <Nav defaultActiveKey=\"\" className=\"flex-column\" onSelect={(selectedKey) => setSelectedID(selectedKey)}>\n\n                    {courses.map(course => {\n                        const date = new Date(course.date);\n                        return <Nav.Link eventKey={course._id} className=\"courseLink\">{course.courseName} {date.toLocaleDateString()}</Nav.Link>\n                    })}\n\n                    {courses.length === 0 && <p className=\"noCourse\">沒有未來課程</p>}\n                \n                </Nav>\n\n        </div>\n\n        { selectedID && <CourseDetail selectedCourse={courseToParse}/> }\n\n    );\n\n    </div>\n    );\n\n}","import React, {useState, useEffect} from 'react';\nimport RegisterRecordDetail from './RegisterRecordDetail';\nimport Card from 'react-bootstrap/Card';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport qs from 'qs';\n\nexport default function RegisterWaitinglistRecord(props){\n\n    const [loaded, setLoaded] = useState(false);\n    const [details, setDetails] = useState();\n    const [courseID, setCourseID] = useState(\"\");\n    const [noResult, setNoResult] = useState();\n    const [isBack, setIsBack] = useState(false);\n\n    useEffect(() => {\n\n        if(!loaded || courseID !== props.selectedCourse._id){\n\n            setCourseID(props.selectedCourse._id);\n\n            const url = '/register-record-waitinglist';\n            const options = {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: qs.stringify({\n                    courseID: props.selectedCourse._id,\n                    username: localStorage.getItem(\"username\")\n                })\n            };\n\n            fetch(url, options)\n            .then(res => {\n                if(res.status !== 403){\n                    return res.json();\n                }else{\n                    return \"error\";\n                }\n            })\n            .then(res => {\n                \n                if(res !== \"error\"){\n                    setNoResult(false);\n                    setDetails(res);\n                }else{\n                    setNoResult(true);\n                    setDetails();\n                }\n            })\n\n            setLoaded(true);\n            console.log(\"After isLoaded: \" + loaded)\n        }\n    })\n\n    function handleClick(){\n        setIsBack(true);\n    }\n\n    if(isBack){\n        return <RegisterRecordDetail selectedCourse={props.selectedCourse}/>\n    }\n\n    return (\n\n        <React.Fragment>\n\n                <Card className=\"detailCard\">\n                    <Card.Header className=\"cardDetailWrapper\">\n                        <Button className=\"backBtn\" onClick={handleClick}>返回查看報名紀錄</Button>\n                        <h1 className=\"courseTitle\">{props.selectedCourse && props.selectedCourse.courseName}</h1>\n                    </Card.Header>\n                    <Card.Body>\n                    {noResult && <p>你並沒有此課程的後補報名紀錄</p>}\n                    <Table striped bordered hover>\n                        <thead>\n                          <tr>\n                            <th>職員編號</th>\n                            <th>姓名</th>\n                            <th>電郵</th>\n                            <th>單位</th>\n                            <th>職位</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                            {details && details.map(detail => {\n                                return <tr>\n                                    <td>{detail.staffid}</td>\n                                    <td>{detail.username}</td>\n                                    <td>{detail.email}</td>\n                                    <td>{detail.dept}</td>\n                                    <td>{detail.post}</td>\n                                </tr>\n                            })}\n                        </tbody>\n                    </Table>\n              </Card.Body>\n            </Card>\n                        \n        </React.Fragment>\n\n    );\n\n\n}","import React, { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card'\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport RegisterWaitinglistRecord from './RegisterWaitinglistRecord';\nimport qs from 'qs';\n\nexport default function RegisterRecordDetail(props){\n\n    const [courseID, setCourseID] = useState(\"\");\n    const [details, setDetails] = useState();\n    const [noResult, setNoResult] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [waitingList, setWaitingList] = useState(false);\n\n    useEffect(() => {\n\n        if(!loaded || courseID !== props.selectedCourse._id){\n\n            setCourseID(props.selectedCourse._id);\n\n            const url = '/register-record';\n            const options = {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: qs.stringify({\n                    courseID: props.selectedCourse._id,\n                    username: localStorage.getItem(\"username\")\n                })\n            };\n\n            fetch(url, options)\n            .then(res => {\n                if(res.status !== 403){\n                    return res.json();\n                }else{\n                    return \"error\";\n                }\n            })\n            .then(res => {\n                \n                if(res !== \"error\"){\n                    setNoResult(false);\n                    setDetails(res);\n                }else{\n                    setNoResult(true);\n                    setDetails();\n                }\n            })\n\n            setLoaded(true);\n            console.log(\"After isLoaded: \" + loaded)\n        }\n    })\n\n    function handleClick(){\n        setWaitingList(true);\n    }\n\n    if(waitingList){\n        return <RegisterWaitinglistRecord selectedCourse={props.selectedCourse}/>\n    }\n\n    return(\n\n        <React.Fragment>\n\n            <Card className=\"detailCard\">\n                <Card.Header className=\"cardDetailWrapper\">\n                    <h1 className=\"courseTitle\">{props.selectedCourse && props.selectedCourse.courseName}</h1>\n                    <Button className=\"waitinglistBtn\" onClick={handleClick}>查看後補名單</Button>\n                </Card.Header>\n                <Card.Body>\n                {noResult && <p>你並沒有此課程的報名紀錄</p>}\n                <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>職員編號</th>\n                        <th>姓名</th>\n                        <th>電郵</th>\n                        <th>單位</th>\n                        <th>職位</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                        {details && details.map(detail => {\n                            return <tr>\n                                <td>{detail.staffid}</td>\n                                <td>{detail.username}</td>\n                                <td>{detail.email}</td>\n                                <td>{detail.dept}</td>\n                                <td>{detail.post}</td>\n                            </tr>\n                        })}\n                    </tbody>\n                </Table>\n          </Card.Body>\n        </Card>\n            \n    </React.Fragment>\n\n    );\n\n}","import React, {useState, useEffect} from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport RegisterRecordDetail from './RegisterRecordDetail';\nimport qs from 'qs';\n\nexport default function RegisterRecord(){\n\n    const initialCourse = [{\n        _id: \"\",\n        couseName: \"\",\n        date: \"\",\n        time: \"\",\n        venue: \"\",\n        quota: 0,\n        tutor: \"\",\n        description: \"\"\n    }];\n\n    const[courses, setCourses] = useState(initialCourse);\n    const [selectedID, setSelectedID] = useState();\n    const [period, setPeriod] = useState(\"今天\");\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [noCourse, setNoCourse] = useState(false);\n\n    useEffect(() => {\n\n        if(!isLoaded){\n            console.log(\"render\");\n            const url = '/course-by-date';\n            const options = {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: qs.stringify({\n                    period: period\n                })\n            };\n\n            fetch(url, options)\n            .then(res => res.json())\n            .then(res => {\n                console.log(\"length: \" + res.length);\n                if(res.length === 0){\n                    setNoCourse(true);\n                    setCourses(initialCourse);\n                }else{\n                    if(res !== courses){\n                        setCourses(res);\n                    }\n                    setNoCourse(false);\n                }\n            })\n            setIsLoaded(true);\n        }\n    })\n\n    function handleClick(selectedKey){\n        console.log(selectedKey);\n        switch(selectedKey){\n            case \"0\":\n                setPeriod(\"過往\");\n                setIsLoaded(false);\n                setSelectedID();\n                break;\n            case \"1\":\n                setPeriod(\"今天\");\n                setIsLoaded(false);\n                setSelectedID();\n                break;\n            case \"2\":\n                setPeriod(\"未來\");\n                setIsLoaded(false);\n                setSelectedID();\n                break;\n            default:\n                break;\n        }\n        \n    }\n\n    function handleSidebarClick(selectedKey){\n        setSelectedID(selectedKey);\n    }\n\n    return(\n        <React.Fragment>\n        <Navbar bg=\"primary\" variant=\"dark\">\n            <Navbar.Brand href=\"/\">靈實員工培訓課程報名系統</Navbar.Brand>\n            <Nav className=\"mr-auto\" defaultActiveKey=\"\" onSelect={(selectedKey) => handleClick(selectedKey)}>\n                <Nav.Link eventKey=\"0\" >過往課程</Nav.Link>\n                <Nav.Link eventKey=\"1\" >今天課程</Nav.Link>\n                <Nav.Link eventKey=\"2\" >末來課程</Nav.Link>\n            </Nav>\n        </Navbar>\n        <div className=\"sidebar\">\n\n            <h4 className=\"sidebarTitle\">{period}課程</h4>\n            {console.log(noCourse)}\n            { noCourse && <p className=\"noCourse\">暫沒有課程</p> }\n            <Nav defaultActiveKey=\"\" className=\"flex-column\" onSelect={(selectedKey) => handleSidebarClick(selectedKey)}>\n                {!noCourse && courses.map(course => {\n                    const date = new Date(course.date);\n                    return <Nav.Link eventKey={course._id} className=\"courseLink\">{course.courseName} {date.toLocaleDateString()}</Nav.Link>\n                })}\n            </Nav>\n\n        </div>\n        \n        {selectedID && <RegisterRecordDetail selectedCourse={courses.find(course => course._id === selectedID)} />}\n\n        </React.Fragment>\n    );\n\n}","import React, {useEffect} from \"react\";\nimport ApplicationForm from \"./ApplicationForm\";\nimport Register from \"./Register\";\nimport { ProtectedRoute } from \"./protected-route\";\nimport { AdminRoute } from \"./admin-route\";\nimport Login from \"./Login\";\nimport Admin from \"./Adminastrative/Admin\";\nimport CreateCourse from \"./Adminastrative/CreateCourse\";\nimport History from \"./Adminastrative/History\";\nimport Future from \"./Adminastrative/Future\";\nimport RegisterRecord from \"./RegisterRecord\";\nimport axios from 'axios';\n\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\n\nexport default function App(props) {\n\n    \n\n    useEffect(() => {\n        console.log(\"render\");\n        axios.get(\"/isAuthenticated\",  \n        { headers:\n            { \n                'Content-Type' : 'Application/json',\n                'Authorization': `Bearer ${localStorage.getItem('userToken')}`\n            }\n        })\n        .then(res => {\n            localStorage.setItem('isAuthorized', true);\n        }).catch(function (error) {\n            localStorage.removeItem('isAuthorized');\n        });\n    })\n\n    \n    return(\n    <Router>\n        <Switch>\n            <Route component={Login} exact path=\"/login\" />\n            <ProtectedRoute component={ApplicationForm} exact path=\"/\" />\n            <AdminRoute component={Admin} exact path=\"/admin\" />\n            <AdminRoute component={CreateCourse} exact path=\"/createcourse\" />\n            <AdminRoute component={History} exact path=\"/history\" />\n            <AdminRoute component={Future} exact path=\"/future\" />\n            <Route component={Register} exact path=\"/register\"/>\n            <Route component={RegisterRecord} exact path=\"/register-record\"/>\n        </Switch>\n    </Router> \n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}