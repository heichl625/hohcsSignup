{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/ApplicationForm.jsx","components/Register.jsx","components/protected-route.jsx","components/admin-route.jsx","components/Auth.jsx","components/Login.jsx","components/Adminastrative/CreateCourse.jsx","components/Adminastrative/AuthorizedList.jsx","components/Adminastrative/WaitingList.jsx","components/Adminastrative/EnrollDetail.jsx","components/Adminastrative/ModifyCourse.jsx","components/Adminastrative/CourseDetail.jsx","components/Adminastrative/Admin.jsx","components/RegisterWaitinglistRecord.jsx","components/RegisterRecordDetail.jsx","components/RegisterRecord.jsx","components/App.jsx","index.js"],"names":["Header","useState","isLoggedOut","setLoggedOut","console","log","Navbar","bg","variant","Brand","href","Nav","className","Link","Button","onClick","fetch","method","headers","then","res","status","alert","localStorage","clear","catch","err","to","Footer","props","getItem","ApplicationForm","courseList","setCourseList","username","email","staffid","post","dept","course","newValue","setNewValue","isDataObtained","setIsDataObtained","fields","role","checkQuota","options","body","qs","stringify","json","quota","clearInput","waitinglist","_id","courseName","enroll","prevValue","handleChange","event","target","name","value","useEffect","setItem","length","src","Form","onSubmit","preventDefault","FormGroup","Label","Control","placeholder","size","onChange","InputGroup","type","Append","Text","as","map","date","Date","getDate","getMonth","getFullYear","Register","password","userData","setUserData","isRegistered","setRegister","Fragment","user","msg","token","Group","ProtectedRoute","Component","component","rest","render","AdminRoute","this","authenticated","cb","Login","isDirected","redirect","setRedirect","reLogin","setRelogin","CreateCourse","time","venue","tutor","description","newCourse","setNewCourse","isCreated","setIsCreated","cousreName","FormControl","aria-label","rows","AuthorizedList","setUsername","list","setList","isObtained","setIsObtained","clicked","isClicked","setisClicked","error","Card","Body","Table","item","index","WaitingList","courseID","isBack","setIsBack","records","setRecords","noResult","setNoResult","EnrollDetail","striped","bordered","hover","record","data","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","setAttribute","append","click","removeChild","download","Parser","parse","enrollRecords","setEnrollRecords","setWaitingList","isLoad","setIsLoad","noRecord","setNoRecord","message","CourseDetail","selectedCourse","enrollment","handleDelete","withBOM","ModifyCourse","setCourse","isModified","setIsModified","parseDate","setParseDate","newDate","day","month","year","getCourseDetail","setGetCourseDetail","modify","setModify","location","reload","Title","toLocaleDateString","Admin","initialCourse","couseName","isAuthorized","authorized","isCreate","create","courses","setCourses","selectedID","setSelectedID","period","setPeriod","isLoaded","setIsLoaded","noCourse","setNoCourse","setAuthorized","setCreate","defaultActiveKey","onSelect","selectedKey","handleClick","eventKey","find","RegisterWaitinglistRecord","loaded","setLoaded","details","setDetails","setCourseID","RegisterRecordDetail","detail","waitingList","RegisterRecord","handleSidebarClick","App","axios","get","removeItem","exact","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.bc8a3788.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Redirect } from \"react-router-dom\";\n\nfunction Header(){\n\n    const [isLoggedOut, setLoggedOut] = useState(\"false\");\n\n    console.log(\"rendering header\");\n\n\n    function handleLogout(){\n\n        const url = '/logout';\n        const options = {\n            method: \"GET\",\n            headers: {\n              \"Accept\": \"application/json\",\n              \"Content-Type\": \"application/json\"\n            }\n        };\n\n        fetch(url, options)\n        .then(res => {\n            if(res.status === 200){\n                console.log(\"Logout now\");\n                alert(\"登出成功\");\n                localStorage.clear();\n                setLoggedOut(\"true\");\n            }else{\n                return \"error\";\n            }\n            \n        }).catch(err => {\n            console.log(\"Login: \" + err);\n        });\n\n    }\n\n    return (\n\n    <Navbar bg=\"primary\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">靈實員工培訓課程報名系統</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/register-record\">報名記錄</Nav.Link>\n        </Nav>\n        <Button variant=\"outline-light\" onClick={handleLogout}>登出</Button>\n\n        { isLoggedOut === \"true\" && <Redirect to=\"/login\" /> }\n    </Navbar>\n    \n    );\n\n}\n\nexport default Header;\n\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nfunction Footer(props){\n\n    return <footer>\n        {localStorage.getItem('isAdmin') && <Link to=\"/admin\" className=\"adminLink\">管理員模式</Link> }\n    </footer>;\n}\n\nexport default Footer; ","import React, {useState, useEffect} from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport qs from 'qs';\n\nfunction ApplicationForm(){\n\n\n    const [courseList, setCourseList] = useState([{}]);\n\n    const [newValue, setNewValue] = useState({\n        username: \"\",\n        email: \"\",\n        staffid: \"\",\n        post: \"\",\n        dept: \"\",\n        course: \"\",\n    });\n    \n    const [isDataObtained, setIsDataObtained] = useState(false);\n   \n\n    const fields = [\"姓名\", \"電郵\", \"職員編號\", \"職位\", \"單位\", \"報讀課程\"];\n    var role = \"\";\n\n    function getFutureCourses(){\n\n        const futureCourseURL = \"/futureCourse\";\n        const futureCourseOptions = {\n            method: \"GET\",\n            headers: {\n              \"Accept\": \"application/json\",\n            }\n        };\n\n        fetch(futureCourseURL, futureCourseOptions)\n        .then(res => res.json())\n        .then(res => {\n            if(res.length > 0){\n                    setCourseList(res);\n                    setNewValue(prevValue => {\n    \n                        // const date = new Date(res[0].date);\n                        // const dateStr = date.toLocaleDateString();\n    \n                        return{\n                            ...prevValue,\n                            course: res[0]\n                        }\n                    })\n                }\n            console.log(newValue.course);\n            setIsDataObtained(true);\n        }).catch(err => {\n            console.log(\"futureCourse: \" + err);\n        });\n    }\n\n    useEffect( () => {\n\n        if(!isDataObtained){\n            const url = \"/user\";\n            const options = {\n                method: \"POST\",\n                headers: {\n                  \"Accept\": \"application/json\",\n                  \"Content-Type\": \"application/x-www-form-urlencoded\"\n                },\n                body: qs.stringify({\"username\": localStorage.getItem(\"username\")})\n            };\n\n            fetch(url, options)\n            .then(res => res.json())\n            .then(res => {\n\n                role = res.role;\n\n                if(role === \"admin\"){\n                    localStorage.setItem(\"isAdmin\", true);\n                }\n\n                setNewValue({\n                    username: res.name,\n                    email: res.username,\n                    staffid: res.staffid,\n                    post: res.post,\n                    dept: res.dept,\n                    course: \"\"\n                })\n            }).catch(err => {\n                console.log(\"user: \" + err);\n            });\n            getFutureCourses();\n        }\n            \n\n    })\n\n    function enroll(course){\n\n        const url = \"/enroll\";\n        const options = {\n            method: \"POST\",\n            headers: {\n              \"Accept\": \"application/json\",\n              \"Content-Type\": \"application/x-www-form-urlencoded\"\n            },\n            body: qs.stringify({\n                \"courseID\": course._id, \n                \"enrollment\": newValue,\n                \"courseName\": course.courseName,\n                \"registeredBy\": localStorage.getItem(\"username\")\n            })\n        };\n\n        fetch(url, options)\n        .then(res => {\n            if(res.status === 200){\n                alert(\"成功報讀課程\");\n                clearInput();\n            }else{\n                alert(\"未能成功報讀課程, 請稍後再嘗試\");\n            }\n        }).catch(err => {\n            console.log(\"enroll: \" + err);\n        });\n    }\n\n    function waitinglist(){\n\n        const url = \"/waitinglist\";\n        const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\"\n            },\n            body: qs.stringify({\n                \"enrollment\": newValue,\n                \"registeredBy\": localStorage.getItem(\"username\")\n            })\n        };\n\n        fetch(url, options)\n        .then(res => {\n            if(res.status === 200){\n                alert(\"課程名額暫滿，你將會加進後備名單。如最後能夠成功報讀，屆時將會以公司電郵通知\");\n                clearInput();\n            }else{\n                alert(\"發生錯誤，請稍後再嘗試\");\n            }\n        }).catch(err => {\n            console.log(\"waitinglist: \" + err);\n        });\n    }\n\n\n    function checkQuota(){\n\n        if(newValue.email !== \"\"){\n\n            console.log(\"CourseID: \" + newValue.course);\n            const url = \"/checkQuota\";\n            const options = {\n                method: \"POST\",\n                headers: {\n                  \"Accept\": \"application/json\",\n                  \"Content-Type\": \"application/x-www-form-urlencoded\"\n                },\n                body: qs.stringify({\n                    \"courseID\": newValue.course\n                })\n            };\n\n            fetch(url, options)\n            .then(res => {\n                if(res.status === 200){\n                    return res.json()\n                }else{\n                    alert(\"發生錯誤，請稍後再嘗試\");\n                    return \"error\";\n                }\n            })\n            .then(res => {\n                console.log(res);\n                if(res.quota === 0){\n                    waitinglist();\n                }else if(res !== \"error\"){\n                    enroll(res);\n                }\n            }).catch(err => {\n                console.log(\"Login: \" + err);\n            });\n        }else{\n            alert(\"請輸入有效資料\");\n        }\n    }\n\n\n    function handleSubmit(event){\n\n        event.preventDefault();\n        checkQuota();\n        //enroll();\n    }\n\n    function clearInput(){\n\n        setNewValue(prevValue => {\n                    \n            return {\n                ...prevValue,\n                username: \"\",\n                email: \"\",\n                staffid: \"\",\n                post: \"\",\n                dept: \"\"\n            }\n\n        });\n\n    }\n\n\n    function handleChange(event){\n\n        const {name, value} = event.target;\n\n        console.log(value);\n\n        setNewValue(prevValue => {\n            return{\n                ...prevValue,\n                [name]: value\n            }; \n        });\n\n    }\n\n    return (\n        <div>\n    <Header />\n    <img src=\"https://www.hohcs.org.hk/App/Modules/Admin/Tpl/Static/upload/image/20170418/20170418125117_21846.png\" className=\"formIcon\"/>\n\n    <p className=\"reminderText\">如替其他同事報名，請填上同事資料</p>\n    <p className=\"reminderText\">於提交名單前，請先知會上司</p>\n\n    \n    <Form className=\"inputForm\" onSubmit={handleSubmit}>\n    \n        <div className=\"inputRow\">\n            <div className=\"inputItem\">\n                <FormGroup>\n                    <Form.Label className=\"inputLabel\">名稱:</Form.Label>\n                    <Form.Control placeholder={fields[0]} size=\"lg\" onChange={handleChange} value={newValue.username} name=\"username\"></Form.Control>\n                </FormGroup>\n            </div>\n\n            <div className=\"inputItem\"></div>\n\n            <div className=\"inputItem\">\n                <FormGroup className=\"inputItem\">\n                    <Form.Label className=\"inputLabel\">電郵:</Form.Label>\n                    <InputGroup>\n                        <Form.Control placeholder={fields[1]} size=\"lg\" name=\"email\" type=\"text\" onChange={handleChange} value={newValue.email} className=\"input\"></Form.Control>\n                        <InputGroup.Append>\n                            <InputGroup.Text>@hohsc.org.hk</InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup> \n                </FormGroup>\n            </div>\n        </div>\n            \n        <div className=\"inputRow\">\n\n            <div className=\"inputItem\">\n\n                <FormGroup>\n                    <Form.Label className=\"inputLabel\">職員編號:</Form.Label>\n                    <Form.Control placeholder={fields[2]} size=\"lg\" onChange={handleChange} value={newValue.staffid} name=\"staffid\"></Form.Control>\n                </FormGroup>\n            </div>\n\n            <div className=\"inputItem\"></div>\n\n            <div className=\"inputItem\">\n                <FormGroup>\n                    <Form.Label className=\"inputLabel\">職位:</Form.Label>\n                    <Form.Control placeholder={fields[3]} size=\"lg\" onChange={handleChange} value={newValue.post} name=\"post\"></Form.Control>\n                </FormGroup>\n            </div>\n\n        </div>\n            \n\n        <div className=\"inputRow\">\n\n            <div className=\"inputItem\">\n                <FormGroup>\n                    <Form.Label className=\"inputLabel\">單位:</Form.Label>\n                    <Form.Control placeholder={fields[4]} size=\"lg\" onChange={handleChange} value={newValue.dept} name=\"dept\"></Form.Control>\n                </FormGroup>\n            </div>\n\n            <div className=\"inputItem\"></div>\n\n            <div className=\"inputItem\">\n                <FormGroup>\n                    <Form.Label className=\"inputLabel\">報讀課程:</Form.Label>\n                    <Form.Control size=\"lg\" onChange={handleChange} name=\"course\" as=\"select\" className=\"courseSelection\">\n                        <option>請選擇課程</option>\n                        {courseList.length > 0 && courseList.map(course => {\n                            var date = new Date(course.date);\n                        return <option value={course._id}>{course.courseName} {date.getDate()}/{date.getMonth()+1}/{date.getFullYear()}</option>\n                        })}\n                    </Form.Control>\n                </FormGroup>\n            </div>\n\n        </div>\n\n        <div className=\"btnWrapper\">\n            <Button variant=\"primary\" size=\"lg\" type=\"submit\" className=\"submitBtn\">提交</Button>\n\n            <Button variant=\"danger\" size=\"lg\" onClick={clearInput} className=\"clearBtn\">清除所有資料</Button>\n        </div>\n\n    </Form>\n    <Footer role={role}/>\n    </div>\n    );\n}\n\nexport default ApplicationForm;","import React, {useState} from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport qs from 'qs';\n\nexport default function Register(){\n\n    const [userData, setUserData] = useState({\n\n        username: \"\",\n        password: \"\",\n        staffid: \"\",\n        name: \"\",\n        post: \"\",\n        dept: \"\"\n\n    });\n\n    const [isRegistered, setRegister] = useState(false)\n\n    function handleChange(event){\n\n        const {name, value} = event.target;\n        \n        setUserData(prevValue => {\n            return{\n                ...prevValue,\n                [name]: value\n            }; \n        });\n        \n    }\n\n    function handleRegister(event){\n\n        event.preventDefault();\n\n        const user = {\n            username: userData.username,\n            password: userData.password,\n            staffid: userData.staffid,\n            name: userData.name,\n            post: userData.post,\n            dept: userData.dept\n        };\n\n        const url = '/register';\n        const options = {\n            method: 'POST',\n            headers: {\n              \"Accept\": \"application/json\",\n              \"Content-Type\": \"application/x-www-form-urlencoded\"\n            },\n            body: qs.stringify(user)\n        };\n\n        fetch(url, options)\n        .then(res => {\n            if(res.status === 200){\n                return res.json();\n            }else{\n                return \"error\";\n            }\n        })\n        .then(res => {\n            if(res !== \"error\"){\n                if(res.msg === \"Not Authorized\"){\n                    alert(\"你的電郵並未獲得授權，因此不能註冊\");\n                }else{\n                    localStorage.setItem('userToken', res.token);\n                    localStorage.setItem('isAuthorized', true);\n                    localStorage.setItem('username', res.user.username);\n                    setRegister(true);\n                }\n            }else{\n                alert(\"未能成功註冊，請再嘗試\");\n                setUserData({\n                    username: \"\",\n                    password: \"\",\n                    staffid: \"\",\n                    name: \"\",\n                    post: \"\",\n                    dept: \"\"\n                })\n            }\n            \n        })\n    }\n\n    return (\n        <React.Fragment>\n\n            <img src=\"https://www.hohcs.org.hk/App/Modules/Admin/Tpl/Static/upload/image/20170418/20170418125117_21846.png\" className=\"icon-register\"/>\n\n                <Form onSubmit={handleRegister}>\n\n                            <Form.Group className=\"inputGroup\">\n                                <Form.Label className=\"inputLabel\">電郵:</Form.Label>\n                                <InputGroup>\n                                    <Form.Control placeholder=\"請輸入電郵\" className=\"input\" name=\"username\" onChange={handleChange} value={userData.username}></Form.Control>\n                                    <InputGroup.Append>\n                                        <InputGroup.Text>@hohsc.org.hk</InputGroup.Text>\n                                    </InputGroup.Append>\n                                </InputGroup> \n                            </Form.Group>\n\n\n                            <Form.Group className=\"inputGroup\">\n                                <Form.Label className=\"inputLabel\">密碼:</Form.Label>\n                                <Form.Control placeholder=\"請輸入密碼\" onChange={handleChange} name=\"password\" value={userData.password} type=\"password\" className=\"input\"></Form.Control>\n                            </Form.Group>\n\n\n\n                            <Form.Group className=\"inputGroup\">\n                                <Form.Label className=\"inputLabel\">姓名:</Form.Label>\n                                <Form.Control placeholder=\"請輸入姓名\" onChange={handleChange} name=\"name\" value={userData.name} type=\"text\" className=\"input\"></Form.Control>\n                            </Form.Group>\n\n\n                            <Form.Group className=\"inputGroup\">\n                                <Form.Label className=\"inputLabel\"> 單位:</Form.Label>\n                                <Form.Control placeholder=\"請輸入單位\" onChange={handleChange} name=\"dept\" value={userData.dept} type=\"text\" className=\"input\"></Form.Control>\n                            </Form.Group>\n\n                            <Form.Group className=\"inputGroup\">\n                                <Form.Label className=\"inputLabel\"> 職位:</Form.Label>\n                                <Form.Control placeholder=\"請輸入職位\" onChange={handleChange} name=\"post\" value={userData.post} type=\"text\" className=\"input\"></Form.Control>\n                            </Form.Group>\n\n\n                            <Form.Group className=\"inputGroup\">\n                                <Form.Label className=\"inputLabel\"> 職員編號:</Form.Label>\n                                <Form.Control placeholder=\"請輸入職員編號\" onChange={handleChange} name=\"staffid\" value={userData.staffid} type=\"text\" className=\"input\"></Form.Control>\n                            </Form.Group>\n\n                        <Button variant=\"primary\" size=\"lg\" className=\"registerBtn\" type=\"submit\">註冊</Button>\n\n                { isRegistered && <Redirect to=\"/\" /> }\n                </Form>\n\n        </React.Fragment>\n    );\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const ProtectedRoute = ({component: Component, ...rest}) => {\n\n    return (\n        <Route {...rest} render={\n            (props) => {\n                if(localStorage.getItem('isAuthorized')){\n                    return <Component {...props}/>;\n                }else{\n                    return <Redirect to=\"/login\" />;\n                }\n            }\n        }>\n\n        </Route>\n    );\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const AdminRoute = ({component: Component, ...rest}) => {\n\n    return (\n        <Route {...rest} render={\n            (props) => {\n                if(localStorage.getItem('isAdmin')){\n                    return <Component {...props}/>;\n                }else{\n                    return <Redirect to=\"/\" />;\n                }\n            }\n        }>\n\n        </Route>\n    );\n}","class Auth {\n    constructor(){\n        this.authenticated = false;\n    }\n\n    login(cb){\n        this.authenticated = true;\n        cb();\n    }\n\n    logout(cb){\n        this.authenticated = false;\n        cb();\n    }\n\n    isAuthenticated(){\n        return this.authenticated;\n    }\n}\n\nexport default new Auth();","import React, { useState } from \"react\";\nimport auth from \"./Auth\";\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport { Link, Redirect } from 'react-router-dom';\nimport qs from 'qs';\n\nfunction Login() {\n\n    const [userData, setUserData] = useState({\n\n        username: \"\",\n        password: \"\"\n\n    });\n\n    const [redirect, setRedirect] = useState({\n        to: \"\",\n        isDirected: null\n    });\n\n    const [reLogin, setRelogin] = useState(false);\n\n    if(localStorage.getItem('isAuthorized')){\n        return <Redirect to=\"/\" />;\n    }\n\n\n    function handleChange(event){\n\n        const {name, value} = event.target;\n\n        setUserData(prevValue => {\n            return {\n                ...prevValue,\n                [name]: value\n            };\n        });\n\n    }\n\n    function handleSubmit(event){\n\n        const user = {\n            \"username\": userData.username,\n            \"password\": userData.password\n        }\n\n        event.preventDefault();\n\n        const url = '/login';\n        const options = {\n            method: 'POST',\n            headers: {\n              \"Accept\": \"application/json\",\n              \"Content-Type\": \"application/x-www-form-urlencoded\"\n            },\n            body: qs.stringify(user)\n        };\n\n        fetch(url, options)\n        .then(res => {\n            if(res.status === 200){\n                return res.json();\n            }else{\n                return \"error\";\n            }\n            \n        })\n        .then(res => {\n\n            if(res !== \"error\"){\n                localStorage.setItem('userToken', res.token);\n                localStorage.setItem('isAuthorized', true);\n                localStorage.setItem('username', res.user.username);\n                setRedirect({\n                    to: \"/\",\n                    isDirected: true\n                });\n            }else{\n                setRelogin(true);\n                setUserData({\n                    username: \"\",\n                    password: \"\"\n                })\n            }\n            \n        }).catch(err => {\n            console.log(\"Login: \" + err);\n        });\n    }\n\n    return(\n        <React.Fragment>\n        <img src=\"https://www.hohcs.org.hk/App/Modules/Admin/Tpl/Static/upload/image/20170418/20170418125117_21846.png\" className=\"icon\"/>\n\n    { reLogin && <p className=\"loginError\">登入電郵或密碼錯誤，請重新輸入</p> }\n    \n    {/* onSubmit={handleSubmit} */}\n        <Form onSubmit={handleSubmit} className=\"formInput\">\n            \n                    <InputGroup className=\"loginInput\">\n                        <Form.Control placeholder=\"電郵\" className=\"input\" name=\"username\" onChange={handleChange} value={userData.username}></Form.Control>\n                        <InputGroup.Append>\n                            <InputGroup.Text className=\"emailText\">@hohsc.org.hk</InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup> \n       \n         \n                    <Form.Group className=\"loginInput\">\n                        <Form.Control placeholder=\"密碼\" onChange={handleChange} name=\"password\" value={userData.password} type=\"password\"></Form.Control>\n                    </Form.Group>\n            \n            {/* onClick={handleLogin} */}\n                <Button variant=\"primary\" size=\"lg\" className=\"loginBtn\" type=\"submit\">登入</Button>\n                <p className=\"remindText\">如未曾註冊，請先註冊。</p>\n\n                \n                <Link to=\"/register\">\n                    <Button variant=\"secondary\" size=\"lg\" className=\"registerBtn\">註冊</Button>\n                </Link>\n                \n                \n                \n        </Form>\n        {redirect.isDirected && <Redirect to={redirect.to} /> }\n\n        </React.Fragment>\n    );\n\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport qs from 'qs'\n\n\n\nexport default function CreateCourse(){\n\n    const[newCourse, setNewCourse] = useState({\n        courseName: \"\",\n        date: \"\",\n        time: \"\",\n        venue: \"\",\n        quota: 0,\n        tutor: \"\",\n        description: \"\"\n\n    })\n\n    const[isCreated, setIsCreated] = useState(false);\n\n    function handleChange(event){\n\n        const {name, value} = event.target;\n\n        setNewCourse(prevValue => {\n            return{\n                ...prevValue,\n                [name]: value\n            }\n        });\n\n    }\n\n    function handleCreate(event){\n        event.preventDefault();\n        \n        const url = '/createcourse';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify(newCourse)\n        };\n\n        fetch(url, options)\n        .then(res => {\n            if(res){\n                alert(\"成功新增課程\");\n                setIsCreated(true);\n            }\n        })\n\n    }\n\n    return (\n        <React.Fragment>\n\n        <div className=\"createCourse\">\n            <h1 className=\"createCourseTitle\">新增課程</h1>\n\n            <Form onSubmit={handleCreate}>\n\n                <div className=\"inputForm\">\n                    <div className=\"inputRow\">\n                        <Form.Group className=\"inputItem\">\n                            <Form.Label className=\"inputLabel\">課程名稱:</Form.Label>\n                            <Form.Control placeholder=\"請輸入課程名稱\" className=\"input\" name=\"courseName\" type=\"text\" onChange={handleChange} value={newCourse.cousreName}></Form.Control>\n                        </Form.Group>\n                        <div className=\"inputItem\"></div>\n                        <Form.Group className=\"inputItem\">\n                            <Form.Label className=\"inputLabel\">上課日期:</Form.Label>\n                            <Form.Control placeholder=\"請輸入上課日期\" className=\"input\" name=\"date\" type=\"date\" onChange={handleChange} value={newCourse.date}></Form.Control>\n                        </Form.Group>\n                    </div>\n\n\n                        <div className=\"inputRow\">\n                            <Form.Group className=\"inputItem\">\n                                <Form.Label className=\"inputLabel\">上課時間:</Form.Label>\n                                <Form.Control placeholder=\"請輸入上課時間\" className=\"input\" name=\"time\" type=\"time\" onChange={handleChange} value={newCourse.time}></Form.Control>\n                            </Form.Group>\n                            <div className=\"inputItem\"></div>\n                            <Form.Group className=\"inputItem\">\n                                <Form.Label className=\"inputLabel\">上課地點:</Form.Label>\n                                <Form.Control placeholder=\"請輸入上課地點\" className=\"input\" name=\"venue\" type=\"text\" onChange={handleChange} value={newCourse.venue}></Form.Control>\n                            </Form.Group>\n                        </div>\n\n                        <div className=\"inputRow\">\n                            <Form.Group className=\"inputItem\">\n                                <Form.Label className=\"inputLabel\">課程名額:</Form.Label>\n                                <Form.Control placeholder=\"請輸入課程名額\" className=\"input\" name=\"quota\" type=\"number\" onChange={handleChange} value={newCourse.quota}></Form.Control>\n                            </Form.Group>\n                            <div className=\"inputItem\"></div>\n                            <Form.Group className=\"inputItem\">\n                                <Form.Label className=\"inputLabel\">課程導師:</Form.Label>\n                                <Form.Control placeholder=\"請輸入課程導師\" className=\"input\" name=\"tutor\" type=\"text\" onChange={handleChange} value={newCourse.tutor}></Form.Control>\n                            </Form.Group>\n                        </div>\n                        <div className=\"inputRow\">\n                            <Form.Group className=\"inputItem\">\n                                <Form.Label className=\"inputLabel courseDescriptionText\">課程簡介:</Form.Label>\n                                <FormControl as=\"textarea\" aria-label=\"With textarea\" rows=\"4\" name=\"description\" onChange={handleChange} value={newCourse.description}/>\n                            </Form.Group>\n                        </div>\n                    <Button variant=\"primary\" size=\"lg\" className=\"createBtn\" type=\"submit\">新增課程</Button>\n\n                    { isCreated && <Redirect to=\"/admin\"/> }\n\n                </div>\n\n            </Form>\n        </div>\n    </React.Fragment>\n    );\n}","import React, {useState, useEffect} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport qs from 'qs';\n\nexport default function AuthorizedList() {\n\n    const [username, setUsername] = useState(\"\");\n    const [list, setList] = useState([]);\n    const [isObtained, setIsObtained] = useState(false);\n    const [isClicked, setisClicked] = useState({\n        clicked: false,\n        email: \"\"\n    });\n\n    useEffect(() => {\n        if(!isObtained){\n            const getURL = \"/get-authorized-list\";\n            const getOptions = {\n                method: \"GET\",\n                headers: {\n                  \"Accept\": \"application/json\",\n                }\n            };\n\n            fetch(getURL, getOptions)\n            .then(res => {\n                if(res.status === 200){\n                    return res.json();\n                }else{\n                    return \"error\";\n                }\n            })\n            .then(res => {\n                if(res !== \"error\"){\n                    console.log(res);\n                    setList(res);\n                    setIsObtained(true);\n                } \n            }).catch(error => {\n                console.log(error);\n            });\n        }\n\n        if(isClicked.clicked){\n\n            const url = \"/delete-authorized-list\";\n            const options = {\n                method: \"POST\",\n                headers: {\n                  \"Accept\": \"application/json\",\n                  \"Content-Type\": \"application/x-www-form-urlencoded\"\n                },\n                body: qs.stringify({\n                    \"email\": isClicked.email\n                })\n            };\n\n            console.log(options.body);\n\n            fetch(url, options)\n            .then(res => {\n                if(res.status === 200){\n                    alert(\"成功從授權名單中移除此電郵\");\n                    setisClicked(false);\n                    setIsObtained(false);\n                }else{\n                    alert(\"未能從授權名單中移除此電郵\");\n                }\n            })\n\n        }\n\n    })\n\n\n    function handleChange(event){\n\n        const {value} = event.target;\n        \n        setUsername(value);\n    }\n\n    function handleSubmit(event){\n\n        event.preventDefault();\n\n        const url = \"/add-authorized-list\";\n        const options = {\n            method: \"POST\",\n            headers: {\n              \"Accept\": \"application/json\",\n              \"Content-Type\": \"application/x-www-form-urlencoded\"\n            },\n            body: qs.stringify({\n                \"email\": username+\"@hohcs.org.hk\"\n            })\n        };\n\n        fetch(url, options)\n        .then(res => {\n            if(res.status === 200){\n                alert(\"成功新增授權電郵\");\n                setUsername(\"\");\n                setIsObtained(false);\n\n            }else{\n                alert(\"發生錯誤，請稍後再嘗試\");\n            }\n        });\n\n    }\n\n    return (\n\n        <React.Fragment>\n            <Card className=\"authorizedCard\">\n\n                <Card.Header className=\"cardDetailWrapper\"><h1 className=\"authorizedTitle\">授權名單</h1></Card.Header>\n                <Card.Body>\n                    <Form className=\"authorizedForm\" onSubmit={handleSubmit}>\n                    <InputGroup>\n                        <Form.Control type=\"text\" className=\"input\" placeholder=\"輸入電郵\" name=\"username\" onChange={handleChange} value={username}></Form.Control>\n                        <InputGroup.Append>\n                            <InputGroup.Text>@hohsc.org.hk</InputGroup.Text>\n                        </InputGroup.Append>\n                        <InputGroup.Append>\n                            <Button className=\"addBtn\" type=\"submit\">+</Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                    </Form>\n                    <Table className=\"authorizedTable\">\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>己授權名單</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        {list && list.map((item, index) => {\n                            return (\n                                <tr>\n                                    <td>{index+1}</td>\n                                    <td>{item.email}</td>\n                                    <td><Button className=\"authorizedDeleteBtn\" variant=\"danger\" onClick={() => setisClicked({\n                                        clicked: true,\n                                        email: item.email})}>移除</Button></td>\n                                </tr>\n                            )\n                        })}\n                    </Table>\n                </Card.Body>\n\n            </Card>\n        </React.Fragment>\n\n    )\n\n}","import React, {useState, useEffect} from 'react';\nimport EnrollDetail from './EnrollDetail';\nimport Card from 'react-bootstrap/Card';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport { Parser } from 'json2csv';\nimport qs from 'qs';\n\nexport default function WaitingList(props){\n\n    const courseID = props.course._id;\n    const [isBack, setIsBack] = useState(false);\n    const [records, setRecords] = useState([]);\n    const [noResult, setNoResult] = useState();\n\n    useEffect(() => {\n\n        const url = '/waitinglistByCourseID';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify({\n                courseID: courseID\n            })\n        };\n\n        fetch(url, options)\n        .then(res => {\n\n            if(res.status === 200){\n                return res.json();\n            }else{\n                return \"no result\";\n            }\n        \n        })\n        .then(res => {\n            console.log(res);\n            if(res !== \"no result\"){\n                setNoResult(false);\n                setRecords(res.records);\n            }else{\n                setNoResult(true);\n                setRecords();\n            }\n            \n        })\n    }, [props])\n\n    function backBtnClicked(){\n        setIsBack(true);\n    }\n\n    function handleExport(){\n\n        console.log(records);\n\n        const fields = [\"username\", \"email\", \"staffid\", \"dept\", \"post\", \"registeredBy\"];\n        const options = { fields }\n\n        const parser = new Parser(options);\n        const csv = parser.parse(records);\n\n        download(csv);\n\n    }\n\n    function download(data){\n\n        const blob = new Blob([data], {type: \"text/csv\"});\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.setAttribute('hidden', '');\n        a.setAttribute('href', url);\n        a.setAttribute('download', props.course.courseName + \"_waitinglist.csv\");\n        document.body.append(a)\n        a.click();\n        document.body.removeChild(a);\n\n    }\n\n    if(isBack){\n        return <EnrollDetail course={props.course}/>\n    }\n\n    return (\n\n        <React.Fragment>\n\n        <Card className=\"detailCard\">\n            <Card.Header className=\"enrollHeaderWrapper\">\n                <Button className=\"backBtn\" onClick={backBtnClicked}>返回查看報名名單</Button>\n                <h1 className=\"enrollDetailTitle\">{props.course.courseName} (後補名單)</h1>\n            </Card.Header>\n            <Card.Body>\n                {noResult && <p>此課程未有候補紀錄</p>}\n                <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>職員編號</th>\n                        <th>姓名</th>\n                        <th>電郵</th>\n                        <th>單位</th>\n                        <th>職位</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n\n                         {records && records.map(record => {\n                            return (\n                                <tr>\n                                    <td>{record.staffid}</td>\n                                    <td>{record.username}</td>\n                                    <td>{record.email}</td>\n                                    <td>{record.dept}</td>\n                                    <td>{record.post}</td>\n                                </tr>\n                            )\n                        })}\n                      \n                    </tbody>\n                </Table>\n                <div className=\"cardBottom\">\n                    <p className=\"enrollNum\">總候補人數： { records && records.length}</p>\n                    <Button className=\"exportBtn\" variant=\"primary\" onClick={handleExport}>匯出候補名單(.csv)</Button>\n                </div>\n          </Card.Body>\n        </Card>\n        </React.Fragment>\n\n    ); \n\n}","import React, { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport CourseDetail from './CourseDetail';\nimport WaitingList from './WaitingList';\nimport { Parser } from 'json2csv';\nimport qs from 'qs';\n\nexport default function EnrollDetail(props){\n\n    const [enrollRecords, setEnrollRecords] = useState();\n    const [waitinglist, setWaitingList] = useState(false);\n    const [isBack, setIsBack] = useState(false);\n    const [isLoad, setIsLoad] = useState(false);\n    const [courseID, setCourseID] = useState(\"\");\n    const [noRecord, setNoRecord] = useState();\n\n    useEffect(() => {\n\n    //   if(!isLoad || courseID !== props.course._id){\n\n        const url = '/enrollDetail';\n          const options = {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: qs.stringify({courseID: props.course._id})\n          };\n\n          fetch(url, options)\n          .then(res => res.json())\n          .then(res => {\n              console.log(res);\n              if(res.message !== \"未有報名記錄\"){\n                setEnrollRecords(res);\n                setNoRecord(false);\n              }else{\n                setEnrollRecords();\n                setNoRecord(true);\n              }\n              setIsLoad(true);\n              \n          })\n    //   }\n\n    //   console.log(enrollRecords);\n\n    }, [props, isLoad]);\n\n    function backBtnClicked(){\n        setIsBack(true);\n    }\n\n    function waitinglistBtnClicked(){\n        setWaitingList(true);\n    }\n\n    function handleExport(){\n\n        const fields = [\"username\", \"email\", \"staffid\", \"dept\", \"post\", \"registeredBy\"];\n        const options = { fields }\n\n        const parser = new Parser(options, {withBOM: true});\n        const csv = parser.parse(enrollRecords.records);\n\n        download(csv);\n\n    }\n\n    function download(data){\n\n        const blob = new Blob([data], {type: \"text/csv\"});\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.setAttribute('hidden', '');\n        a.setAttribute('href', url);\n        a.setAttribute('download', props.course.courseName + \".csv\");\n        document.body.append(a)\n        a.click();\n        document.body.removeChild(a);\n\n    }\n\n    function handleDelete(enrollment){\n        \n        console.log(enrollment);\n\n        const url = \"/deleteEnrollment\";\n        const options = {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify({\n                courseID: props.course._id,\n                enrollment: enrollment\n            })\n        }\n\n        fetch(url, options)\n        .then(res => {\n            console.log(\"in promise\");\n            if(res.status === 200){\n                alert(\"此紀錄已刪除\");\n                setIsLoad(false);\n            }else{\n                alert(\"未能刪除此紀錄，請稍後再嘗試\");\n            }\n        })\n\n    }\n\n    if(isBack){\n        return <CourseDetail selectedCourse={props.course}/>\n    }\n\n    if(waitinglist){\n        return <WaitingList course={props.course}/>\n    }\n\n    return (\n\n        <Card className=\"detailCard\">\n            <Card.Header className=\"enrollHeaderWrapper\">\n                <Button className=\"backBtn\" onClick={backBtnClicked}>返回查看課程資料</Button>\n                {/* {console.log(props.courseDetail)} */}\n                <h1 className=\"enrollDetailTitle\">{props.course.courseName}</h1>\n                <Button className=\"waitinglistBtn\" onClick={waitinglistBtnClicked}>查看後補名單</Button>\n            </Card.Header>\n            <Card.Body>\n                { noRecord && <p>此課程未有報名記錄</p> }\n                <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>職員編號</th>\n                        <th>姓名</th>\n                        <th>電郵</th>\n                        <th>單位</th>\n                        <th>職位</th>\n                        <th></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n\n                         {enrollRecords && enrollRecords.records.map(record => {\n                            return (\n                                <tr>\n                                    <td>{record.staffid}</td>\n                                    <td>{record.username}</td>\n                                    <td>{record.email}</td>\n                                    <td>{record.dept}</td>\n                                    <td>{record.post}</td>\n                                    <td><Button variant=\"danger\" onClick={() => {handleDelete(record)}} className=\"recordDelBtn\">刪除紀錄</Button></td>\n                                </tr>\n                            );\n                        })}\n                      \n                    </tbody>\n                </Table>\n                <div className=\"cardBottom\">\n                    <p className=\"enrollNum\">總報名人數： { enrollRecords && enrollRecords.records.length}</p>\n                    <Button className=\"exportBtn\" variant=\"primary\" onClick={handleExport}>匯出名單(.csv)</Button>\n                </div>\n          </Card.Body>\n        </Card>\n\n    );\n}","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport qs from 'qs'\nimport { useEffect } from 'react';\n\nexport default function ModifyCourse(props){\n\n    const [course, setCourse] = useState(props.course);\n    // const [courseToParse, setCourseToParse] = useState();\n    const [isModified, setIsModified] = useState(false);\n    const [parseDate, setParseDate] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n\n    console.log(course);\n\n    useEffect(() => {\n        if(!parseDate){\n\n            const newDate = new Date(course.date);\n            var day = newDate.getDate();\n            var month = newDate.getMonth()+1;\n            const year = newDate.getFullYear();\n\n            if(day <= 9){\n                day = \"0\" + day;\n            }\n\n            if(month <= 9){\n                month = \"0\"+month;\n            }\n\n            setCourse( prevValue => {\n                return {\n                    ...prevValue,\n                    date: year + \"-\" + month + \"-\" + day\n                }\n            })\n            setParseDate(true);\n        }\n    })\n\n    function handleChange(event){\n        const {name, value} = event.target;\n\n        setCourse(prevValue => {\n            return{\n                ...prevValue,\n                [name]: value\n            }\n        })\n    }\n\n    function handleModify(event){\n\n        event.preventDefault();\n\n        const url = \"/modifyCourse\";\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify({course: course})\n        }\n\n        fetch(url, options)\n        .then(res => {\n            if(res.status === 200){\n                return res.json();\n            }else{\n                return \"error\";\n            }\n        })\n        .then(res => {\n            if(res !== \"error\"){\n                if(!res.msg){\n                    alert(\"成功修改課程\");\n                    setIsModified(true);\n                }else{\n                    alert(\"未能修改課程，請稍後再嘗試\");\n                }\n            }else{\n                alert(\"未能修改課程，請稍後再嘗試\");\n            }\n        })\n        \n    }\n\n\n    return (\n        <React.Fragment>\n        <h1 className=\"modifyCourseTitle\">修改課程資料</h1>\n\n        <Form onSubmit={handleModify}>\n\n            <div className=\"modifyForm\">\n                <div className=\"inputRow\">\n                    <Form.Group className=\"inputItem\">\n                        <Form.Label className=\"inputLabel\">課程名稱:</Form.Label>\n                        <Form.Control placeholder=\"請輸入課程名稱\" className=\"input\" name=\"courseName\" type=\"text\" onChange={handleChange} value={course.courseName}></Form.Control>\n                    </Form.Group>\n                    <div className=\"inputItem\"></div>\n                    <Form.Group className=\"inputItem\">\n                        <Form.Label className=\"inputLabel\">上課日期:</Form.Label>\n                        <Form.Control placeholder=\"請輸入上課日期\" className=\"input inputDate\" name=\"date\" type=\"date\" onChange={handleChange} value={course.date}></Form.Control>\n                    </Form.Group>\n                </div>\n\n                \n                    <div className=\"inputRow\">\n                        <Form.Group className=\"inputItem\">\n                            <Form.Label className=\"inputLabel\">上課時間:</Form.Label>\n                            <Form.Control placeholder=\"請輸入上課時間\" className=\"input\" name=\"time\" type=\"time\" onChange={handleChange} value={course.time}></Form.Control>\n                        </Form.Group>\n                        <div className=\"inputItem\"></div>\n                        <Form.Group className=\"inputItem\">\n                            <Form.Label className=\"inputLabel\">上課地點:</Form.Label>\n                            <Form.Control placeholder=\"請輸入上課地點\" className=\"input\" name=\"venue\" type=\"text\" onChange={handleChange} value={course.venue}></Form.Control>\n                        </Form.Group>\n                    </div>\n\n                    <div className=\"inputRow\">\n                        <Form.Group className=\"inputItem\">\n                            <Form.Label className=\"inputLabel\">課程名額:</Form.Label>\n                            <Form.Control placeholder=\"請輸入課程名額\" className=\"input\" name=\"quota\" type=\"number\" onChange={handleChange} value={course.quota}></Form.Control>\n                        </Form.Group>\n                        <div className=\"inputItem\"></div>\n                        <Form.Group className=\"inputItem\">\n                            <Form.Label className=\"inputLabel\">課程導師:</Form.Label>\n                            <Form.Control placeholder=\"請輸入課程導師\" className=\"input\" name=\"tutor\" type=\"text\" onChange={handleChange} value={course.tutor}></Form.Control>\n                        </Form.Group>\n                    </div>\n                    <div className=\"inputRow\">\n                        <Form.Group className=\"inputItem\">\n                            <Form.Label className=\"inputLabel courseDescriptionText\">課程簡介:</Form.Label>\n                            <FormControl as=\"textarea\" aria-label=\"With textarea\" rows=\"4\" name=\"description\" onChange={handleChange} value={course.description}/>\n                        </Form.Group>\n                    </div>\n                <Button variant=\"primary\" size=\"lg\" className=\"createBtn\" type=\"submit\">修改課程</Button>\n            \n            </div>\n\n            { isModified && <Redirect to=\"/admin\"/> }\n\n        </Form>\n        </React.Fragment>\n    );\n\n}","import React, { useState } from 'react';\nimport qs from 'qs';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport EnrollDetail from './EnrollDetail';\nimport ModifyCourse from './ModifyCourse';\n\nexport default function CourseDetail(props){\n\n    var date;\n\n    if(props.selectedCourse){\n      date = new Date(props.selectedCourse.date);\n    }\n\n    const [courseID, setCourseID] = useState();\n    const [getCourseDetail, setGetCourseDetail] = useState(false);\n    const [courseDetail, setCourseDetail] = useState({});\n    const [modify, setModify] = useState(false);\n    const [isLoad, setIsLoad] = useState(false);\n\n    function handleClick(){\n\n      if(getCourseDetail === \"未有報名記錄\"){\n        alert(\"未有報名記錄\");\n      }else{\n        setGetCourseDetail(true);\n      }\n\n    }\n\n    function handleDelete(){\n\n      const courseID = props.selectedCourse._id;\n\n      const url = '/deleteCourse';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify({courseID: courseID})\n        };\n\n        fetch(url, options)\n        .then(res => {\n          if(res.status === 200){\n            alert(\"成功刪除課程\");\n            window.location.reload(true);\n          }else{\n            alert(\"發生錯誤，請稍後再試\");\n          }\n        })\n\n    }\n\n    function handleModify(){\n      setModify(true);\n    }\n\n    if(getCourseDetail){\n      console.log(\"Detail: \" + props.selectedCourse._id);\n      return <EnrollDetail course={props.selectedCourse}/>\n    }\n\n    if(modify){\n      return <ModifyCourse course={props.selectedCourse}/>\n    }\n    \n    \n    return(\n        <div>\n            <Card className=\"detailCard\">\n              <Card.Header className=\"cardDetailWrapper\">\n                    <Button className=\"backBtn\" onClick={handleModify}>修改課程資料</Button>\n                    <h1 className=\"courseTitle\">{props.selectedCourse && props.selectedCourse.courseName}</h1>\n                    <Button variant=\"danger\" className=\"deleteBtn\" onClick={handleDelete}>刪除課程</Button>\n              </Card.Header>\n              <Card.Body>\n                <Card.Title className=\"courseDescription\">{props.selectedCourse && props.selectedCourse.description}</Card.Title>\n                <Card.Text className=\"courseInfo\">上課日期: {date && date.toLocaleDateString()} {props.selectedCourse && props.selectedCourse.time}</Card.Text>\n                <Card.Text className=\"courseInfo\">上課地點: {props.selectedCourse && props.selectedCourse.venue}</Card.Text>\n                <Card.Text className=\"courseInfo\">課程導師: {props.selectedCourse && props.selectedCourse.tutor}</Card.Text>\n                <Card.Text className=\"courseInfo\">尚餘名額: {props.selectedCourse && props.selectedCourse.quota}</Card.Text>\n                <Button variant=\"primary\" className=\"adminEnrollRecordBtn\" onClick={handleClick}>查看報名情況</Button>\n              </Card.Body>\n            </Card>\n        </div>\n    );\n\n}","import React, {useState, useEffect} from 'react';\nimport CreateCourse from './CreateCourse';\nimport AuthorizedList from './AuthorizedList';\nimport CourseDetail from './CourseDetail';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport qs from 'qs';\n\n\n\nexport default function Admin(props){\n\n    const initialCourse = [{\n        _id: \"\",\n        couseName: \"\",\n        date: \"\",\n        time: \"\",\n        venue: \"\",\n        quota: 0,\n        tutor: \"\",\n        description: \"\"\n    }];\n\n    const isAuthorized = props.authorized || false;\n    const isCreate = props.create || false;\n\n    const [courses, setCourses] = useState(initialCourse);\n    const [selectedID, setSelectedID] = useState();\n    const [period, setPeriod] = useState(\"今天\");\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [noCourse, setNoCourse] = useState(false);\n    const [authorized, setAuthorized] = useState(isAuthorized);\n    const [create, setCreate] = useState(isCreate);\n\n    useEffect(() => {\n\n        if(!isLoaded){\n            const url = '/course-by-date';\n            const options = {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: qs.stringify({\n                    period: period\n                })\n            };\n\n            fetch(url, options)\n            .then(res => res.json())\n            .then(res => {\n                if(res.length === 0){\n                    setNoCourse(true);\n                    setCourses(initialCourse);\n                }else{\n                    if(res !== courses){\n                        setCourses(res);\n                    }\n                    setNoCourse(false);\n                }\n            })\n            setIsLoaded(true);\n        }\n    })\n\n    function handleClick(selectedKey){\n        switch(selectedKey){\n            case \"0\":\n                setAuthorized(false);\n                setCreate(true);\n                setSelectedID();\n                break;\n            case \"1\":\n                setPeriod(\"過往\");\n                setAuthorized(false);\n                setCreate(false);\n                setIsLoaded(false);\n                setSelectedID();\n                break;\n            case \"2\":\n                setPeriod(\"今天\");\n                setAuthorized(false);\n                setCreate(false);\n                setIsLoaded(false);\n                setSelectedID();\n                break;\n            case \"3\":\n                setPeriod(\"未來\");\n                setAuthorized(false);\n                setCreate(false);\n                setIsLoaded(false);\n                setSelectedID();\n                break;\n            case \"4\":\n                setCreate(false);\n                setAuthorized(true);\n                setSelectedID();\n                break;\n            default:\n                break;\n        }\n        \n    }\n\n    function handleSidebarClick(selectedKey){\n        setSelectedID(selectedKey);\n    }\n\n\n    return (\n        <div>\n            <Navbar bg=\"primary\" variant=\"dark\">\n                <Navbar.Brand href=\"/admin\">課程報名系統</Navbar.Brand>\n                <Nav className=\"mr-auto\" defaultActiveKey=\"\" onSelect={(selectedKey) => handleClick(selectedKey)} >\n                  <Nav.Link eventKey=\"0\">新增課程</Nav.Link>\n                  <Nav.Link eventKey=\"1\">以往課程</Nav.Link>\n                  <Nav.Link eventKey=\"2\">今天課程</Nav.Link>\n                  <Nav.Link eventKey=\"3\">未來課程</Nav.Link>\n                  <Nav.Link eventKey=\"4\">授權名單</Nav.Link>\n                </Nav>\n                <Nav>\n                    <Nav.Link href=\"/\">返回報名表格</Nav.Link>\n                </Nav>\n        </Navbar>\n            {(!authorized && !create) && <div className=\"sidebar\">\n\n                <h4 className=\"sidebarTitle\">{period}課程</h4>\n                { noCourse && <p className=\"noCourse\">暫沒有課程</p> }\n\n                <Nav defaultActiveKey=\"\" className=\"flex-column\" onSelect={(selectedKey) => setSelectedID(selectedKey)}>\n\n                    {!noCourse&& courses.map(course => {\n                        const date = new Date(course.date);\n                        return <Nav.Link eventKey={course._id} className=\"courseLink\">{course.courseName} {date.toLocaleDateString()}</Nav.Link>\n                    })}\n\n                </Nav>\n            \n            </div>}\n            \n            {!selectedID && create && <CreateCourse />}\n            {!selectedID && authorized && <AuthorizedList />}\n            {console.log(\"admin: \" + selectedID)}\n            { selectedID && <CourseDetail selectedCourse={courses.find(course => course._id === selectedID)}/> }\n                \n        \n    </div>\n    );\n}","import React, {useState, useEffect} from 'react';\nimport RegisterRecordDetail from './RegisterRecordDetail';\nimport Card from 'react-bootstrap/Card';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport qs from 'qs';\n\nexport default function RegisterWaitinglistRecord(props){\n\n    const [loaded, setLoaded] = useState(false);\n    const [details, setDetails] = useState();\n    const [courseID, setCourseID] = useState(\"\");\n    const [noResult, setNoResult] = useState();\n    const [isBack, setIsBack] = useState(false);\n\n    useEffect(() => {\n\n        if(!loaded || courseID !== props.selectedCourse._id){\n\n            setCourseID(props.selectedCourse._id);\n\n            const url = '/register-record-waitinglist';\n            const options = {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: qs.stringify({\n                    courseID: props.selectedCourse._id,\n                    username: localStorage.getItem(\"username\")\n                })\n            };\n\n            fetch(url, options)\n            .then(res => {\n                if(res.status !== 403){\n                    return res.json();\n                }else{\n                    return \"error\";\n                }\n            })\n            .then(res => {\n                \n                if(res !== \"error\"){\n                    setNoResult(false);\n                    setDetails(res);\n                }else{\n                    setNoResult(true);\n                    setDetails();\n                }\n            })\n\n            setLoaded(true);\n        }\n    })\n\n    function handleClick(){\n        setIsBack(true);\n    }\n\n    if(isBack){\n        return <RegisterRecordDetail selectedCourse={props.selectedCourse}/>\n    }\n\n    return (\n\n        <React.Fragment>\n\n                <Card className=\"detailCard\">\n                    <Card.Header className=\"cardDetailWrapper\">\n                        <Button className=\"backBtn\" onClick={handleClick}>返回查看報名紀錄</Button>\n                        <h1 className=\"courseTitle\">{props.selectedCourse && props.selectedCourse.courseName}</h1>\n                    </Card.Header>\n                    <Card.Body>\n                    {noResult && <p>你並沒有此課程的後補報名紀錄</p>}\n                    <Table striped bordered hover>\n                        <thead>\n                          <tr>\n                            <th>職員編號</th>\n                            <th>姓名</th>\n                            <th>電郵</th>\n                            <th>單位</th>\n                            <th>職位</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                            {details && details.map(detail => {\n                                return <tr>\n                                    <td>{detail.staffid}</td>\n                                    <td>{detail.username}</td>\n                                    <td>{detail.email}</td>\n                                    <td>{detail.dept}</td>\n                                    <td>{detail.post}</td>\n                                </tr>\n                            })}\n                        </tbody>\n                    </Table>\n              </Card.Body>\n            </Card>\n                        \n        </React.Fragment>\n\n    );\n\n\n}","import React, { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card'\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport RegisterWaitinglistRecord from './RegisterWaitinglistRecord';\nimport qs from 'qs';\n\nexport default function RegisterRecordDetail(props){\n\n    const [courseID, setCourseID] = useState(\"\");\n    const [details, setDetails] = useState();\n    const [noResult, setNoResult] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [waitingList, setWaitingList] = useState(false);\n\n    useEffect(() => {\n\n        if(!loaded || courseID !== props.selectedCourse._id){\n\n            setCourseID(props.selectedCourse._id);\n\n            const url = '/register-record';\n            const options = {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: qs.stringify({\n                    courseID: props.selectedCourse._id,\n                    username: localStorage.getItem(\"username\")\n                })\n            };\n\n            fetch(url, options)\n            .then(res => {\n                if(res.status !== 403){\n                    return res.json();\n                }else{\n                    return \"error\";\n                }\n            })\n            .then(res => {\n                \n                if(res !== \"error\"){\n                    setNoResult(false);\n                    setDetails(res);\n                }else{\n                    setNoResult(true);\n                    setDetails();\n                }\n            })\n\n            setLoaded(true);\n        }\n    })\n\n    function handleDelete(enrollment){\n\n        console.log(enrollment);\n\n        const url = \"/deleteEnrollment\";\n        const options = {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify({\n                courseID: courseID,\n                enrollment: enrollment\n            })\n        }\n\n        fetch(url, options)\n        .then(res => {\n            console.log(res);\n            if(res.status === 200){\n                alert(\"此紀錄已刪除\");\n                setLoaded(false);\n            }else{\n                alert(\"未能刪除此紀錄，請稍後再嘗試\");\n            }\n        })\n\n    }\n\n    function handleClick(){\n        setWaitingList(true);\n    }\n\n    if(waitingList){\n        return <RegisterWaitinglistRecord selectedCourse={props.selectedCourse}/>\n    }\n\n    return(\n\n        <React.Fragment>\n\n            <Card className=\"detailCard\">\n                <Card.Header className=\"cardDetailWrapper\">\n                    <h1 className=\"courseTitle\">{props.selectedCourse && props.selectedCourse.courseName}</h1>\n                    <Button className=\"waitinglistBtn\" onClick={handleClick}>查看後補名單</Button>\n                </Card.Header>\n                <Card.Body>\n                {noResult && <p>你並沒有此課程的報名紀錄</p>}\n                <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>職員編號</th>\n                        <th>姓名</th>\n                        <th>電郵</th>\n                        <th>單位</th>\n                        <th>職位</th>\n                        <th></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                        {details && details.map(detail => {\n                            return <tr>\n                                <td>{detail.staffid}</td>\n                                <td>{detail.username}</td>\n                                <td>{detail.email}</td>\n                                <td>{detail.dept}</td>\n                                <td>{detail.post}</td>\n                                <td><Button variant=\"danger\" onClick={() => {handleDelete(detail)}} className=\"recordDelBtn\">刪除記錄</Button></td>\n                            </tr>\n                        })}\n                    </tbody>\n                </Table>\n          </Card.Body>\n        </Card>\n            \n    </React.Fragment>\n\n    );\n\n}","import React, {useState, useEffect} from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport RegisterRecordDetail from './RegisterRecordDetail';\nimport qs from 'qs';\n\nexport default function RegisterRecord(){\n\n    const initialCourse = [{\n        _id: \"\",\n        couseName: \"\",\n        date: \"\",\n        time: \"\",\n        venue: \"\",\n        quota: 0,\n        tutor: \"\",\n        description: \"\"\n    }];\n\n    const[courses, setCourses] = useState(initialCourse);\n    const [selectedID, setSelectedID] = useState();\n    const [period, setPeriod] = useState(\"今天\");\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [noCourse, setNoCourse] = useState(false);\n\n    useEffect(() => {\n\n        if(!isLoaded){\n            const url = '/course-by-date';\n            const options = {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: qs.stringify({\n                    period: period\n                })\n            };\n\n            fetch(url, options)\n            .then(res => res.json())\n            .then(res => {\n                if(res.length === 0){\n                    setNoCourse(true);\n                    setCourses(initialCourse);\n                }else{\n                    if(res !== courses){\n                        setCourses(res);\n                    }\n                    setNoCourse(false);\n                }\n            })\n            setIsLoaded(true);\n        }\n    })\n\n    function handleClick(selectedKey){\n        switch(selectedKey){\n            case \"0\":\n                setPeriod(\"過往\");\n                setIsLoaded(false);\n                setSelectedID();\n                break;\n            case \"1\":\n                setPeriod(\"今天\");\n                setIsLoaded(false);\n                setSelectedID();\n                break;\n            case \"2\":\n                setPeriod(\"未來\");\n                setIsLoaded(false);\n                setSelectedID();\n                break;\n            default:\n                break;\n        }\n        \n    }\n\n    function handleSidebarClick(selectedKey){\n        setSelectedID(selectedKey);\n    }\n\n    return(\n        <React.Fragment>\n        <Navbar bg=\"primary\" variant=\"dark\">\n            <Navbar.Brand href=\"/\">靈實員工培訓課程報名系統</Navbar.Brand>\n            <Nav className=\"mr-auto\" defaultActiveKey=\"\" onSelect={(selectedKey) => handleClick(selectedKey)}>\n                <Nav.Link eventKey=\"0\" >過往課程</Nav.Link>\n                <Nav.Link eventKey=\"1\" >今天課程</Nav.Link>\n                <Nav.Link eventKey=\"2\" >末來課程</Nav.Link>\n            </Nav>\n        </Navbar>\n        <div className=\"sidebar\">\n\n            <h4 className=\"sidebarTitle\">{period}課程</h4>\n            { noCourse && <p className=\"noCourse\">暫沒有課程</p> }\n            <Nav defaultActiveKey=\"\" className=\"flex-column\" onSelect={(selectedKey) => handleSidebarClick(selectedKey)}>\n                {!noCourse && courses.map(course => {\n                    const date = new Date(course.date);\n                    return <Nav.Link eventKey={course._id} className=\"courseLink\">{course.courseName} {date.toLocaleDateString()}</Nav.Link>\n                })}\n            </Nav>\n\n        </div>\n        \n        {selectedID && <RegisterRecordDetail selectedCourse={courses.find(course => course._id === selectedID)} />}\n\n        </React.Fragment>\n    );\n\n}","import React, {useEffect} from \"react\";\nimport ApplicationForm from \"./ApplicationForm\";\nimport Register from \"./Register\";\nimport { ProtectedRoute } from \"./protected-route\";\nimport { AdminRoute } from \"./admin-route\";\nimport Login from \"./Login\";\nimport Admin from \"./Adminastrative/Admin\";\nimport RegisterRecord from \"./RegisterRecord\";\nimport axios from 'axios';\n\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport AuthorizedList from \"./Adminastrative/AuthorizedList\";\n\n\nexport default function App(props) {\n\n    \n\n    useEffect(() => {\n        axios.get(\"/isAuthenticated\",  \n        { headers:\n            { \n                \"Content-Type\" : \"Application/json\",\n                'Accept': 'application/json',\n                \"Authorization\": `Bearer ${localStorage.getItem('userToken')}`\n            }\n        })\n        .then(res => {\n            localStorage.setItem(\"isAuthorized\", true);\n        }).catch(function (error) {\n            localStorage.removeItem(\"isAuthorized\");\n        });\n    })\n\n    \n    return(\n    <Router>\n        <Switch>\n            <Route component={Login} exact path=\"/login\" />\n            <ProtectedRoute component={ApplicationForm} exact path=\"/\" />\n            <AdminRoute component={Admin} exact path=\"/admin\" />\n            <Route component={Register} exact path=\"/register\"/>\n            <Route component={RegisterRecord} exact path=\"/register-record\"/>\n        </Switch>\n    </Router> \n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}