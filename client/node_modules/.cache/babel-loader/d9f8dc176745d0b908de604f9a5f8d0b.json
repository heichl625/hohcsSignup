{"ast":null,"code":"var _jsxFileName = \"/Volumes/Ext_drive/Web Development/hohcssignup/Frontend/src/components/Adminastrative/Admin.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AdminRoute } from '../admin-route';\nimport Navigator from './Navigator';\nimport EnrollDetail from './EnrollDetail';\nimport CourseDetail from './CourseDetail';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Nav from 'react-bootstrap/Nav';\nimport qs from 'qs';\nexport default function Admin() {\n  const initialCourse = [{\n    _id: \"\",\n    couseName: \"\",\n    date: \"\",\n    time: \"\",\n    venue: \"\",\n    quota: 0,\n    tutor: \"\",\n    description: \"\"\n  }];\n  const [courses, setCourses] = useState(initialCourse);\n  const [selectedID, setSelectedID] = useState(\"\");\n  const [courseToParse, setCourseToParse] = useState(initialCourse[0]);\n  useEffect(() => {\n    const url = 'http://localhost:5000/course';\n    const options = {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json'\n      }\n    };\n    fetch(url, options).then(res => res.json()).then(res => {\n      if (courses === initialCourse) {\n        setCourses(res);\n      }\n    });\n    setCourseToParse(courses.find(course => course._id === selectedID));\n  });\n\n  function handleClick(event) {\n    console.log(event.target.textContent);\n    var element = document.getElementsByClassName('linkSelected')[0];\n\n    if (element) {\n      element.classList.remove('linkSelected');\n    }\n\n    event.target.classList.add('linkSelected');\n    const courseName = event.target.textContent;\n\n    for (const course of courses) {\n      if (course.courseName === courseName) {\n        localStorage.setItem(\"courseSelected\", qs.stringify(course));\n        break;\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"sidebarTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"\\u9078\\u64C7\\u8AB2\\u7A0B\"), /*#__PURE__*/React.createElement(Nav, {\n    defaultActiveKey: \"/home\",\n    className: \"flex-column\",\n    onSelect: selectedKey => setSelectedID(selectedKey),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, courses.map(course => {\n    const date = new Date(course.date);\n    return /*#__PURE__*/React.createElement(Nav.Link, {\n      eventKey: course._id,\n      className: \"courseLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 32\n      }\n    }, course.courseName, \" \", date.toLocaleDateString());\n  }))), /*#__PURE__*/React.createElement(CourseDetail, {\n    selectedCourse: courseToParse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Volumes/Ext_drive/Web Development/hohcssignup/Frontend/src/components/Adminastrative/Admin.jsx"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","AdminRoute","Navigator","EnrollDetail","CourseDetail","ListGroup","Nav","qs","Admin","initialCourse","_id","couseName","date","time","venue","quota","tutor","description","courses","setCourses","selectedID","setSelectedID","courseToParse","setCourseToParse","url","options","method","headers","fetch","then","res","json","find","course","handleClick","event","console","log","target","textContent","element","document","getElementsByClassName","classList","remove","add","courseName","localStorage","setItem","stringify","selectedKey","map","Date","toLocaleDateString"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AdminRoute } from '../admin-route';\nimport Navigator from './Navigator';\nimport EnrollDetail from './EnrollDetail';\nimport CourseDetail from './CourseDetail';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Nav from 'react-bootstrap/Nav';\nimport qs from 'qs';\n\n\n\nexport default function Admin(){\n\n    const initialCourse = [{\n        _id: \"\",\n        couseName: \"\",\n        date: \"\",\n        time: \"\",\n        venue: \"\",\n        quota: 0,\n        tutor: \"\",\n        description: \"\"\n    }];\n\n    const[courses, setCourses] = useState(initialCourse);\n    const [selectedID, setSelectedID] = useState(\"\");\n    const [courseToParse, setCourseToParse] = useState(initialCourse[0]);\n\n    useEffect(() => {\n\n        const url = 'http://localhost:5000/course';\n        const options = {\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json',\n            },\n        };\n\n        fetch(url, options)\n        .then(res => res.json())\n        .then(res => {\n            if(courses === initialCourse){\n                setCourses(res);\n            }\n        })\n\n        setCourseToParse(courses.find(course => course._id === selectedID));\n    })\n\n    \n\n    function handleClick(event){\n        console.log(event.target.textContent);\n\n        var element = document.getElementsByClassName('linkSelected')[0]\n        \n        if(element){\n            element.classList.remove('linkSelected');\n        }\n        event.target.classList.add('linkSelected');\n\n        const courseName = event.target.textContent;\n\n        for (const course of courses) {\n            if(course.courseName === courseName){\n                localStorage.setItem(\"courseSelected\", qs.stringify(course));\n                break;\n            }\n        }\n\n    }\n\n\n    return (\n        <div>\n            <Navigator />\n            <div className=\"sidebar\">\n\n                <h4 className=\"sidebarTitle\">選擇課程</h4>\n\n                <Nav defaultActiveKey=\"/home\" className=\"flex-column\" onSelect={(selectedKey) => setSelectedID(selectedKey)}>\n\n                    {courses.map(course => {\n                        const date = new Date(course.date);\n                        return <Nav.Link eventKey={course._id} className=\"courseLink\">{course.courseName} {date.toLocaleDateString()}</Nav.Link>\n                    })}\n\n                </Nav>\n            \n            </div>\n            \n            <CourseDetail selectedCourse={courseToParse}/>\n                \n        \n    </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}