{"ast":null,"code":"var _jsxFileName = \"/Volumes/Ext_drive/Web Development/hohcssignup/Frontend/src/components/RegisterRecord.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\nimport RegisterRecordDetail from './RegisterRecordDetail';\nimport qs from 'qs';\nexport default function RegisterRecord() {\n  const initialCourse = [{\n    _id: \"\",\n    couseName: \"\",\n    date: \"\",\n    time: \"\",\n    venue: \"\",\n    quota: 0,\n    tutor: \"\",\n    description: \"\"\n  }];\n  const [courses, setCourses] = useState(initialCourse);\n  const [selectedID, setSelectedID] = useState();\n  const [period, setPeriod] = useState(\"今天\");\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [noCourse, setNoCourse] = useState(false);\n  useEffect(() => {\n    if (!isLoaded) {\n      console.log(\"render\");\n      const url = 'http://localhost:5000/course-by-date';\n      const options = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: qs.stringify({\n          period: period\n        })\n      };\n      fetch(url, options).then(res => res.json()).then(res => {\n        if (res.length === 0) {\n          setNoCourse(true);\n        }\n\n        if (res !== courses) {\n          setCourses(res);\n        }\n      });\n      setIsLoaded(true);\n    }\n  });\n\n  function handleClick(selectedKey) {\n    console.log(selectedKey);\n\n    switch (selectedKey) {\n      case \"0\":\n        setPeriod(\"過往\");\n        setIsLoaded(false);\n        setSelectedID();\n        break;\n\n      case \"1\":\n        setPeriod(\"今天\");\n        setIsLoaded(false);\n        setSelectedID();\n        break;\n\n      case \"2\":\n        setPeriod(\"未來\");\n        setIsLoaded(false);\n        setSelectedID();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function handleSidebarClick(selectedKey) {\n    setSelectedID(selectedKey);\n    setReload(true);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    bg: \"primary\",\n    variant: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"\\u9748\\u5BE6\\u54E1\\u5DE5\\u57F9\\u8A13\\u8AB2\\u7A0B\\u5831\\u540D\\u7CFB\\u7D71\"), /*#__PURE__*/React.createElement(Nav, {\n    className: \"mr-auto\",\n    defaultActiveKey: \"\",\n    onSelect: selectedKey => handleClick(selectedKey),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"\\u904E\\u5F80\\u8AB2\\u7A0B\"), /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"\\u4ECA\\u5929\\u8AB2\\u7A0B\"), /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"\\u672B\\u4F86\\u8AB2\\u7A0B\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"sidebarTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, period, \"\\u8AB2\\u7A0B\"), isNoCourse && /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, \"\\u66AB\\u672A\\u6709\\u8AB2\\u7A0B\"), /*#__PURE__*/React.createElement(Nav, {\n    defaultActiveKey: \"\",\n    className: \"flex-column\",\n    onSelect: selectedKey => handleSidebarClick(selectedKey),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, courses.map(course => {\n    const date = new Date(course.date);\n    return /*#__PURE__*/React.createElement(Nav.Link, {\n      eventKey: course._id,\n      className: \"courseLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 28\n      }\n    }, course.courseName, \" \", date.toLocaleDateString());\n  }))), selectedID && /*#__PURE__*/React.createElement(RegisterRecordDetail, {\n    selectedCourse: courses.find(course => course._id === selectedID),\n    reload: reload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 24\n    }\n  }));\n}","map":{"version":3,"sources":["/Volumes/Ext_drive/Web Development/hohcssignup/Frontend/src/components/RegisterRecord.jsx"],"names":["React","useState","useEffect","Redirect","Header","Nav","Navbar","Button","RegisterRecordDetail","qs","RegisterRecord","initialCourse","_id","couseName","date","time","venue","quota","tutor","description","courses","setCourses","selectedID","setSelectedID","period","setPeriod","isLoaded","setIsLoaded","noCourse","setNoCourse","console","log","url","options","method","headers","body","stringify","fetch","then","res","json","length","handleClick","selectedKey","handleSidebarClick","setReload","isNoCourse","map","course","Date","courseName","toLocaleDateString","find","reload"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,eAAe,SAASC,cAAT,GAAyB;AAEpC,QAAMC,aAAa,GAAG,CAAC;AACnBC,IAAAA,GAAG,EAAE,EADc;AAEnBC,IAAAA,SAAS,EAAE,EAFQ;AAGnBC,IAAAA,IAAI,EAAE,EAHa;AAInBC,IAAAA,IAAI,EAAE,EAJa;AAKnBC,IAAAA,KAAK,EAAE,EALY;AAMnBC,IAAAA,KAAK,EAAE,CANY;AAOnBC,IAAAA,KAAK,EAAE,EAPY;AAQnBC,IAAAA,WAAW,EAAE;AARM,GAAD,CAAtB;AAWA,QAAK,CAACC,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAACU,aAAD,CAArC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,EAA5C;AACA,QAAM,CAACuB,MAAD,EAASC,SAAT,IAAsBxB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACyB,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC2B,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAG,CAACwB,QAAJ,EAAa;AACTI,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,YAAMC,GAAG,GAAG,sCAAZ;AACA,YAAMC,OAAO,GAAG;AACZC,QAAAA,MAAM,EAAE,MADI;AAEZC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT,SAFG;AAMZC,QAAAA,IAAI,EAAE3B,EAAE,CAAC4B,SAAH,CAAa;AACfb,UAAAA,MAAM,EAAEA;AADO,SAAb;AANM,OAAhB;AAWAc,MAAAA,KAAK,CAACN,GAAD,EAAMC,OAAN,CAAL,CACCM,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMC,GAAG,IAAI;AACT,YAAGA,GAAG,CAACE,MAAJ,KAAe,CAAlB,EAAoB;AAChBb,UAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AACD,YAAGW,GAAG,KAAKpB,OAAX,EAAmB;AACfC,UAAAA,UAAU,CAACmB,GAAD,CAAV;AACH;AACJ,OATD;AAUAb,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ,GA5BQ,CAAT;;AA8BA,WAASgB,WAAT,CAAqBC,WAArB,EAAiC;AAC7Bd,IAAAA,OAAO,CAACC,GAAR,CAAYa,WAAZ;;AACA,YAAOA,WAAP;AACI,WAAK,GAAL;AACInB,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,QAAAA,aAAa;AACb;;AACJ,WAAK,GAAL;AACIE,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,QAAAA,aAAa;AACb;;AACJ,WAAK,GAAL;AACIE,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,QAAAA,aAAa;AACb;;AACJ;AACI;AAjBR;AAoBH;;AAED,WAASsB,kBAAT,CAA4BD,WAA5B,EAAwC;AACpCrB,IAAAA,aAAa,CAACqB,WAAD,CAAb;AACAE,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AAED,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,SAAX;AAAqB,IAAA,OAAO,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,IAAI,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFADJ,eAEI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,gBAAgB,EAAC,EAA1C;AAA6C,IAAA,QAAQ,EAAGF,WAAD,IAAiBD,WAAW,CAACC,WAAD,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,QAAQ,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,QAAQ,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,eAGI,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,QAAQ,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHJ,CAFJ,CADA,eASA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BpB,MAA9B,iBAFJ,EAGMuB,UAAU,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAHpB,eAII,oBAAC,GAAD;AAAK,IAAA,gBAAgB,EAAC,EAAtB;AAAyB,IAAA,SAAS,EAAC,aAAnC;AAAiD,IAAA,QAAQ,EAAGH,WAAD,IAAiBC,kBAAkB,CAACD,WAAD,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKxB,OAAO,CAAC4B,GAAR,CAAYC,MAAM,IAAI;AACnB,UAAMnC,IAAI,GAAG,IAAIoC,IAAJ,CAASD,MAAM,CAACnC,IAAhB,CAAb;AACA,wBAAO,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,QAAQ,EAAEmC,MAAM,CAACrC,GAA3B;AAAgC,MAAA,SAAS,EAAC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwDqC,MAAM,CAACE,UAA/D,OAA4ErC,IAAI,CAACsC,kBAAL,EAA5E,CAAP;AACH,GAHA,CADL,CAJJ,CATA,EAsBC9B,UAAU,iBAAI,oBAAC,oBAAD;AAAsB,IAAA,cAAc,EAAEF,OAAO,CAACiC,IAAR,CAAaJ,MAAM,IAAIA,MAAM,CAACrC,GAAP,KAAeU,UAAtC,CAAtC;AAAyF,IAAA,MAAM,EAAEgC,MAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBf,CADJ;AA4BH","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Header from './Header';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\nimport RegisterRecordDetail from './RegisterRecordDetail';\nimport qs from 'qs';\n\nexport default function RegisterRecord(){\n\n    const initialCourse = [{\n        _id: \"\",\n        couseName: \"\",\n        date: \"\",\n        time: \"\",\n        venue: \"\",\n        quota: 0,\n        tutor: \"\",\n        description: \"\"\n    }];\n\n    const[courses, setCourses] = useState(initialCourse);\n    const [selectedID, setSelectedID] = useState();\n    const [period, setPeriod] = useState(\"今天\");\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [noCourse, setNoCourse] = useState(false);\n\n    useEffect(() => {\n\n        if(!isLoaded){\n            console.log(\"render\");\n            const url = 'http://localhost:5000/course-by-date';\n            const options = {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: qs.stringify({\n                    period: period\n                })\n            };\n\n            fetch(url, options)\n            .then(res => res.json())\n            .then(res => {\n                if(res.length === 0){\n                    setNoCourse(true);\n                }\n                if(res !== courses){\n                    setCourses(res);\n                }\n            })\n            setIsLoaded(true);\n        }\n    })\n\n    function handleClick(selectedKey){\n        console.log(selectedKey);\n        switch(selectedKey){\n            case \"0\":\n                setPeriod(\"過往\");\n                setIsLoaded(false);\n                setSelectedID();\n                break;\n            case \"1\":\n                setPeriod(\"今天\");\n                setIsLoaded(false);\n                setSelectedID();\n                break;\n            case \"2\":\n                setPeriod(\"未來\");\n                setIsLoaded(false);\n                setSelectedID();\n                break;\n            default:\n                break;\n        }\n        \n    }\n\n    function handleSidebarClick(selectedKey){\n        setSelectedID(selectedKey);\n        setReload(true);\n    }\n\n    return(\n        <React.Fragment>\n        <Navbar bg=\"primary\" variant=\"dark\">\n            <Navbar.Brand href=\"/\">靈實員工培訓課程報名系統</Navbar.Brand>\n            <Nav className=\"mr-auto\" defaultActiveKey=\"\" onSelect={(selectedKey) => handleClick(selectedKey)}>\n                <Nav.Link eventKey=\"0\" >過往課程</Nav.Link>\n                <Nav.Link eventKey=\"1\" >今天課程</Nav.Link>\n                <Nav.Link eventKey=\"2\" >末來課程</Nav.Link>\n            </Nav>\n        </Navbar>\n        <div className=\"sidebar\">\n\n            <h4 className=\"sidebarTitle\">{period}課程</h4>\n            { isNoCourse && <h5>暫未有課程</h5> }\n            <Nav defaultActiveKey=\"\" className=\"flex-column\" onSelect={(selectedKey) => handleSidebarClick(selectedKey)}>\n                {courses.map(course => {\n                    const date = new Date(course.date);\n                    return <Nav.Link eventKey={course._id} className=\"courseLink\">{course.courseName} {date.toLocaleDateString()}</Nav.Link>\n                })}\n            </Nav>\n\n        </div>\n        \n        {selectedID && <RegisterRecordDetail selectedCourse={courses.find(course => course._id === selectedID)} reload={reload}/>}\n\n        </React.Fragment>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}