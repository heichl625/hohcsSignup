{"ast":null,"code":"import _slicedToArray from\"/Users/cheukheilo/Desktop/hohcsSignup/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import EnrollDetail from'./EnrollDetail';import Card from'react-bootstrap/Card';import Table from'react-bootstrap/Table';import Button from'react-bootstrap/Button';import qs from'qs';export default function WaitingList(props){var courseID=props.courseID;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isBack=_useState2[0],setIsBack=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),records=_useState4[0],setRecords=_useState4[1];useEffect(function(){var url='/waitinglistByCourseID';var options={method:'POST',headers:{'Accept':'application/json','Content-Type':'application/x-www-form-urlencoded'},body:qs.stringify({courseID:courseID})};fetch(url,options).then(function(res){return res.json();}).then(function(res){if(records.length===0){setRecords(res.records);}});});function backBtnClicked(){setIsBack(true);}if(isBack){return/*#__PURE__*/React.createElement(EnrollDetail,{courseDetail:props.courseDetail,course:props.course});}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card,{className:\"detailCard\"},/*#__PURE__*/React.createElement(Card.Header,{className:\"enrollHeaderWrapper\"},/*#__PURE__*/React.createElement(Button,{className:\"backBtn\",onClick:backBtnClicked},\"\\u8FD4\\u56DE\\u67E5\\u770B\\u5831\\u540D\\u540D\\u55AE\"),/*#__PURE__*/React.createElement(\"h1\",{className:\"enrollDetailTitle\"},props.courseDetail.courseName,\" (\\u5F8C\\u88DC\\u540D\\u55AE)\")),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Table,{striped:true,bordered:true,hover:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"\\u8077\\u54E1\\u7DE8\\u865F\"),/*#__PURE__*/React.createElement(\"th\",null,\"\\u59D3\\u540D\"),/*#__PURE__*/React.createElement(\"th\",null,\"\\u96FB\\u90F5\"),/*#__PURE__*/React.createElement(\"th\",null,\"\\u55AE\\u4F4D\"),/*#__PURE__*/React.createElement(\"th\",null,\"\\u8077\\u4F4D\"))),/*#__PURE__*/React.createElement(\"tbody\",null,records&&records.map(function(record){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,record.staffid),/*#__PURE__*/React.createElement(\"td\",null,record.username),/*#__PURE__*/React.createElement(\"td\",null,record.email),/*#__PURE__*/React.createElement(\"td\",null,record.dept),/*#__PURE__*/React.createElement(\"td\",null,record.post));}))),/*#__PURE__*/React.createElement(\"p\",null,\"\\u7E3D\\u5F8C\\u88DC\\u4EBA\\u6578\\uFF1A \",records&&records.length))));}","map":{"version":3,"sources":["/Users/cheukheilo/Desktop/hohcsSignup/client/src/components/Adminastrative/WaitingList.jsx"],"names":["React","useState","useEffect","EnrollDetail","Card","Table","Button","qs","WaitingList","props","courseID","isBack","setIsBack","records","setRecords","url","options","method","headers","body","stringify","fetch","then","res","json","length","backBtnClicked","courseDetail","course","courseName","map","record","staffid","username","email","dept","post"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,EAAP,KAAe,IAAf,CAEA,cAAe,SAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA2B,CAEtC,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACC,QAAvB,CAFsC,cAGVT,QAAQ,CAAC,KAAD,CAHE,wCAG/BU,MAH+B,eAGvBC,SAHuB,8BAIRX,QAAQ,CAAC,EAAD,CAJA,yCAI/BY,OAJ+B,eAItBC,UAJsB,eAMtCZ,SAAS,CAAC,UAAM,CAEZ,GAAMa,CAAAA,GAAG,CAAG,wBAAZ,CACA,GAAMC,CAAAA,OAAO,CAAG,CACZC,MAAM,CAAE,MADI,CAEZC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,mCAFT,CAFG,CAMZC,IAAI,CAAEZ,EAAE,CAACa,SAAH,CAAa,CACfV,QAAQ,CAAEA,QADK,CAAb,CANM,CAAhB,CAWAW,KAAK,CAACN,GAAD,CAAMC,OAAN,CAAL,CACCM,IADD,CACM,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADT,EAECF,IAFD,CAEM,SAAAC,GAAG,CAAI,CACT,GAAGV,OAAO,CAACY,MAAR,GAAmB,CAAtB,CAAwB,CACpBX,UAAU,CAACS,GAAG,CAACV,OAAL,CAAV,CACH,CACJ,CAND,EAOH,CArBQ,CAAT,CAuBA,QAASa,CAAAA,cAAT,EAAyB,CACrBd,SAAS,CAAC,IAAD,CAAT,CACH,CAED,GAAGD,MAAH,CAAU,CACN,mBAAO,oBAAC,YAAD,EAAc,YAAY,CAAEF,KAAK,CAACkB,YAAlC,CAAgD,MAAM,CAAElB,KAAK,CAACmB,MAA9D,EAAP,CACH,CAED,mBAEI,oBAAC,KAAD,CAAO,QAAP,mBAEA,oBAAC,IAAD,EAAM,SAAS,CAAC,YAAhB,eACI,oBAAC,IAAD,CAAM,MAAN,EAAa,SAAS,CAAC,qBAAvB,eACI,oBAAC,MAAD,EAAQ,SAAS,CAAC,SAAlB,CAA4B,OAAO,CAAEF,cAArC,qDADJ,cAEI,0BAAI,SAAS,CAAC,mBAAd,EAAmCjB,KAAK,CAACkB,YAAN,CAAmBE,UAAtD,+BAFJ,CADJ,cAKI,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,KAAD,EAAO,OAAO,KAAd,CAAe,QAAQ,KAAvB,CAAwB,KAAK,KAA7B,eACI,8CACE,2CACE,yDADF,cAEE,6CAFF,cAGE,6CAHF,cAIE,6CAJF,cAKE,6CALF,CADF,CADJ,cAUI,iCAEMhB,OAAO,EAAIA,OAAO,CAACiB,GAAR,CAAY,SAAAC,MAAM,CAAI,CAC/B,mBACI,2CACI,8BAAKA,MAAM,CAACC,OAAZ,CADJ,cAEI,8BAAKD,MAAM,CAACE,QAAZ,CAFJ,cAGI,8BAAKF,MAAM,CAACG,KAAZ,CAHJ,cAII,8BAAKH,MAAM,CAACI,IAAZ,CAJJ,cAKI,8BAAKJ,MAAM,CAACK,IAAZ,CALJ,CADJ,CASH,CAVY,CAFjB,CAVJ,CADJ,cA2BI,qEAAYvB,OAAO,EAAIA,OAAO,CAACY,MAA/B,CA3BJ,CALJ,CAFA,CAFJ,CA2CH","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport EnrollDetail from './EnrollDetail';\nimport Card from 'react-bootstrap/Card';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport qs from 'qs';\n\nexport default function WaitingList(props){\n\n    const courseID = props.courseID;\n    const [isBack, setIsBack] = useState(false);\n    const [records, setRecords] = useState([]);\n\n    useEffect(() => {\n\n        const url = '/waitinglistByCourseID';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify({\n                courseID: courseID\n            })\n        };\n\n        fetch(url, options)\n        .then(res => res.json())\n        .then(res => {\n            if(records.length === 0){\n                setRecords(res.records);\n            }\n        })\n    })\n\n    function backBtnClicked(){\n        setIsBack(true);\n    }\n\n    if(isBack){\n        return <EnrollDetail courseDetail={props.courseDetail} course={props.course}/>\n    }\n\n    return (\n\n        <React.Fragment>\n\n        <Card className=\"detailCard\">\n            <Card.Header className=\"enrollHeaderWrapper\">\n                <Button className=\"backBtn\" onClick={backBtnClicked}>返回查看報名名單</Button>\n                <h1 className=\"enrollDetailTitle\">{props.courseDetail.courseName} (後補名單)</h1>\n            </Card.Header>\n            <Card.Body>\n                <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>職員編號</th>\n                        <th>姓名</th>\n                        <th>電郵</th>\n                        <th>單位</th>\n                        <th>職位</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n\n                         {records && records.map(record => {\n                            return (\n                                <tr>\n                                    <td>{record.staffid}</td>\n                                    <td>{record.username}</td>\n                                    <td>{record.email}</td>\n                                    <td>{record.dept}</td>\n                                    <td>{record.post}</td>\n                                </tr>\n                            )\n                        })}\n                      \n                    </tbody>\n                </Table>\n                <p>總後補人數： { records && records.length }</p>\n          </Card.Body>\n        </Card>\n        </React.Fragment>\n\n    ); \n\n}"]},"metadata":{},"sourceType":"module"}