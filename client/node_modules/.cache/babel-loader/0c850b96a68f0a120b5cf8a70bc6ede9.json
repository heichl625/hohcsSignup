{"ast":null,"code":"var _jsxFileName = \"/Volumes/Ext_drive/Web Development/hohcssignup/Frontend/src/components/App.jsx\";\nimport React, { useState } from \"react\";\nimport ApplicationForm from \"./ApplicationForm\";\nimport Register from \"./Register\";\nimport Auth from \"./Auth\";\nimport { ProtectedRoute } from \"./protected-route\";\nimport Login from \"./Login\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nexport default function App() {\n  // const [isLogged, setIsLogged] = useState(false);\n  axios.get(\"http://localhost:5000/isLogged\", {\n    withCredential: true\n  }).then(res => {\n    if (res) {\n      console.log(res);\n      Auth.login(() => {\n        console.log(\"Logged in\");\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    component: Login,\n    exact: true,\n    path: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    component: ApplicationForm,\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    component: Register,\n    exact: true,\n    path: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/Volumes/Ext_drive/Web Development/hohcssignup/Frontend/src/components/App.jsx"],"names":["React","useState","ApplicationForm","Register","Auth","ProtectedRoute","Login","axios","BrowserRouter","Router","Route","Switch","Link","App","get","withCredential","then","res","console","log","login"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,IAAjD,QAA6D,kBAA7D;AAGA,eAAe,SAASC,GAAT,GAAe;AAE1B;AAGAN,EAAAA,KAAK,CAACO,GAAN,CAAU,gCAAV,EAA4C;AAACC,IAAAA,cAAc,EAAE;AAAjB,GAA5C,EACKC,IADL,CACUC,GAAG,IAAI;AACT,QAAGA,GAAH,EAAO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAb,MAAAA,IAAI,CAACgB,KAAL,CAAW,MAAI;AACXF,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,OAFD;AAGH;AACJ,GARL;AAaA,sBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEb,KAAlB;AAAyB,IAAA,KAAK,MAA9B;AAA+B,IAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEJ,eAA3B;AAA4C,IAAA,KAAK,MAAjD;AAAkD,IAAA,IAAI,EAAC,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEC,QAAlB;AAA4B,IAAA,KAAK,MAAjC;AAAkC,IAAA,IAAI,EAAC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CADA;AASH","sourcesContent":["import React, {useState} from \"react\";\nimport ApplicationForm from \"./ApplicationForm\";\nimport Register from \"./Register\";\nimport Auth from \"./Auth\";\nimport { ProtectedRoute } from \"./protected-route\";\nimport Login from \"./Login\";\nimport axios from \"axios\";\n\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\n\nexport default function App() {\n    \n    // const [isLogged, setIsLogged] = useState(false);\n\n    \n    axios.get(\"http://localhost:5000/isLogged\", {withCredential: true})\n        .then(res => {\n            if(res){\n                console.log(res);\n                Auth.login(()=>{\n                    console.log(\"Logged in\");\n                });\n            }\n        });\n    \n\n    \n\n    return(\n    <Router>\n        <Switch>\n            <Route component={Login} exact path=\"/login\" />\n            <ProtectedRoute component={ApplicationForm} exact path=\"/\" />\n            <Route component={Register} exact path=\"/register\"/>\n        </Switch>\n    </Router>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}