{"ast":null,"code":"var _jsxFileName = \"/Volumes/Ext_drive/Web Development/hohcssignup/Frontend/src/components/protected-route.jsx\";\nimport React, { useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"./Auth\";\nimport axios from \"axios\";\nexport const ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const [isAuth, setIsAuth] = useState(false);\n  axios.get(\"http://localhost:5000/isLogged\", {\n    withCredential: true\n  }).then(res => {\n    if (res.data) {\n      console.log(res.data);\n      setIsAuth(true);\n    } else {\n      setIsAuth(false);\n    }\n  });\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (isAuth) {\n        return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 28\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 28\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Volumes/Ext_drive/Web Development/hohcssignup/Frontend/src/components/protected-route.jsx"],"names":["React","useState","Route","Redirect","auth","axios","ProtectedRoute","component","Component","rest","isAuth","setIsAuth","get","withCredential","then","res","data","console","log","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AAE/D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AAEAI,EAAAA,KAAK,CAACO,GAAN,CAAU,gCAAV,EAA4C;AAACC,IAAAA,cAAc,EAAE;AAAjB,GAA5C,EACKC,IADL,CACUC,GAAG,IAAI;AACb,QAAGA,GAAG,CAACC,IAAP,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACAL,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KAHD,MAGK;AACDA,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH;AACJ,GARD;AAWA,sBACI,oBAAC,KAAD,oBAAWF,IAAX;AAAiB,IAAA,MAAM,EAClBU,KAAD,IAAW;AACP,UAAGT,MAAH,EAAU;AACN,4BAAO,oBAAC,SAAD,oBAAeS,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACH,OAFD,MAEK;AACD,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AACJ,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAaH,CA5BM","sourcesContent":["import React, { useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"./Auth\";\nimport axios from \"axios\";\n\nexport const ProtectedRoute = ({component: Component, ...rest}) => {\n\n    const [isAuth, setIsAuth] = useState(false);\n\n    axios.get(\"http://localhost:5000/isLogged\", {withCredential: true})\n        .then(res => {\n        if(res.data){\n            console.log(res.data);\n            setIsAuth(true);\n        }else{\n            setIsAuth(false);\n        }\n    });\n\n\n    return (\n        <Route {...rest} render={\n            (props) => {\n                if(isAuth){\n                    return <Component {...props}/>;\n                }else{\n                    return <Redirect to=\"/login\" />;\n                }\n            }\n        }>\n\n        </Route>\n    );\n}"]},"metadata":{},"sourceType":"module"}