{"ast":null,"code":"var _jsxFileName = \"/Volumes/Ext_drive/Web Development/hohcssignup/Frontend/src/components/ApplicationForm.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport qs from 'qs';\n\nfunction ApplicationForm() {\n  const [courseList, setCourseList] = useState([{}]);\n  const [newValue, setNewValue] = useState({\n    username: \"\",\n    email: \"\",\n    staffid: \"\",\n    post: \"\",\n    dept: \"\",\n    course: \"\"\n  });\n  const [isDataObtained, setIsDataObtained] = useState(false);\n  const fields = [\"姓名\", \"電郵\", \"職員編號\", \"職位\", \"單位\", \"報讀課程\"];\n  var role = \"\";\n\n  function getFutureCourses() {\n    const futureCourseURL = 'http://localhost:5000/futureCourse';\n    const futureCourseOptions = {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json'\n      }\n    };\n    fetch(futureCourseURL, futureCourseOptions).then(res => res.json()).then(res => {\n      if (res.length > 0) {\n        console.log(\"CourseList[0]: \" + res[0].courseName);\n        setCourseList(res);\n        setNewValue(prevValue => {\n          const date = new Date(res[0].date);\n          const dateStr = date.toLocaleDateString();\n          return { ...prevValue,\n            course: res[0].courseName + \" \" + dateStr\n          };\n        });\n        console.log(\"DataObtained: \" + isDataObtained);\n        console.log(courseList);\n      }\n\n      setIsDataObtained(true);\n    });\n  }\n\n  useEffect(() => {\n    console.log(\"render\");\n\n    if (!isDataObtained) {\n      const url = 'http://localhost:5000/user';\n      const options = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: qs.stringify({\n          username: localStorage.getItem('username')\n        })\n      };\n      fetch(url, options).then(res => res.json()).then(res => {\n        role = res.role;\n\n        if (role === \"admin\") {\n          localStorage.setItem(\"isAdmin\", true);\n        }\n\n        setNewValue({\n          username: res.name,\n          email: res.username,\n          staffid: res.staffid,\n          post: res.post,\n          dept: res.dept,\n          course: \"\"\n        });\n      });\n      getFutureCourses();\n    }\n  });\n\n  function enroll(course) {\n    console.log(course);\n    const url = 'http://localhost:5000/enroll';\n    const options = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: qs.stringify({\n        courseID: course._id,\n        enrollment: newValue,\n        registeredBy: localStorage.getItem(\"username\")\n      })\n    };\n    fetch(url, options).then(res => {\n      if (res.status === 200) {\n        alert(\"成功報讀課程\");\n        clearInput(); // setNewValue(prevValue => {\n        //     return {\n        //         ...prevValue,\n        //         username: \"\",\n        //         email: \"\",\n        //         staffid: \"\",\n        //         post: \"\",\n        //         dept: \"\"\n        //     }\n        // });\n      } else {\n        alert(\"未能成功報讀課程, 請稍後再嘗試\");\n      }\n    });\n  }\n\n  function waitinglist(courseName, courseDate) {\n    const url = 'http://localhost:5000/waitinglist';\n    const options = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: qs.stringify({\n        courseName: courseName,\n        courseDate: courseDate,\n        enrollment: newValue,\n        registeredBy: localStorage.getItem(\"username\")\n      })\n    };\n    fetch(url, options).then(res => {\n      if (res.status === 200) {\n        alert(\"課程名額暫滿，你將會加進後備名單。如最後能夠成功報讀，屆時將會以公司電郵通知\");\n        clearInput(); // setNewValue(prevValue => {\n        //     return {\n        //         ...prevValue,\n        //         username: \"\",\n        //         email: \"\",\n        //         staffid: \"\",\n        //         post: \"\",\n        //         dept: \"\"\n        //     }\n        // });\n      } else {\n        alert(\"發生錯誤，請稍後再嘗試\");\n      }\n    });\n  }\n\n  function checkQuota() {\n    const courseInfo = newValue.course.split(' ');\n    console.log(\"date: \" + courseInfo[1]);\n    const courseName = newValue.course.split(' ')[0];\n    const courseDate = newValue.course.split(' ')[1];\n    const url = 'http://localhost:5000/checkQuota';\n    const options = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: qs.stringify({\n        courseName: courseName,\n        courseDate: courseDate\n      })\n    };\n    fetch(url, options).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        alert(\"發生錯誤，請稍後再嘗試\");\n        return \"error\";\n      }\n    }).then(res => {\n      console.log(res);\n\n      if (res.quota === 0) {\n        waitinglist(courseName, courseDate);\n      } else if (res !== \"error\") {\n        console.log(\"Enrolled\");\n        enroll(res);\n      }\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    checkQuota(); //enroll();\n  }\n\n  function clearInput() {\n    setNewValue(prevValue => {\n      return { ...prevValue,\n        username: \"\",\n        email: \"\",\n        staffid: \"\",\n        post: \"\",\n        dept: \"\",\n        course: \"\"\n      };\n    });\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setNewValue(prevValue => {\n      return { ...prevValue,\n        [name]: value\n      };\n    });\n    console.log(newValue);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://www.hohcs.org.hk/App/Modules/Admin/Tpl/Static/upload/image/20170418/20170418125117_21846.png\",\n    className: \"formIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    className: \"inputForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"inputLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  }, \"\\u540D\\u7A31:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: fields[0],\n    size: \"lg\",\n    onChange: handleChange,\n    value: newValue.username,\n    name: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"inputLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, \"\\u96FB\\u90F5:\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: fields[1],\n    size: \"lg\",\n    name: \"email\",\n    type: \"text\",\n    onChange: handleChange,\n    value: newValue.email,\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 21\n    }\n  }, \"@hohsc.org.hk\")))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"inputLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }, \"\\u8077\\u54E1\\u7DE8\\u865F:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: fields[2],\n    size: \"lg\",\n    onChange: handleChange,\n    value: newValue.staffid,\n    name: \"staffid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"inputLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }, \"\\u8077\\u4F4D:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: fields[3],\n    size: \"lg\",\n    onChange: handleChange,\n    value: newValue.post,\n    name: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"inputLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }, \"\\u55AE\\u4F4D:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: fields[4],\n    size: \"lg\",\n    onChange: handleChange,\n    value: newValue.dept,\n    name: \"dept\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"inputLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }\n  }, \"\\u5831\\u8B80\\u8AB2\\u7A0B:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    size: \"lg\",\n    onChange: handleChange,\n    value: newValue.course,\n    name: \"course\",\n    as: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 21\n    }\n  }, \"\\u8ACB\\u9078\\u64C7\\u8AB2\\u7A0B\"), courseList.length > 0 && courseList.map(course => {\n    var date = new Date(course.date);\n    return /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 32\n      }\n    }, course.courseName, \" \", date.toLocaleDateString());\n  }))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }, \"\\u63D0\\u4EA4\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    size: \"lg\",\n    onClick: clearInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }, \"\\u6E05\\u9664\\u6240\\u6709\\u8CC7\\u6599\"))), /*#__PURE__*/React.createElement(Footer, {\n    role: role,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default ApplicationForm;","map":{"version":3,"sources":["/Volumes/Ext_drive/Web Development/hohcssignup/Frontend/src/components/ApplicationForm.jsx"],"names":["React","useState","useEffect","Header","Footer","Button","Row","Col","Container","Form","FormGroup","InputGroup","qs","ApplicationForm","courseList","setCourseList","newValue","setNewValue","username","email","staffid","post","dept","course","isDataObtained","setIsDataObtained","fields","role","getFutureCourses","futureCourseURL","futureCourseOptions","method","headers","fetch","then","res","json","length","console","log","courseName","prevValue","date","Date","dateStr","toLocaleDateString","url","options","body","stringify","localStorage","getItem","setItem","name","enroll","courseID","_id","enrollment","registeredBy","status","alert","clearInput","waitinglist","courseDate","checkQuota","courseInfo","split","quota","handleSubmit","event","preventDefault","handleChange","value","target","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport qs from 'qs';\n\nfunction ApplicationForm(){\n\n\n    const [courseList, setCourseList] = useState([{}]);\n\n    const [newValue, setNewValue] = useState({\n        username: \"\",\n        email: \"\",\n        staffid: \"\",\n        post: \"\",\n        dept: \"\",\n        course: \"\",\n    });\n    \n    const [isDataObtained, setIsDataObtained] = useState(false);\n   \n\n    const fields = [\"姓名\", \"電郵\", \"職員編號\", \"職位\", \"單位\", \"報讀課程\"];\n    var role = \"\";\n\n    function getFutureCourses(){\n\n        const futureCourseURL = 'http://localhost:5000/futureCourse';\n        const futureCourseOptions = {\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json',\n            }\n        };\n\n        fetch(futureCourseURL, futureCourseOptions)\n        .then(res => res.json())\n        .then(res => {\n            if(res.length > 0){\n                    console.log(\"CourseList[0]: \" + res[0].courseName);\n                    setCourseList(res);\n                    setNewValue(prevValue => {\n    \n                        const date = new Date(res[0].date);\n                        const dateStr = date.toLocaleDateString();\n    \n                        return{\n                            ...prevValue,\n                            course: res[0].courseName + \" \" + dateStr\n                        }\n                    })\n                    console.log(\"DataObtained: \" + isDataObtained);\n                    console.log(courseList);\n                }\n            setIsDataObtained(true);\n        })\n\n    }\n\n    useEffect( () => {\n\n        console.log(\"render\");\n\n        if(!isDataObtained){\n            const url = 'http://localhost:5000/user';\n            const options = {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: qs.stringify({username: localStorage.getItem('username')})\n            };\n\n            fetch(url, options)\n            .then(res => res.json())\n            .then(res => {\n\n                role = res.role;\n\n                if(role === \"admin\"){\n                    localStorage.setItem(\"isAdmin\", true);\n                }\n\n                setNewValue({\n                    username: res.name,\n                    email: res.username,\n                    staffid: res.staffid,\n                    post: res.post,\n                    dept: res.dept,\n                    course: \"\",\n                })\n            })\n            getFutureCourses();\n        }\n\n    })\n\n    function enroll(course){\n\n        console.log(course);\n\n        const url = 'http://localhost:5000/enroll';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify({\n                courseID: course._id, \n                enrollment: newValue,\n                registeredBy: localStorage.getItem(\"username\")\n            })\n        };\n\n        fetch(url, options)\n        .then(res => {\n            if(res.status === 200){\n                alert(\"成功報讀課程\");\n                clearInput();\n                // setNewValue(prevValue => {\n                    \n                //     return {\n                //         ...prevValue,\n                //         username: \"\",\n                //         email: \"\",\n                //         staffid: \"\",\n                //         post: \"\",\n                //         dept: \"\"\n                //     }\n\n                // });\n            }else{\n                alert(\"未能成功報讀課程, 請稍後再嘗試\");\n            }\n        })\n\n    }\n\n    function waitinglist(courseName, courseDate){\n\n        const url = 'http://localhost:5000/waitinglist';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify({\n                courseName: courseName,\n                courseDate: courseDate,\n                enrollment: newValue,\n                registeredBy: localStorage.getItem(\"username\")\n            })\n        };\n\n        fetch(url, options)\n        .then(res => {\n            if(res.status === 200){\n                alert(\"課程名額暫滿，你將會加進後備名單。如最後能夠成功報讀，屆時將會以公司電郵通知\");\n                clearInput();\n                // setNewValue(prevValue => {\n                    \n                //     return {\n                //         ...prevValue,\n                //         username: \"\",\n                //         email: \"\",\n                //         staffid: \"\",\n                //         post: \"\",\n                //         dept: \"\"\n                //     }\n\n                // });\n            }else{\n                alert(\"發生錯誤，請稍後再嘗試\");\n            }\n        })\n\n\n\n\n\n    }\n\n    function checkQuota(){\n\n        const courseInfo = newValue.course.split(' ')\n\n        console.log(\"date: \" +  courseInfo[1]);\n\n        const courseName = newValue.course.split(' ')[0];\n        const courseDate = newValue.course.split(' ')[1];\n\n        const url = 'http://localhost:5000/checkQuota';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify({\n                courseName: courseName,\n                courseDate: courseDate\n            })\n        };\n\n        fetch(url, options)\n        .then(res => {\n            if(res.status === 200){\n                return res.json()\n            }else{\n                alert(\"發生錯誤，請稍後再嘗試\");\n                return \"error\";\n            }\n        })\n        .then(res => {\n            console.log(res);\n            if(res.quota === 0){\n                waitinglist(courseName, courseDate);\n            }else if(res !== \"error\"){\n                console.log(\"Enrolled\");\n                enroll(res);\n            }\n        })\n    }\n\n\n    function handleSubmit(event){\n\n        event.preventDefault();\n        checkQuota();\n        //enroll();\n    }\n\n    function clearInput(){\n\n        setNewValue(prevValue => {\n                    \n            return {\n                ...prevValue,\n                username: \"\",\n                email: \"\",\n                staffid: \"\",\n                post: \"\",\n                dept: \"\",\n                course: \"\"\n            }\n\n        });\n\n    }\n\n\n    function handleChange(event){\n\n        const {name, value} = event.target;\n\n        setNewValue(prevValue => {\n            return{\n                ...prevValue,\n                [name]: value\n            }; \n        });\n\n        console.log(newValue);\n    }\n\n    return (\n        <div>\n    <Header />\n    <img src=\"https://www.hohcs.org.hk/App/Modules/Admin/Tpl/Static/upload/image/20170418/20170418125117_21846.png\" className=\"formIcon\"/>\n\n    \n    <Form className=\"inputForm\" onSubmit={handleSubmit}>\n    <Container>\n   \n            <FormGroup>\n                <Form.Label className=\"inputLabel\">名稱:</Form.Label>\n                <Form.Control placeholder={fields[0]} size=\"lg\" onChange={handleChange} value={newValue.username} name=\"username\"></Form.Control>\n            </FormGroup>\n        <FormGroup>\n            <Form.Label className=\"inputLabel\">電郵:</Form.Label>\n            <InputGroup>\n                <Form.Control placeholder={fields[1]} size=\"lg\" name=\"email\" type=\"text\" onChange={handleChange} value={newValue.email} className=\"input\"></Form.Control>\n                <InputGroup.Append>\n                    <InputGroup.Text>@hohsc.org.hk</InputGroup.Text>\n                </InputGroup.Append>\n            </InputGroup> \n        </FormGroup>\n        \n            \n\n            <FormGroup>\n                <Form.Label className=\"inputLabel\">職員編號:</Form.Label>\n                <Form.Control placeholder={fields[2]} size=\"lg\" onChange={handleChange} value={newValue.staffid} name=\"staffid\"></Form.Control>\n            </FormGroup>\n\n            <FormGroup>\n                <Form.Label className=\"inputLabel\">職位:</Form.Label>\n                <Form.Control placeholder={fields[3]} size=\"lg\" onChange={handleChange} value={newValue.post} name=\"post\"></Form.Control>\n            </FormGroup>\n\n            <FormGroup>\n                <Form.Label className=\"inputLabel\">單位:</Form.Label>\n                <Form.Control placeholder={fields[4]} size=\"lg\" onChange={handleChange} value={newValue.dept} name=\"dept\"></Form.Control>\n            </FormGroup>\n\n            <FormGroup>\n                <Form.Label className=\"inputLabel\">報讀課程:</Form.Label>\n                <Form.Control size=\"lg\" onChange={handleChange} value={newValue.course} name=\"course\" as=\"select\">\n                    <option>請選擇課程</option>\n                    {courseList.length > 0 && courseList.map(course => {\n                        var date = new Date(course.date);\n                        return <option>{course.courseName} {date.toLocaleDateString()}</option>\n                    })}\n                </Form.Control>\n            </FormGroup>\n\n\n            <Button variant=\"primary\" size=\"lg\" type=\"submit\">提交</Button>\n\n            <Button variant=\"danger\" size=\"lg\" onClick={clearInput}>清除所有資料</Button>\n\n    </Container>\n    </Form>\n    <Footer role={role}/>\n    </div>\n    );\n}\n\nexport default ApplicationForm;"]},"metadata":{},"sourceType":"module"}