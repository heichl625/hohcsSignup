{"ast":null,"code":"import _slicedToArray from\"/Users/cheukheilo/Desktop/hohcsSignup/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Navigator from'./Navigator';import CourseDetail from'./CourseDetail';import Nav from'react-bootstrap/Nav';export default function Admin(){var initialCourse=[{_id:\"\",couseName:\"\",date:\"\",time:\"\",venue:\"\",quota:0,tutor:\"\",description:\"\"}];var _useState=useState(initialCourse),_useState2=_slicedToArray(_useState,2),courses=_useState2[0],setCourses=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),selectedID=_useState4[0],setSelectedID=_useState4[1];var _useState5=useState(initialCourse[0]),_useState6=_slicedToArray(_useState5,2),courseToParse=_useState6[0],setCourseToParse=_useState6[1];useEffect(function(){var url='/adminTodayCourse';var options={method:'GET',headers:{'Accept':'application/json'}};fetch(url,options).then(function(res){return res.json();}).then(function(res){if(courses===initialCourse){setCourses(res);}});setCourseToParse(courses.find(function(course){return course._id===selectedID;}));});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Navigator,null),/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"sidebarTitle\"},\"\\u4ECA\\u5929\\u8AB2\\u7A0B\"),/*#__PURE__*/React.createElement(Nav,{defaultActiveKey:\"\",className:\"flex-column\",onSelect:function onSelect(selectedKey){return setSelectedID(selectedKey);}},courses.map(function(course){var date=new Date(course.date);return/*#__PURE__*/React.createElement(Nav.Link,{eventKey:course._id,className:\"courseLink\"},course.courseName,\" \",date.toLocaleDateString());}),courses.length===0&&/*#__PURE__*/React.createElement(\"p\",{className:\"noCourse\"},\"\\u4ECA\\u5929\\u6C92\\u6709\\u8AB2\\u7A0B\"))),selectedID&&/*#__PURE__*/React.createElement(CourseDetail,{selectedCourse:courseToParse}));}","map":{"version":3,"sources":["/Users/cheukheilo/Desktop/hohcsSignup/client/src/components/Adminastrative/Admin.jsx"],"names":["React","useState","useEffect","Navigator","CourseDetail","Nav","Admin","initialCourse","_id","couseName","date","time","venue","quota","tutor","description","courses","setCourses","selectedID","setSelectedID","courseToParse","setCourseToParse","url","options","method","headers","fetch","then","res","json","find","course","selectedKey","map","Date","courseName","toLocaleDateString","length"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CAIA,cAAe,SAASC,CAAAA,KAAT,EAAgB,CAE3B,GAAMC,CAAAA,aAAa,CAAG,CAAC,CACnBC,GAAG,CAAE,EADc,CAEnBC,SAAS,CAAE,EAFQ,CAGnBC,IAAI,CAAE,EAHa,CAInBC,IAAI,CAAE,EAJa,CAKnBC,KAAK,CAAE,EALY,CAMnBC,KAAK,CAAE,CANY,CAOnBC,KAAK,CAAE,EAPY,CAQnBC,WAAW,CAAE,EARM,CAAD,CAAtB,CAF2B,cAaEd,QAAQ,CAACM,aAAD,CAbV,wCAarBS,OAbqB,eAaZC,UAbY,8BAcShB,QAAQ,CAAC,EAAD,CAdjB,yCAcpBiB,UAdoB,eAcRC,aAdQ,8BAeelB,QAAQ,CAACM,aAAa,CAAC,CAAD,CAAd,CAfvB,yCAepBa,aAfoB,eAeLC,gBAfK,eAiB3BnB,SAAS,CAAC,UAAM,CAEZ,GAAMoB,CAAAA,GAAG,CAAG,mBAAZ,CACA,GAAMC,CAAAA,OAAO,CAAG,CACZC,MAAM,CAAE,KADI,CAEZC,OAAO,CAAE,CACP,SAAU,kBADH,CAFG,CAAhB,CAOAC,KAAK,CAACJ,GAAD,CAAMC,OAAN,CAAL,CACCI,IADD,CACM,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADT,EAECF,IAFD,CAEM,SAAAC,GAAG,CAAI,CACT,GAAGZ,OAAO,GAAKT,aAAf,CAA6B,CACzBU,UAAU,CAACW,GAAD,CAAV,CACH,CACJ,CAND,EAQAP,gBAAgB,CAACL,OAAO,CAACc,IAAR,CAAa,SAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACvB,GAAP,GAAeU,UAAnB,EAAnB,CAAD,CAAhB,CACH,CAnBQ,CAAT,CAsBA,mBACI,4CACI,oBAAC,SAAD,MADJ,cAEI,2BAAK,SAAS,CAAC,SAAf,eAEI,0BAAI,SAAS,CAAC,cAAd,6BAFJ,cAII,oBAAC,GAAD,EAAK,gBAAgB,CAAC,EAAtB,CAAyB,SAAS,CAAC,aAAnC,CAAiD,QAAQ,CAAE,kBAACc,WAAD,QAAiBb,CAAAA,aAAa,CAACa,WAAD,CAA9B,EAA3D,EAEKhB,OAAO,CAACiB,GAAR,CAAY,SAAAF,MAAM,CAAI,CACnB,GAAMrB,CAAAA,IAAI,CAAG,GAAIwB,CAAAA,IAAJ,CAASH,MAAM,CAACrB,IAAhB,CAAb,CACA,mBAAO,oBAAC,GAAD,CAAK,IAAL,EAAU,QAAQ,CAAEqB,MAAM,CAACvB,GAA3B,CAAgC,SAAS,CAAC,YAA1C,EAAwDuB,MAAM,CAACI,UAA/D,KAA4EzB,IAAI,CAAC0B,kBAAL,EAA5E,CAAP,CACH,CAHA,CAFL,CAOKpB,OAAO,CAACqB,MAAR,GAAmB,CAAnB,eAAwB,yBAAG,SAAS,CAAC,UAAb,yCAP7B,CAJJ,CAFJ,CAmBMnB,UAAU,eAAI,oBAAC,YAAD,EAAc,cAAc,CAAEE,aAA9B,EAnBpB,CADJ,CAyBH","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Navigator from './Navigator';\nimport CourseDetail from './CourseDetail';\nimport Nav from 'react-bootstrap/Nav';\n\n\n\nexport default function Admin(){\n\n    const initialCourse = [{\n        _id: \"\",\n        couseName: \"\",\n        date: \"\",\n        time: \"\",\n        venue: \"\",\n        quota: 0,\n        tutor: \"\",\n        description: \"\"\n    }];\n\n    const[courses, setCourses] = useState(initialCourse);\n    const [selectedID, setSelectedID] = useState(\"\");\n    const [courseToParse, setCourseToParse] = useState(initialCourse[0]);\n\n    useEffect(() => {\n\n        const url = '/adminTodayCourse';\n        const options = {\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json',\n            },\n        };\n\n        fetch(url, options)\n        .then(res => res.json())\n        .then(res => {\n            if(courses === initialCourse){\n                setCourses(res);\n            }\n        })\n\n        setCourseToParse(courses.find(course => course._id === selectedID));\n    })\n\n\n    return (\n        <div>\n            <Navigator />\n            <div className=\"sidebar\">\n\n                <h4 className=\"sidebarTitle\">今天課程</h4>\n\n                <Nav defaultActiveKey=\"\" className=\"flex-column\" onSelect={(selectedKey) => setSelectedID(selectedKey)}>\n\n                    {courses.map(course => {\n                        const date = new Date(course.date);\n                        return <Nav.Link eventKey={course._id} className=\"courseLink\">{course.courseName} {date.toLocaleDateString()}</Nav.Link>\n                    })}\n\n                    {courses.length === 0 && <p className=\"noCourse\">今天沒有課程</p>}\n\n                </Nav>\n            \n            </div>\n            \n            { selectedID && <CourseDetail selectedCourse={courseToParse}/> }\n                \n        \n    </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}