{"ast":null,"code":"var _jsxFileName = \"/Volumes/Ext_drive/Web Development/hohcssignup/Frontend/src/components/Adminastrative/Admin.jsx\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navigator from './Navigator';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CourseDetail from './CourseDetail';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Nav from 'react-bootstrap/Nav';\nimport qs from 'qs';\nexport default function Admin() {\n  const initialCourse = [{\n    _id: \"\",\n    couseName: \"\",\n    date: \"\",\n    time: \"\",\n    venue: \"\",\n    quota: 0,\n    tutor: \"\",\n    description: \"\"\n  }];\n  const [courseSelected, setCourseSelected] = useState({});\n  const [courses, setCourses] = useState(initialCourse);\n  useEffect(() => {\n    const url = 'http://localhost:5000/course';\n    const options = {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json'\n      }\n    };\n    fetch(url, options).then(res => res.json()).then(res => {\n      if (res !== initialCourse) {\n        setCourses(res);\n      }\n    });\n  });\n\n  function handleClick(event) {\n    console.log(event.target.textContent);\n    var element = document.getElementsByClassName('linkSelected')[0];\n\n    if (element) {\n      element.classList.remove('linkSelected');\n    }\n\n    event.target.classList.add('linkSelected');\n    const courseName = event.target.textContent;\n\n    for (const course of courses) {\n      if (course.courseName === courseName) {\n        setCourseSelected(course);\n        localStorage.setItem(\"courseSelected\", qs.stringify(course));\n        break;\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 2,\n    className: \"courseList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    defaultActiveKey: \"/home\",\n    className: \"flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, courses.map(course => {\n    return /*#__PURE__*/React.createElement(Nav.Link, {\n      key: course._id,\n      onClick: handleClick,\n      className: \"courseLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 32\n      }\n    }, course.courseName);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: 10,\n    className: \"courseDetail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CourseDetail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Volumes/Ext_drive/Web Development/hohcssignup/Frontend/src/components/Adminastrative/Admin.jsx"],"names":["React","useState","BrowserRouter","Router","Switch","Route","Navigator","Row","Col","CourseDetail","ListGroup","Nav","qs","Admin","initialCourse","_id","couseName","date","time","venue","quota","tutor","description","courseSelected","setCourseSelected","courses","setCourses","useEffect","url","options","method","headers","fetch","then","res","json","handleClick","event","console","log","target","textContent","element","document","getElementsByClassName","classList","remove","add","courseName","course","localStorage","setItem","stringify","map"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navigator from './Navigator';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CourseDetail from './CourseDetail';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Nav from 'react-bootstrap/Nav';\nimport qs from 'qs';\n\n\n\nexport default function Admin(){\n\n    const initialCourse = [{\n        _id: \"\",\n        couseName: \"\",\n        date: \"\",\n        time: \"\",\n        venue: \"\",\n        quota: 0,\n        tutor: \"\",\n        description: \"\"\n    }];\n\n    const [courseSelected, setCourseSelected] = useState({});\n\n    const[courses, setCourses] = useState(initialCourse)\n\n    useEffect(() => {\n        const url = 'http://localhost:5000/course';\n        const options = {\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json',\n            },\n        };\n\n        fetch(url, options)\n        .then(res => res.json())\n        .then(res => {\n            if(res !== initialCourse){\n                setCourses(res);\n            }\n        })\n    })\n\n    \n\n    function handleClick(event){\n        console.log(event.target.textContent);\n\n        var element = document.getElementsByClassName('linkSelected')[0]\n        \n        if(element){\n            element.classList.remove('linkSelected');\n        }\n        event.target.classList.add('linkSelected');\n\n        const courseName = event.target.textContent;\n\n        for (const course of courses) {\n            if(course.courseName === courseName){\n                setCourseSelected(course);\n                localStorage.setItem(\"courseSelected\", qs.stringify(course));\n                break;\n            }\n        }\n\n    }\n\n\n    return (\n    <Router>\n        <Navigator />\n        <Row>\n            <Col lg={2} className=\"courseList\">\n                <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\n                    {courses.map(course => {\n                        return <Nav.Link key={course._id} onClick={handleClick} className=\"courseLink\">{course.courseName}</Nav.Link>\n                    })}\n                </Nav>\n            </Col>\n\n            <Col lg={10} className=\"courseDetail\">\n                    \n                    <CourseDetail />\n                \n            </Col>\n        \n        </Row>\n    </Router>\n    );\n}"]},"metadata":{},"sourceType":"module"}