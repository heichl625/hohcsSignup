{"ast":null,"code":"var _jsxFileName = \"/Volumes/Ext_drive/Web Development/hohcssignup/Frontend/src/components/Adminastrative/CourseDetail.jsx\";\nimport React, { useState } from 'react';\nimport qs from 'qs';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport EnrollDetail from './EnrollDetail';\nexport default function CourseDetail(props) {\n  console.log(props);\n  const courseSelectedStr = localStorage.getItem('courseSelected');\n  const courseSelected = qs.parse(courseSelectedStr);\n  const date = new Date(courseSelected.date);\n  const [getCourseDetail, setGetCourseDetail] = useState(false);\n  const [courseDetail, setCourseDetail] = useState({});\n\n  function handleClick() {\n    const courseID = courseSelected._id;\n    const url = 'http://localhost:5000/enrollDetail';\n    const options = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: qs.stringify({\n        courseID: courseID\n      })\n    };\n    fetch(url, options).then(res => res.json()).then(res => {\n      if (res.message === \"未有報名記錄\") {\n        alert(res.message);\n      } else {\n        setGetCourseDetail(true);\n        setCourseDetail(res);\n      }\n    });\n  }\n\n  if (getCourseDetail) {\n    return /*#__PURE__*/React.createElement(EnrollDetail, {\n      courseDetail: courseDetail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, console.log(getCourseDetail), /*#__PURE__*/React.createElement(Card, {\n    className: \"courseCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    as: \"h3\",\n    className: \"courseTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, courseSelected.courseName), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    className: \"courseDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, courseSelected.description), /*#__PURE__*/React.createElement(Card.Text, {\n    className: \"courseInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"\\u4E0A\\u8AB2\\u65E5\\u671F: \", date.toLocaleDateString(), \" \", courseSelected.time), /*#__PURE__*/React.createElement(Card.Text, {\n    className: \"courseInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"\\u4E0A\\u8AB2\\u5730\\u9EDE: \", courseSelected.venue), /*#__PURE__*/React.createElement(Card.Text, {\n    className: \"courseInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"\\u8AB2\\u7A0B\\u5C0E\\u5E2B: \", courseSelected.tutor), /*#__PURE__*/React.createElement(Card.Text, {\n    className: \"courseInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"\\u5C1A\\u9918\\u540D\\u984D: \", courseSelected.quota), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    className: \"adminEnrollRecordBtn\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"\\u67E5\\u770B\\u5831\\u540D\\u60C5\\u6CC1\"))));\n}","map":{"version":3,"sources":["/Volumes/Ext_drive/Web Development/hohcssignup/Frontend/src/components/Adminastrative/CourseDetail.jsx"],"names":["React","useState","qs","Card","Button","Redirect","EnrollDetail","CourseDetail","props","console","log","courseSelectedStr","localStorage","getItem","courseSelected","parse","date","Date","getCourseDetail","setGetCourseDetail","courseDetail","setCourseDetail","handleClick","courseID","_id","url","options","method","headers","body","stringify","fetch","then","res","json","message","alert","courseName","description","toLocaleDateString","time","venue","tutor","quota"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAEzCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEE,QAAMG,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAA1B;AACA,QAAMC,cAAc,GAAGZ,EAAE,CAACa,KAAH,CAASJ,iBAAT,CAAvB;AAEA,QAAMK,IAAI,GAAG,IAAIC,IAAJ,CAASH,cAAc,CAACE,IAAxB,CAAb;AAEA,QAAM,CAACE,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,KAAD,CAAtD;AAEA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,EAAD,CAAhD;;AAEA,WAASqB,WAAT,GAAsB;AAEpB,UAAMC,QAAQ,GAAGT,cAAc,CAACU,GAAhC;AAEA,UAAMC,GAAG,GAAG,oCAAZ;AACE,UAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,MADI;AAEZC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAFG;AAMZC,MAAAA,IAAI,EAAE3B,EAAE,CAAC4B,SAAH,CAAa;AAACP,QAAAA,QAAQ,EAAEA;AAAX,OAAb;AANM,KAAhB;AASAQ,IAAAA,KAAK,CAACN,GAAD,EAAMC,OAAN,CAAL,CACCM,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMC,GAAG,IAAI;AACT,UAAGA,GAAG,CAACE,OAAJ,KAAgB,QAAnB,EAA4B;AAC1BC,QAAAA,KAAK,CAACH,GAAG,CAACE,OAAL,CAAL;AACD,OAFD,MAEK;AACHhB,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAE,QAAAA,eAAe,CAACY,GAAD,CAAf;AACD;AACJ,KATD;AAWH;;AAED,MAAGf,eAAH,EAAmB;AACjB,wBAAO,oBAAC,YAAD;AAAc,MAAA,YAAY,EAAEE,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAGD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,OAAO,CAACC,GAAR,CAAYQ,eAAZ,CADL,eAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,SAAS,EAAC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CJ,cAAc,CAACuB,UAA7D,CADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CvB,cAAc,CAACwB,WAA1D,CADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAyCtB,IAAI,CAACuB,kBAAL,EAAzC,OAAqEzB,cAAc,CAAC0B,IAApF,CAFF,eAGE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAyC1B,cAAc,CAAC2B,KAAxD,CAHF,eAIE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAyC3B,cAAc,CAAC4B,KAAxD,CAJF,eAKE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAyC5B,cAAc,CAAC6B,KAAxD,CALF,eAME,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,SAAS,EAAC,sBAApC;AAA2D,IAAA,OAAO,EAAErB,WAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CANF,CAFF,CAFJ,CADJ;AAmBH","sourcesContent":["import React, { useState } from 'react';\nimport qs from 'qs';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport EnrollDetail from './EnrollDetail';\n\nexport default function CourseDetail(props){\n\n  console.log(props);\n\n    const courseSelectedStr = localStorage.getItem('courseSelected');\n    const courseSelected = qs.parse(courseSelectedStr);\n\n    const date = new Date(courseSelected.date);\n\n    const [getCourseDetail, setGetCourseDetail] = useState(false);\n\n    const [courseDetail, setCourseDetail] = useState({});\n\n    function handleClick(){\n\n      const courseID = courseSelected._id;\n\n      const url = 'http://localhost:5000/enrollDetail';\n        const options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: qs.stringify({courseID: courseID})\n        };\n\n        fetch(url, options)\n        .then(res => res.json())\n        .then(res => {\n            if(res.message === \"未有報名記錄\"){\n              alert(res.message)\n            }else{\n              setGetCourseDetail(true);\n              setCourseDetail(res);\n            }\n        })\n\n    }\n\n    if(getCourseDetail){\n      return <EnrollDetail courseDetail={courseDetail}/>\n    }\n    \n    \n    return(\n        <div>\n            {console.log(getCourseDetail)}\n            <Card className=\"courseCard\">\n              <Card.Header as=\"h3\" className=\"courseTitle\">{courseSelected.courseName}</Card.Header>\n              <Card.Body>\n                <Card.Title className=\"courseDescription\">{courseSelected.description}</Card.Title>\n                <Card.Text className=\"courseInfo\">上課日期: {date.toLocaleDateString()} {courseSelected.time}</Card.Text>\n                <Card.Text className=\"courseInfo\">上課地點: {courseSelected.venue}</Card.Text>\n                <Card.Text className=\"courseInfo\">課程導師: {courseSelected.tutor}</Card.Text>\n                <Card.Text className=\"courseInfo\">尚餘名額: {courseSelected.quota}</Card.Text>\n                <Button variant=\"primary\" className=\"adminEnrollRecordBtn\" onClick={handleClick}>查看報名情況</Button>\n              </Card.Body>\n            </Card>\n\n\n        </div>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}